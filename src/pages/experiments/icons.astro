---
import BaseHead from "~/components/BaseHead.astro";
import Header from "~/components/Header.astro";
import Icon, { type IconName } from "~/components/Icon.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "~/config";

// Get all available icons from the Icon component
const icons = [
	"copy",
	"bulleted-list",
	"document",
	"external-link",
	"folder",
	"help",
	"industry",
	"info",
	"quote",
	"journal",
	"chain-link",
	"list",
	"note",
	"notes",
	"opened-folder",
	"person-overview",
	"reference-block",
	"network",
	"search",
	"tag",
	"skills",
	"sources",
	"share",
	"table-view",
	"task",
	"essay",
	"link",
	"back",
	"mention",
	"references",
	"book",
	"tracking-or-journey",
	"email",
	"text-message",
].sort();
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title="Icon Sprite Gallery" description="Display of all available icons from the icon sprite" />
	</head>
	<body>
		<Header />
		<main>
			<section class="icon-grid">
				{
					icons.map((iconName) => (
						<div class="icon-card">
							<div class="icon-display">
								<Icon name={iconName as IconName} size={32} />
							</div>
							<div class="icon-info">
								<code class="icon-name">{iconName}</code>
							</div>
						</div>
					))
				}
			</section>
		</main>
	</body>
</html>

<style>
	.icon-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(8rem, 1fr));
		gap: 1rem;
		padding: 1rem;
	}

	.icon-card {
		/* border: 1px solid var(--border-dim); */
		border-radius: 8px;
		padding: 1rem;
		background: var(--card-bg);
		transition: all 0.2s ease-in-out;
	}

	.icon-card:hover {
		background: var(--card-bg-hover);
		/* border-color: var(--color-text); */
		/* transform: translateY(-2px); */
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
	}

	.icon-display {
		display: flex;
		align-items: center;
		justify-content: center;
		aspect-ratio: 1;
		margin-bottom: 1rem;
		border-radius: 4px;
		background: var(--background-color);
		border: 1px solid var(--border-dim);
	}

	.icon-info {
		text-align: center;
	}

	.icon-name {
		display: block;
		font-family: var(--font-family-mono, "Courier New", monospace);
		font-size: 0.75rem;
		color: var(--color-text);
		background: var(--shade-10);
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
		margin-bottom: 0.75rem;
		/* word-break: break-all; */
	}

	.usage-examples {
		margin-top: 0.75rem;
	}

	details {
		cursor: pointer;
	}

	summary {
		font-size: 0.85rem;
		color: var(--text-dim);
		padding: 0.25rem;
		border-radius: 4px;
		transition: background 0.2s ease-in-out;
	}

	summary:hover {
		background: var(--shade-10);
	}

	.code-examples {
		margin-top: 0.75rem;
		text-align: left;
		font-size: 0.8rem;
	}

	.code-examples > div {
		margin-bottom: 0.75rem;
	}

	.code-examples strong {
		display: block;
		margin-bottom: 0.25rem;
		color: var(--color-text);
		font-size: 0.75rem;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.code-examples code {
		display: block;
		background: var(--shade-10);
		padding: 0.5rem;
		border-radius: 4px;
		font-family: var(--font-family-mono, "Courier New", monospace);
		font-size: 0.75rem;
		line-height: 1.4;
		word-break: break-all;
		color: var(--color-text);
		border: 1px solid var(--border-dim);
	}

	@media (max-width: 768px) {
		main {
			padding: 1rem;
		}

		.icon-grid {
			grid-template-columns: 1fr;
		}

		header h1 {
			font-size: 2rem;
		}
	}
</style>
