---
import { getCollection } from "astro:content";
import BaseHead from "~/components/BaseHead.astro";
import Footer from "~/components/Footer.astro";
import Header from "~/components/Header.astro";
import BlogCard from "~/components/search/BlogCard.astro";
import WikiCard from "~/components/search/WikiCard.astro";
import getAllCategories from "~/utils/get-all-categories";
import SearchForm from "~/components/search/SearchForm.astro";
import { getThemeClass } from "~/utils/get-theme-class";
const theme = Astro.cookies.get("dark");
const themeClass = getThemeClass(theme);
const wikiEntries = await getCollection("wiki");
const blogEntries = await getCollection("writing");
const { map } = getAllCategories(wikiEntries);

const query = Astro.url.searchParams.get("q");

let results = null;

if (query) {
	const response = await fetch(`${Astro.url.origin}/api/search?q=${query}&type=all`);
	const data = await response.json();

	results = data.map((entry: { slug: string; type: string }) => {
		if (entry.type === "blog") {
			return {
				type: "blog",
				...blogEntries.find((e) => e.id === entry.slug),
			};
		}

		return {
			type: "wiki",
			...wikiEntries.find((e) => e.id === entry.slug),
		};
	});
}
---

<html lang="en" class={themeClass}>
	<head>
		<BaseHead title="Search" description="Search" />
	</head>
	<body>
		<Header />

		<section>
			<header>
				<h2>Search</h2>
				<p>It's vibe-based</p>
			</header>
			<div>
				<SearchForm value={query ?? ""} />

				{
					results && (
						<ul>
							{results.map((entry: any) =>
								entry.type === "blog" ? (
									<li>
										<BlogCard entry={entry} />
									</li>
								) : (
									<WikiCard entry={entry} map={map} />
								),
							)}
						</ul>
					)
				}
			</div>
		</section>

		<Footer />
	</body>
</html>

<style>
	body {
		display: flex;
		flex-direction: column;
	}

	section {
		flex-grow: 1;
	}

	ul {
		display: grid;
		list-style: none;
		grid-template-columns: 1fr 1fr;
		gap: 1rem;
		margin: 0;
		padding: 0;
	}

	@media (max-width: 512px) {
		ul {
			grid-template-columns: 1fr;
		}
	}
</style>
