[["Map",1,2,9,10,1018,1019],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.1.1","content-config-digest","1219a4c271f45346","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://sambreed.dev\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"index.js\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{\"/writing/links-part-one\":\"/writing/2022/links-part-one.html\",\"/writing/links-part-one.html\":\"/writing/2022/links-part-one.html\",\"/writing/links-august-2022.html\":\"/writing/2022/links-august-2022.html\",\"/writing/links-december-2022\":\"/writing/2022/links-december-2022\",\"/writing/links-april-2023.html\":\"/writing/2023/links-april-2023\",\"/writing/links-august-2023\":\"/writing/2023/links-august-2023\",\"/writing/links-feb-2023\":\"/writing/2023/links-feb-2023\",\"/writing/links-january-2023\":\"/writing/2023/links-january-2023\",\"/writing/links-july-2023\":\"/writing/2023/links-july-2023\",\"/writing/links-june-2023\":\"/writing/2023/links-june-2023\",\"/writing/links-march-2023\":\"/writing/2023/links-march-2023\",\"/writing/links-may-2023\":\"/writing/2023/links-may-2023\",\"/writing/links-oct-2023\":\"/writing/2023/links-oct-2023\",\"/writing/links-sept-2023\":\"/writing/2023/links-sept-2023\"},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"one-dark-pro\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null],\"rehypePlugins\":[null],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false},\"legacy\":{\"collections\":false}}","writing",["Map",11,12,31,32,48,49,63,64,84,85,102,103,121,122,138,139,157,158,174,175,198,199,217,218,243,244,274,275,308,309,327,328,357,358,372,373,390,391,405,406,433,434,471,472,490,491,521,522,550,551,579,580,602,603,632,633,663,664,687,688,732,733,761,762,813,814,849,850,869,870,894,895,925,926,944,945,976,977,990,991],"2007.html",{"id":11,"data":13,"body":17,"filePath":18,"digest":19,"rendered":20},{"title":14,"description":15,"pubDate":16},"2007","In 2007 I had no job, no insurance, and was in debt. But it was still a good year.","Aug 16 2017","# 2007\n\nIn January of 2007 I was 20 years old.\n\nI had no job.\n\nI could no longer afford to pay for college and simultaneously failed out.\n\nThen I got a D.U.I.\n\nThen I wrecked my car.\n\nWith no license. And no insurance. And in an accident with another vehicle. I had to beg my brother to loan me money to fix the other car. Meanwhile, my car sat unmoving and wrecked, collecting parking tickets until I sold it, as is, for next to nothing.\n\nWhen I did get a job, it only paid $9 an hour. For 32 hours a week. Technically part time.\n\nIn 2007 I didn't have health insurance. In January, I had a three day fever and my tonsils were swollen enough to justify visit to the Emergency Room without health insurance. I watched Prince's infamous Super Bowl halftime show in the ER waiting room. \n\nIt would be three years before I would pay the bill for the hospital trip that night, which would ruin my credit and follow me for years afterwards.\n\nIn 2007 I owed the University of Colorado $12,000. The tuition for the semester that I didn't finish. Eventually, it sent to collections, which I ignored while it accrued 20% annual interest for four years.\n\nIn 2007, my girlfriend and I became very good at grocery store math, because having to put stuff back after it was rung up was mortifying. A year earlier I had been living off a trust fund; the payments had stopped that winter.\n\n2007 was the worst year of my life.\n\nBut it was also one of the best.\n\n2007 was the year I moved in with my then-girlfriend (and now-wife.)\n\nI got promoted to assistant manager at the retail job. My pay was raised to $11 an hour, and I would get 36 hours a week on the schedule. That extra $108 a week was a lot of money. It meant less math at the grocery store.\n\nMy wife and I adopted a beat up little shelter dog that winter and named him Jack. He's still here, but now he's old and cranky after 10 years of being doted on and loved unconditionally.\n\n2007 was the year I started riding a bike (at first for transportation, then for fun) and picked up skateboarding again (for fun, then transportation.)\n\n2007 was the year I started taking any job on any film shoot I could find that would take me. Most of them were unpaid, on the hope of paid gigs in the future.\n\nAnd 2007 was the year I started to code.\n\nI used the money from selling the car to buy a white plastic MacBook. My PowerBook from college had finally died that fall. I remember tracking the shipment from the pc in the back office at work and racing home on my bike during my lunch so the package wouldn't get stolen.\n\n> It was the first computer I would get paid to write code on.\n\nI was so excited to get that computer. I used it to climb out of debt and into a career I love. In 2007 I would write my first website and re-discover the love of building stuff on the internet that I had honed a decade earlier on Geocities and Tripod and Angelfire (and later, MySpace profiles.)\n\nThat year I listened to MGMT, Peter, Bjorn and John, and Kanye West. I can remember riding my bike to those albums as fall in Boulder started to turn cold.\n\n\u003Chr class=\"mv4 bt b--red\" />\n\n## 2008\n\nAcross town, TechStars was hosting its first class. A year later one of those companies would be acquired by AOL for seven figures. One night at a local meetup the founder of that company, who was only a year or two older than me, ended his presentation by throwing $500 in singles into the air. For him, it must have been a moment of jubilant celebration, but I don't remember the point I was trying to make. From the back row of the auidence, as a 22 year old college drop-out still working in retail and trying to get in to the Boulder tech community, I only remember the hot pang of shame and regret for not being \"in\" already. For not having $500 to throw in the air.\n\nThat guy is still around and I still hate him for doing that. It made me feel so worthless in that moment. I didn't have a job in tech yet, despite wanting one, and was only slightly better off than I had been a year earlier. And here comes some jerkoff that was first given money for a fucking _idea_ and then turned around and _sold_ it for even more money! _Why couldn't I do that?_\n\nA year earlier I was excited to get a raise for less money than he just threw on the ground.\n\nThat night fueled my resolve to work as hard as I could to never feel that way again. Poor and put out. An outsider looking in. And it gave me a model of something I never wanted to do.\n\nI saw a tweet from that guy today. It got me thinking about that night and the terribly un-fun year before it. The funny thing is that he doesn't even know me. But he pissed me off so badly a decade ago that I'm still stewing about it now.\n\nBut that night wasn't all bad.\n\nThat was also the night I would meet [Ingrid](https://twitter.com/electromute), who would eventually be my co-founder at Quick Left. But we wouldn't know that for another year. We just hung out and talked about bikes and software.\n\nAnd maybe I owe something to the guy who threw the money after all. After that I started hustling for web design jobs on Craigslist and less than a year later I would have a full time job. That job turned into Quick Left, a company that I would become a founder of and lead for 6 years.\n\n\u003Chr class=\"mv4 bt b--red\" />\n\n2007 and 2008 were when I started to read a lot of science fiction.\n\nThe second retail job had me unpacking boxes, lots of boxes, in the back of an American Apparel. I listened to Isaac Asimov and Robert Heinlein for the first time back there. I would fold t-shirts thinking about Psychohistory and the Seldon Plan.\n\nI found a used bookstore that my girlfriend and I would ride our bikes to, our backpacks bulging with paperbacks on the way home. Science Fiction was a great way to escape my broke-and-scary Non Fiction reality.\n\nThen I fell hard for the work of Philip K. Dick. _A Scanner Darkly_ had been made into a movie by Richard Linklater the year before. A well-adapted and underrated movie, it's still one of my favorites. I listened to the audiobook version, recorded by Paul Giamatti, and then devoured the paperback.\n\nI was so desperate to have a copy but I couldn't wait for a copy to show up at the used bookstore, so I condescended to buy it new from Borders. The only copy at Borders was the kind with the movie poster on it, the type that _everyone_ hates on because it's the most backwards type of marketing, and never lasts for more than one edition. The one way you can make a good book less good is by forever shackling it to the most recent film adaptation. If the book has something to gain via association with the movie adaptation, you can safely skip the book.\n\nI still have that copy of _A Scanner Darkly_, with Keanu and Winona and pre-Iron Man Robert Downey Jr. on the cover. I hate the cover, but I love the book so I can't get rid of it.\n\nThe text inside is too good.\n\n> But in this dark world where he now dwelt, ugly things and surprising things and once in a long while a tiny wondrous thing spilled out at him constantly; he could count on nothing.\n\n\u003Ccite>\n— \u003Ci>A Scanner Darkly\u003C/i>, Philip K. Dick\n\u003C/cite>\n\nGood things and bad things can happen in startlingly close proximity. 2007 was a \"bad\" year, but I wouldn't trade any of the lessons it taught me.","src/content/writing/2007.html.md","f6ccc33ed089046c",{"html":21,"metadata":22},"\u003Ch1 id=\"2007\">2007\u003C/h1>\n\u003Cp>In January of 2007 I was 20 years old.\u003C/p>\n\u003Cp>I had no job.\u003C/p>\n\u003Cp>I could no longer afford to pay for college and simultaneously failed out.\u003C/p>\n\u003Cp>Then I got a D.U.I.\u003C/p>\n\u003Cp>Then I wrecked my car.\u003C/p>\n\u003Cp>With no license. And no insurance. And in an accident with another vehicle. I had to beg my brother to loan me money to fix the other car. Meanwhile, my car sat unmoving and wrecked, collecting parking tickets until I sold it, as is, for next to nothing.\u003C/p>\n\u003Cp>When I did get a job, it only paid $9 an hour. For 32 hours a week. Technically part time.\u003C/p>\n\u003Cp>In 2007 I didn’t have health insurance. In January, I had a three day fever and my tonsils were swollen enough to justify visit to the Emergency Room without health insurance. I watched Prince’s infamous Super Bowl halftime show in the ER waiting room.\u003C/p>\n\u003Cp>It would be three years before I would pay the bill for the hospital trip that night, which would ruin my credit and follow me for years afterwards.\u003C/p>\n\u003Cp>In 2007 I owed the University of Colorado $12,000. The tuition for the semester that I didn’t finish. Eventually, it sent to collections, which I ignored while it accrued 20% annual interest for four years.\u003C/p>\n\u003Cp>In 2007, my girlfriend and I became very good at grocery store math, because having to put stuff back after it was rung up was mortifying. A year earlier I had been living off a trust fund; the payments had stopped that winter.\u003C/p>\n\u003Cp>2007 was the worst year of my life.\u003C/p>\n\u003Cp>But it was also one of the best.\u003C/p>\n\u003Cp>2007 was the year I moved in with my then-girlfriend (and now-wife.)\u003C/p>\n\u003Cp>I got promoted to assistant manager at the retail job. My pay was raised to $11 an hour, and I would get 36 hours a week on the schedule. That extra $108 a week was a lot of money. It meant less math at the grocery store.\u003C/p>\n\u003Cp>My wife and I adopted a beat up little shelter dog that winter and named him Jack. He’s still here, but now he’s old and cranky after 10 years of being doted on and loved unconditionally.\u003C/p>\n\u003Cp>2007 was the year I started riding a bike (at first for transportation, then for fun) and picked up skateboarding again (for fun, then transportation.)\u003C/p>\n\u003Cp>2007 was the year I started taking any job on any film shoot I could find that would take me. Most of them were unpaid, on the hope of paid gigs in the future.\u003C/p>\n\u003Cp>And 2007 was the year I started to code.\u003C/p>\n\u003Cp>I used the money from selling the car to buy a white plastic MacBook. My PowerBook from college had finally died that fall. I remember tracking the shipment from the pc in the back office at work and racing home on my bike during my lunch so the package wouldn’t get stolen.\u003C/p>\n\u003Cblockquote>\n\u003Cp>It was the first computer I would get paid to write code on.\u003C/p>\n\u003C/blockquote>\n\u003Cp>I was so excited to get that computer. I used it to climb out of debt and into a career I love. In 2007 I would write my first website and re-discover the love of building stuff on the internet that I had honed a decade earlier on Geocities and Tripod and Angelfire (and later, MySpace profiles.)\u003C/p>\n\u003Cp>That year I listened to MGMT, Peter, Bjorn and John, and Kanye West. I can remember riding my bike to those albums as fall in Boulder started to turn cold.\u003C/p>\n\u003Chr class=\"mv4 bt b--red\">\n\u003Ch2 id=\"2008\">2008\u003C/h2>\n\u003Cp>Across town, TechStars was hosting its first class. A year later one of those companies would be acquired by AOL for seven figures. One night at a local meetup the founder of that company, who was only a year or two older than me, ended his presentation by throwing $500 in singles into the air. For him, it must have been a moment of jubilant celebration, but I don’t remember the point I was trying to make. From the back row of the auidence, as a 22 year old college drop-out still working in retail and trying to get in to the Boulder tech community, I only remember the hot pang of shame and regret for not being “in” already. For not having $500 to throw in the air.\u003C/p>\n\u003Cp>That guy is still around and I still hate him for doing that. It made me feel so worthless in that moment. I didn’t have a job in tech yet, despite wanting one, and was only slightly better off than I had been a year earlier. And here comes some jerkoff that was first given money for a fucking \u003Cem>idea\u003C/em> and then turned around and \u003Cem>sold\u003C/em> it for even more money! \u003Cem>Why couldn’t I do that?\u003C/em>\u003C/p>\n\u003Cp>A year earlier I was excited to get a raise for less money than he just threw on the ground.\u003C/p>\n\u003Cp>That night fueled my resolve to work as hard as I could to never feel that way again. Poor and put out. An outsider looking in. And it gave me a model of something I never wanted to do.\u003C/p>\n\u003Cp>I saw a tweet from that guy today. It got me thinking about that night and the terribly un-fun year before it. The funny thing is that he doesn’t even know me. But he pissed me off so badly a decade ago that I’m still stewing about it now.\u003C/p>\n\u003Cp>But that night wasn’t all bad.\u003C/p>\n\u003Cp>That was also the night I would meet \u003Ca href=\"https://twitter.com/electromute\">Ingrid\u003C/a>, who would eventually be my co-founder at Quick Left. But we wouldn’t know that for another year. We just hung out and talked about bikes and software.\u003C/p>\n\u003Cp>And maybe I owe something to the guy who threw the money after all. After that I started hustling for web design jobs on Craigslist and less than a year later I would have a full time job. That job turned into Quick Left, a company that I would become a founder of and lead for 6 years.\u003C/p>\n\u003Chr class=\"mv4 bt b--red\">\n\u003Cp>2007 and 2008 were when I started to read a lot of science fiction.\u003C/p>\n\u003Cp>The second retail job had me unpacking boxes, lots of boxes, in the back of an American Apparel. I listened to Isaac Asimov and Robert Heinlein for the first time back there. I would fold t-shirts thinking about Psychohistory and the Seldon Plan.\u003C/p>\n\u003Cp>I found a used bookstore that my girlfriend and I would ride our bikes to, our backpacks bulging with paperbacks on the way home. Science Fiction was a great way to escape my broke-and-scary Non Fiction reality.\u003C/p>\n\u003Cp>Then I fell hard for the work of Philip K. Dick. \u003Cem>A Scanner Darkly\u003C/em> had been made into a movie by Richard Linklater the year before. A well-adapted and underrated movie, it’s still one of my favorites. I listened to the audiobook version, recorded by Paul Giamatti, and then devoured the paperback.\u003C/p>\n\u003Cp>I was so desperate to have a copy but I couldn’t wait for a copy to show up at the used bookstore, so I condescended to buy it new from Borders. The only copy at Borders was the kind with the movie poster on it, the type that \u003Cem>everyone\u003C/em> hates on because it’s the most backwards type of marketing, and never lasts for more than one edition. The one way you can make a good book less good is by forever shackling it to the most recent film adaptation. If the book has something to gain via association with the movie adaptation, you can safely skip the book.\u003C/p>\n\u003Cp>I still have that copy of \u003Cem>A Scanner Darkly\u003C/em>, with Keanu and Winona and pre-Iron Man Robert Downey Jr. on the cover. I hate the cover, but I love the book so I can’t get rid of it.\u003C/p>\n\u003Cp>The text inside is too good.\u003C/p>\n\u003Cblockquote>\n\u003Cp>But in this dark world where he now dwelt, ugly things and surprising things and once in a long while a tiny wondrous thing spilled out at him constantly; he could count on nothing.\u003C/p>\n\u003C/blockquote>\n\u003Ccite>\n— \u003Ci>A Scanner Darkly\u003C/i>, Philip K. Dick\n\u003C/cite>\n\u003Cp>Good things and bad things can happen in startlingly close proximity. 2007 was a “bad” year, but I wouldn’t trade any of the lessons it taught me.\u003C/p>",{"headings":23,"imagePaths":29,"frontmatter":30},[24,26],{"depth":25,"slug":14,"text":14},1,{"depth":27,"slug":28,"text":28},2,"2008",[],{"title":14,"slug":11,"description":15,"pubDate":16},"2017-reading-list.html",{"id":31,"data":33,"body":37,"filePath":38,"digest":39,"rendered":40},{"title":34,"description":35,"pubDate":36},"2017 Reading List","A non-exhaustive list of the books I'm reading in 2017","Dec 31 2017","# 2017 Reading List\n\n1. [x] [Digital Gold](http://www.worldcat.org/oclc/930828718) – Nathaniel Popper\n1. [x] [Bed of Procrustes](http://www.worldcat.org/oclc/949639536) – Nassim Taleb\n1. [x] [Machine Learning](http://www.worldcat.org/oclc/960457556) – Ethem Alpaydin\n1. [ ] [Mathematics and the Imagination](http://www.worldcat.org/oclc/868280617) – Edward Kasner and James Newman\n1. [x] [Snow Crash](http://www.worldcat.org/oclc/989979099) – Neil Stephenson\n1. [x] [Capitalist Realism](http://www.worldcat.org/oclc/699737863) – Mark Fisher\n1. [ ] ~~[Being a Beast : adventures across the species divide](http://www.worldcat.org/oclc/957021213) – Charles Foster~~\n1. [x] [On the Move](http://www.worldcat.org/oclc/950976674) – Oliver Sacks\n1. [ ] [The Open Society & Its Enemies](http://www.worldcat.org/oclc/468447420) – Karl Popper\n1. [x] [Neuroplasticity](http://www.worldcat.org/oclc/982257490) – Moheb Costandi\n1. [x] [Universe of Consciousness](http://www.worldcat.org/oclc/817924069) – Gerald M Edelman & Giulio Tononi\n1. [x] [On Trails](http://www.worldcat.org/oclc/962005553) – Robert Moor\n1. [x] [Lawrence in Arabia](http://www.worldcat.org/oclc/900727970) – Scott Anderson\n1. [ ] [Americanah](http://www.worldcat.org/oclc/989503369) – Chimamanda Ngozi Adichie\n1. [x] [Time Travel](http://www.worldcat.org/oclc/966392652) – James Gleick\n1. [x] [Hallucinations](http://www.worldcat.org/oclc/964793272) – Oliver Sacks\n1. [ ] [The Handmaid’s Tale](http://www.worldcat.org/oclc/981550824) – Margaret Atwood\n1. [x] [The Origin of Wealth](http://www.worldcat.org/oclc/695702570) – Eric D. Beinhocker\n1. [x] [Real Estate Investing Loopholes](http://www.worldcat.org/oclc/51998481) – Diane Kennedy and Garret Sutton\n1. [x] [A Random Walk Down Wall Street](http://www.worldcat.org/oclc/951153646) – Burton G. Malkiel\n1. [x] [Antifragile](http://www.worldcat.org/oclc/949639536) – Nassim Taleb (re-read from 2016's list)\n1. [x] [Debugging Teams](http://www.worldcat.org/oclc/925332622) – Brian W. Fitzpatrick and Ben Collins-Sussman\n1. [ ] [Hands-On Machine Learning with Scikit-Learn & TensorFlow](http://www.worldcat.org/oclc/989085713) – Aurélien Géron\n1. [x] [Tragic Design](http://www.worldcat.org/oclc/992492753) – Jonathan Shariat and Cynthia Savard Saucier\n1. [ ] [Barbarians at the Gate](http://www.worldcat.org/oclc/248444643) – Bryan Burrough abd John Helyar\n1. [x] [Orientalism](http://www.worldcat.org/oclc/717738730) – Edward W Said\n1. [x] [How Money Got Free](http://www.worldcat.org/oclc/981123286) – Brian Patrick Eha\n1. [x] [Why Information Grows](http://www.worldcat.org/oclc/945232398) – César Hildago\n1. [x] [Hackers](http://www.worldcat.org/oclc/615926697) – Steven Levy\n1. [ ] [Gödel, Escher, Bach: an Eternal Golden Braid](http://www.worldcat.org/oclc/750541259) – Douglas R. Hofstadter\n1. [x] [The Cathedral and the Bazaar](http://www.worldcat.org/oclc/695866330) – Eric S. Raymond\n1. [x] [Dune](http://www.worldcat.org/oclc/946058566) – Frank Herbert\n1. [x] [Decoding the Universe](http://www.worldcat.org/oclc/72799929) – Charles Seife\n1. [x] [Code](https://www.worldcat.org/oclc/926699676) – Charles Petzold\n1. [x] [The Soul of a New Machine](http://www.worldcat.org/oclc/934422966) – Tracy Kidder\n1. [x] [Payback](https://www.worldcat.org/oclc/864772458) – Margaret Atwood\n1. [x] [We Were 8 Years in Power](http://www.worldcat.org/oclc/1003168303) – Ta-Nehisi Coates\n1. [ ] [One Hundred Years of Solitude](http://www.worldcat.org/oclc/64685014) – Gabriel Garcia Márquez\n1. [x] [I Contain Multitudes](http://www.worldcat.org/oclc/971922979) – Ed Young\n1. [x] [Mean Genes](https://www.worldcat.org/oclc/778420584) – Terry Burnham and Jay Phelan\n1. [x] [The Wisest One in the Room](http://www.worldcat.org/oclc/944380361) – Thomas Gilovich and Lee Ross\n1. [ ] [The Timeless Way of Building](http://www.worldcat.org/oclc/840013131) – Christopher Alexander\n1. [x] [Creativity, Inc.](http://www.worldcat.org/oclc/943261694) – Ed Catmull\n1. [ ] [Still Life With Woodpecker](http://www.worldcat.org/oclc/846915197) – Tom Robbins\n1. [x] [Philip K. Dick: The Last Interview](http://www.worldcat.org/oclc/913844897) – Philip K. Dick\n\n\u003Csmall>\n\n- ~~Strikethrough~~ _Abandoned and back on the shelf_ 🙅‍\n- \u003Cinput type=\"checkbox\" /> In Progress 🙇\n- \u003Cinput type=\"checkbox\" checked=\"checked\" disabled /> Finished! 💁‍\n\n\u003C/small>","src/content/writing/2017-reading-list.html.md","5ecad202f2fd09d8",{"html":41,"metadata":42},"\u003Ch1 id=\"2017-reading-list\">2017 Reading List\u003C/h1>\n\u003Col class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/930828718\">Digital Gold\u003C/a> – Nathaniel Popper\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/949639536\">Bed of Procrustes\u003C/a> – Nassim Taleb\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/960457556\">Machine Learning\u003C/a> – Ethem Alpaydin\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/868280617\">Mathematics and the Imagination\u003C/a> – Edward Kasner and James Newman\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/989979099\">Snow Crash\u003C/a> – Neil Stephenson\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/699737863\">Capitalist Realism\u003C/a> – Mark Fisher\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Cdel>\u003Ca href=\"http://www.worldcat.org/oclc/957021213\">Being a Beast : adventures across the species divide\u003C/a> – Charles Foster\u003C/del>\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/950976674\">On the Move\u003C/a> – Oliver Sacks\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/468447420\">The Open Society &#x26; Its Enemies\u003C/a> – Karl Popper\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/982257490\">Neuroplasticity\u003C/a> – Moheb Costandi\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/817924069\">Universe of Consciousness\u003C/a> – Gerald M Edelman &#x26; Giulio Tononi\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/962005553\">On Trails\u003C/a> – Robert Moor\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/900727970\">Lawrence in Arabia\u003C/a> – Scott Anderson\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/989503369\">Americanah\u003C/a> – Chimamanda Ngozi Adichie\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/966392652\">Time Travel\u003C/a> – James Gleick\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/964793272\">Hallucinations\u003C/a> – Oliver Sacks\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/981550824\">The Handmaid’s Tale\u003C/a> – Margaret Atwood\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/695702570\">The Origin of Wealth\u003C/a> – Eric D. Beinhocker\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/51998481\">Real Estate Investing Loopholes\u003C/a> – Diane Kennedy and Garret Sutton\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/951153646\">A Random Walk Down Wall Street\u003C/a> – Burton G. Malkiel\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/949639536\">Antifragile\u003C/a> – Nassim Taleb (re-read from 2016’s list)\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/925332622\">Debugging Teams\u003C/a> – Brian W. Fitzpatrick and Ben Collins-Sussman\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/989085713\">Hands-On Machine Learning with Scikit-Learn &#x26; TensorFlow\u003C/a> – Aurélien Géron\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/992492753\">Tragic Design\u003C/a> – Jonathan Shariat and Cynthia Savard Saucier\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/248444643\">Barbarians at the Gate\u003C/a> – Bryan Burrough abd John Helyar\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/717738730\">Orientalism\u003C/a> – Edward W Said\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/981123286\">How Money Got Free\u003C/a> – Brian Patrick Eha\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/945232398\">Why Information Grows\u003C/a> – César Hildago\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/615926697\">Hackers\u003C/a> – Steven Levy\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/750541259\">Gödel, Escher, Bach: an Eternal Golden Braid\u003C/a> – Douglas R. Hofstadter\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/695866330\">The Cathedral and the Bazaar\u003C/a> – Eric S. Raymond\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/946058566\">Dune\u003C/a> – Frank Herbert\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/72799929\">Decoding the Universe\u003C/a> – Charles Seife\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"https://www.worldcat.org/oclc/926699676\">Code\u003C/a> – Charles Petzold\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/934422966\">The Soul of a New Machine\u003C/a> – Tracy Kidder\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"https://www.worldcat.org/oclc/864772458\">Payback\u003C/a> – Margaret Atwood\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/1003168303\">We Were 8 Years in Power\u003C/a> – Ta-Nehisi Coates\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/64685014\">One Hundred Years of Solitude\u003C/a> – Gabriel Garcia Márquez\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/971922979\">I Contain Multitudes\u003C/a> – Ed Young\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"https://www.worldcat.org/oclc/778420584\">Mean Genes\u003C/a> – Terry Burnham and Jay Phelan\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/944380361\">The Wisest One in the Room\u003C/a> – Thomas Gilovich and Lee Ross\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/840013131\">The Timeless Way of Building\u003C/a> – Christopher Alexander\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/943261694\">Creativity, Inc.\u003C/a> – Ed Catmull\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Ca href=\"http://www.worldcat.org/oclc/846915197\">Still Life With Woodpecker\u003C/a> – Tom Robbins\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> \u003Ca href=\"http://www.worldcat.org/oclc/913844897\">Philip K. Dick: The Last Interview\u003C/a> – Philip K. Dick\u003C/li>\n\u003C/ol>\n\u003Csmall>\n\u003Cul>\n\u003Cli>\u003Cdel>Strikethrough\u003C/del> \u003Cem>Abandoned and back on the shelf\u003C/em> 🙅‍\u003C/li>\n\u003Cli>\u003Cinput type=\"checkbox\"> In Progress 🙇\u003C/li>\n\u003Cli>\u003Cinput type=\"checkbox\" checked disabled> Finished! 💁‍\u003C/li>\n\u003C/ul>\n\u003C/small>",{"headings":43,"imagePaths":46,"frontmatter":47},[44],{"depth":25,"slug":45,"text":34},"2017-reading-list",[],{"title":34,"slug":31,"description":35,"pubDate":36},"16-open-tabs.html",{"id":48,"data":50,"body":54,"filePath":55,"digest":56,"rendered":57},{"title":51,"description":52,"pubDate":53},"16 open tabs","I have 16 open browser tabs RIGHT NOW","Aug 12 2019","Right now, I have 16 open tabs in my browser.\n\nBy all measures, this is not a lot of tabs. I see people at work that have tab stacks so dense only a single pixel rendering the faintest sliver of each tab. Or multiple windows, 6 or 7 layers deep, each with 10 tabs or more, the tab bar taking up the full width of the screen. I try and do better than that. \n\nI like to treat my work environment with a little more respect by closing things down at the beginning or end of each day, or at very least once a week.\n\nSo that leaves my pc at home. That's where the tabs pile up, unread and unwanted, for weeks on end. I come back to them every day, occasionally adding to them, and sometimes nuking the whole session altogether.\n\nBut on any given day I have an accretion of internet detritus to ponder over. It was Jorge Luis Borges who said that reading is a more intellectual activity than writing; I never read most of them.\n\nHere is the (annotated) list of tabs I currently have open:\n\n* [Pinboard: popular bookmarks](https://pinboard.in/popular/) - I usually have this one open. It's replaced [the orange website](http://n-gate.com/hackernews/) and reddit for me. I don't bookmark very many things these days but I like the format of \"a whole bunch of links\" to peruse\n* [Native lazy-loading for the web  |  web.dev](https://web.dev/native-lazy-loading) - haven't read this yet, sounds like I'll get to continue not writing lazy image loading code and get the whole thing backfilled for me by browser vendors\n* [How to get your first 10 customers](http://danshipper.com/nothing-happens-until-the-sale-is-made) - a link from pinboard I kinda looked at and moved on from\n* [Rust Language Cheat Sheet](https://cheats.rs/) - I bought the Rust book a few months ago and will use it in future projects, so this seems like a keeper\n* [Netflix is not a tech company — Benedict Evans](https://www.ben-evans.com/benedictevans/2019/7/31/Netflix) - in general, I try to avoid thought leaders like Ben Evans, with the exception of him specifically, to be taken with a healthy amount of salt\n* [Getting Real About Distributed System Reliability - Jay Kreps](https://blog.empathybox.com/post/19574936361/getting-real-about-distributed-system-reliability) - I haven't read this yet. I like horror stories about hard problems that involve lots of computers.\n* [Nicomachean Ethics, by Aristotle. Translated by F. H. Peters - Standard Ebooks: Free and liberated ebooks, carefully produced for the true book lover.](https://standardebooks.org/ebooks/aristotle/nicomachean-ethics/f-h-peters) - Nassim Nicholas Taleb turned me on to NICOMACHEAN ETHICS and it's some heavy shit. This is a free ebook version that's not completely fucked.\n* [How to Write a Thesis, According to Umberto Eco | The MIT Press Reader](https://thereader.mitpress.mit.edu/umberto-eco-how-to-write-a-thesis/) - big ups to Umberto Eco, whom I'm totally down with. FOUCAULT'S PENDULUM is a great read, as is his collection of essays, TRAVELS IN HYPERREALITY\n* [Fast Software, the Best Software — by Craig Mod](https://craigmod.com/essays/fast_software/) - this is a name I recognize and might be interesting. Skimmed the title and opened the tab.\n* [History and effective use of Vim](https://begriffs.com/posts/2019-07-19-history-use-vim.html) - heavy nerd shit. An internet wrote about vim, nerds will read this and nitpick and drool.\n* [Bookshelf · Patrick Collison](https://patrickcollison.com/bookshelf) - one of the brothers Stripe has a bookshelf that's ridiculously intimidating and also somewhat ridiculous. Stripe Press is dope thought\n* [Daft Punk Live DJ Sets from the 90s](https://kottke.org/19/06/daft-punk-live-dj-sets-from-the-90s) - babby boomer blogger discovers old daft punk; I've had this one open for weeks\n* [Startup idea checklist | defmacro](https://www.defmacro.org/2019/03/26/startup-checklist.html) - an (famous) internet has a do's / dont's list but like for startup ideas; who cares but it's probably worth consulting\n* [Sixteen Years of Listening: My Audible Favorites - Ben Galbraith - Medium](https://medium.com/@bgalbs/sixteen-years-of-listening-my-audible-favorites-dc7386737cc5) - sick list of good audiobooks, for which I am a fiend. I plan on putting together a similar (running) list of my favorite because this is a good idea for a post, and exhibits demonstrably better curation than Audible ever has\n* [Observability — A 3-Year Retrospective - The New Stack](https://thenewstack.io/observability-a-3-year-retrospective/) - recommended by a colleague, to read\n* [Nintendo Never Should Have Pandered To Women And Created A Female Mario](https://ogn.theonion.com/nintendo-never-should-have-pandered-to-women-and-create-1837027540) - satire from THE ONION surfaced to me by THE FACEBOOK","src/content/writing/16-open-tabs.html.md","5b1155c1976793e1",{"html":58,"metadata":59},"\u003Cp>Right now, I have 16 open tabs in my browser.\u003C/p>\n\u003Cp>By all measures, this is not a lot of tabs. I see people at work that have tab stacks so dense only a single pixel rendering the faintest sliver of each tab. Or multiple windows, 6 or 7 layers deep, each with 10 tabs or more, the tab bar taking up the full width of the screen. I try and do better than that.\u003C/p>\n\u003Cp>I like to treat my work environment with a little more respect by closing things down at the beginning or end of each day, or at very least once a week.\u003C/p>\n\u003Cp>So that leaves my pc at home. That’s where the tabs pile up, unread and unwanted, for weeks on end. I come back to them every day, occasionally adding to them, and sometimes nuking the whole session altogether.\u003C/p>\n\u003Cp>But on any given day I have an accretion of internet detritus to ponder over. It was Jorge Luis Borges who said that reading is a more intellectual activity than writing; I never read most of them.\u003C/p>\n\u003Cp>Here is the (annotated) list of tabs I currently have open:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://pinboard.in/popular/\">Pinboard: popular bookmarks\u003C/a> - I usually have this one open. It’s replaced \u003Ca href=\"http://n-gate.com/hackernews/\">the orange website\u003C/a> and reddit for me. I don’t bookmark very many things these days but I like the format of “a whole bunch of links” to peruse\u003C/li>\n\u003Cli>\u003Ca href=\"https://web.dev/native-lazy-loading\">Native lazy-loading for the web  |  web.dev\u003C/a> - haven’t read this yet, sounds like I’ll get to continue not writing lazy image loading code and get the whole thing backfilled for me by browser vendors\u003C/li>\n\u003Cli>\u003Ca href=\"http://danshipper.com/nothing-happens-until-the-sale-is-made\">How to get your first 10 customers\u003C/a> - a link from pinboard I kinda looked at and moved on from\u003C/li>\n\u003Cli>\u003Ca href=\"https://cheats.rs/\">Rust Language Cheat Sheet\u003C/a> - I bought the Rust book a few months ago and will use it in future projects, so this seems like a keeper\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.ben-evans.com/benedictevans/2019/7/31/Netflix\">Netflix is not a tech company — Benedict Evans\u003C/a> - in general, I try to avoid thought leaders like Ben Evans, with the exception of him specifically, to be taken with a healthy amount of salt\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.empathybox.com/post/19574936361/getting-real-about-distributed-system-reliability\">Getting Real About Distributed System Reliability - Jay Kreps\u003C/a> - I haven’t read this yet. I like horror stories about hard problems that involve lots of computers.\u003C/li>\n\u003Cli>\u003Ca href=\"https://standardebooks.org/ebooks/aristotle/nicomachean-ethics/f-h-peters\">Nicomachean Ethics, by Aristotle. Translated by F. H. Peters - Standard Ebooks: Free and liberated ebooks, carefully produced for the true book lover.\u003C/a> - Nassim Nicholas Taleb turned me on to NICOMACHEAN ETHICS and it’s some heavy shit. This is a free ebook version that’s not completely fucked.\u003C/li>\n\u003Cli>\u003Ca href=\"https://thereader.mitpress.mit.edu/umberto-eco-how-to-write-a-thesis/\">How to Write a Thesis, According to Umberto Eco | The MIT Press Reader\u003C/a> - big ups to Umberto Eco, whom I’m totally down with. FOUCAULT’S PENDULUM is a great read, as is his collection of essays, TRAVELS IN HYPERREALITY\u003C/li>\n\u003Cli>\u003Ca href=\"https://craigmod.com/essays/fast_software/\">Fast Software, the Best Software — by Craig Mod\u003C/a> - this is a name I recognize and might be interesting. Skimmed the title and opened the tab.\u003C/li>\n\u003Cli>\u003Ca href=\"https://begriffs.com/posts/2019-07-19-history-use-vim.html\">History and effective use of Vim\u003C/a> - heavy nerd shit. An internet wrote about vim, nerds will read this and nitpick and drool.\u003C/li>\n\u003Cli>\u003Ca href=\"https://patrickcollison.com/bookshelf\">Bookshelf · Patrick Collison\u003C/a> - one of the brothers Stripe has a bookshelf that’s ridiculously intimidating and also somewhat ridiculous. Stripe Press is dope thought\u003C/li>\n\u003Cli>\u003Ca href=\"https://kottke.org/19/06/daft-punk-live-dj-sets-from-the-90s\">Daft Punk Live DJ Sets from the 90s\u003C/a> - babby boomer blogger discovers old daft punk; I’ve had this one open for weeks\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.defmacro.org/2019/03/26/startup-checklist.html\">Startup idea checklist | defmacro\u003C/a> - an (famous) internet has a do’s / dont’s list but like for startup ideas; who cares but it’s probably worth consulting\u003C/li>\n\u003Cli>\u003Ca href=\"https://medium.com/@bgalbs/sixteen-years-of-listening-my-audible-favorites-dc7386737cc5\">Sixteen Years of Listening: My Audible Favorites - Ben Galbraith - Medium\u003C/a> - sick list of good audiobooks, for which I am a fiend. I plan on putting together a similar (running) list of my favorite because this is a good idea for a post, and exhibits demonstrably better curation than Audible ever has\u003C/li>\n\u003Cli>\u003Ca href=\"https://thenewstack.io/observability-a-3-year-retrospective/\">Observability — A 3-Year Retrospective - The New Stack\u003C/a> - recommended by a colleague, to read\u003C/li>\n\u003Cli>\u003Ca href=\"https://ogn.theonion.com/nintendo-never-should-have-pandered-to-women-and-create-1837027540\">Nintendo Never Should Have Pandered To Women And Created A Female Mario\u003C/a> - satire from THE ONION surfaced to me by THE FACEBOOK\u003C/li>\n\u003C/ul>",{"headings":60,"imagePaths":61,"frontmatter":62},[],[],{"title":51,"slug":48,"description":52,"pubDate":53},"2016-reading-list.html",{"id":63,"data":65,"body":69,"filePath":70,"digest":71,"rendered":72},{"title":66,"description":67,"pubDate":68},"2016 Reading List","A non-exhaustive list of the books I'm reading in 2016","Dec 31 2016","# 2016 Reading List\n\n1. [x] How to Make Sense of Any Mess — Abby Covert\n1. [x] Daemon — Daniel Suarez†\n1. [x] Burr – Gore Vidal \u003Csup>&dagger;\u003C/sup>\n1. [x] Fire in the Valley – Michael Swaine and Paul Freiberger \n1. [x] Antifragile – Nassim Nicholas Taleb\n1. [x] The Ascent of Money – Niall Feguson\n1. [x] The (Mis)Behavior of Markets – Beniot Mandelbrot\n1. [x] Barbarian Days – William Finnegan\n1. [x] Sapiens – Yuval Harari\n1. [x] Learning to Live Finally: The Last Interview – Jacques Derrida\n1. [x] The Killing Moon – N.K. Jemisin\n1. [x] Dirk Gently's Holistic Detective Agency – Douglas Adams\n1. [x] Flow My Tears, the Policeman Said – Philip K. Dick\n1. [x] Cat's Cradle – Kurt Vonnegut\n1. [x] American Gods – Neil Gaiman\n1. [x] Influx — Daniel Suarez†\n1. [x] The Illuminatus! Trilogy — Robert Shea and Robert Anton Wilson\n1. [ ] ~~Kissinger: 1923-1969 The Idealist — Niall Ferguson~~\n1. [x] Brian Eno: Visual Music — Christopher Scoates\n1. [x] The Three-Body Problem — Cixin Liu\n1. [x] Civilization — Niall Ferguson\n1. [x] Inherent Vice — Thomas Pynchon†\n1. [x] 7 Days In Ohio — Nathan Rabin\n1. [ ] Time Travel — James Gleick\n1. [x] Against the Gods: The Remarkable Story of Risk — Peter L. Bernstein\n1. [ ] ~~The Sovereign Individual — James Dale Davidson and Lord William Rees-Mogg~~\n1. [x] Fooled By Randomness — Nassim Nicholas Taleb\n1. [x] The Black Swan — Nassim Nicholas Taleb\n1. [x] Superforecasting – Philip E. Tetlock and Dan Gardner\n1. [ ] Digital Gold – Nathaniel Popper\n\n\u003Csmall>\n\n- ~~Strikethrough~~ _Abandoned and back on the shelf_ 🙅‍\n- \u003Cinput type=\"checkbox\" /> In Progress 🙇\n- \u003Cinput type=\"checkbox\" checked=\"checked\" disabled /> Finished! 💁‍\n\n\u003C/small>\n\n\n### Addendum\n\n\u003Cdetails>\n  \u003Csummary>Fire in the Valley\u003C/summary>\n  \u003Ca name=\"fire-in-the-valley\">\u003C/a>\n\n  \u003Cp>I often think about what I missed by not being “in tech” (or rather “in the Bay Area”) when I was a bit younger. I graduated high school in 2004, meaning that if I had my shit together I could have gotten the fuck out of Tampa and high-tailed it to the west coast just in time to be on the ground floor to something cool. I had very little idea how much location factors in to participating in the digital economy.\u003C/p>\n\n  \u003Cp>Instead I went to college and said “fuck computers.\"\u003C/p>\n\n  \u003Cp>This book isn't about the years after the first dotcom bubble, it's about an earlier time when fortunes were made just as quickly, but there was no internet to fuel the personal computer revolution. Just a bunch of hard working, often scheming, nerds and true believers making the hardware and the fabulists selling a dream of a digital future. They created a scene where there was none, and seemed to have fun doing it. They probably weren't self-aware of that the minutia of their day to day \"work stuff\" becoming the geeky history of how personal computers helped spawn the modern tech industry.\u003C/p>\n\n  \u003Cp>I rarely admire or envy baby boomers, but the people and events described in this book make a clear exception to that policy.\u003C/p>\n\n  \u003Cp>After high school, I knew I was “good” with computers—whatever that means, I'm still trying to find out— but really I just lacked the vision to understand that I could hustle my way into tech if I wanted to. I didn’t manage to do that until 2009, and only then after \u003Ci>deciding to\u003C/i> at the end of 2008.\n\n  \u003Cp>Recently I read the [New Yorker profile about Sam Altman](http://www.newyorker.com/magazine/2016/10/10/sam-altmans-manifest-destiny) and couldn’t help but feel the familiar hot sting of envy even thinking about the \u003Ci>scene\u003C/i> at Stanford in 2005. Right place at the right time, the way I figure it.\u003C/p>\n\n  \u003Cp>Like Steve Jobs and Steve Wozniack at the Homebrew Computing Club—I can’t read about that and not wish for that type of kismet in my life.\u003C/p>\n\n  \u003Cp>This book stirs up some strong feels.\u003C/p>\n\u003C/details>\n\n\u003Cdetails>\n\u003Csummary>Barbarian Days\u003C/summary>\n\u003Cp>I didn't grow up around surfing, despite being somewhat near the beach. The Gulf Coast is known for its calm white-sand, warm-water beaches. Not really a place for good waves. The Atlantic coast of Florida is a little better, but this is just the type of thing that's elusive for kids in the suburbs. I was lucky enough to have a mom willing to drive me an hour to the skatepark (and I still skate to this day, so it wasn't for nothing), but driving 2 or 3 hours to the opposite side of the state to try out a new board sport wasn't in the cards. Surfing was something that only happened in the fictional Saved by the Bell universe of Southern California.\u003C/p>\n\n\u003Cp>Continuing on a theme, this feels like another nostalgic take on a subject (and time) that passed me by. It's too late for me to commit to another brutal, dangerous hobby. My wife agrees with me.\u003C/p>\n\n\u003Cp>Sometimes I'm in awe of what a trip books are: it isn't my expression, but \u003Cb>the notion that you stare at a bunch of symbols on a page and experience vivid, emotional, waking hallucinations with zero physical effort or deleterious side-effects is fucking flabbergasting.\u003C/b>\u003C/p>\n\n\u003Cp>This book places you in the water, on the board. It makes me pine for those types of memories, but I'm happy to share a sliver of the experience without getting wet.\u003C/p>\n\u003C/details>\n\nRelated: [2015 reading list](https://medium.com/@sambreed/2015-books-504cb79ac5c0#.f8izs5mpq)","src/content/writing/2016-reading-list.html.md","727a2df1e98696f5",{"html":73,"metadata":74},"\u003Ch1 id=\"2016-reading-list\">2016 Reading List\u003C/h1>\n\u003Col class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> How to Make Sense of Any Mess — Abby Covert\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Daemon — Daniel Suarez†\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Burr – Gore Vidal \u003Csup>†\u003C/sup>\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Fire in the Valley – Michael Swaine and Paul Freiberger\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Antifragile – Nassim Nicholas Taleb\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> The Ascent of Money – Niall Feguson\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> The (Mis)Behavior of Markets – Beniot Mandelbrot\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Barbarian Days – William Finnegan\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Sapiens – Yuval Harari\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Learning to Live Finally: The Last Interview – Jacques Derrida\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> The Killing Moon – N.K. Jemisin\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Dirk Gently’s Holistic Detective Agency – Douglas Adams\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Flow My Tears, the Policeman Said – Philip K. Dick\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Cat’s Cradle – Kurt Vonnegut\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> American Gods – Neil Gaiman\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Influx — Daniel Suarez†\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> The Illuminatus! Trilogy — Robert Shea and Robert Anton Wilson\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Cdel>Kissinger: 1923-1969 The Idealist — Niall Ferguson\u003C/del>\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Brian Eno: Visual Music — Christopher Scoates\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> The Three-Body Problem — Cixin Liu\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Civilization — Niall Ferguson\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Inherent Vice — Thomas Pynchon†\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> 7 Days In Ohio — Nathan Rabin\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Time Travel — James Gleick\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Against the Gods: The Remarkable Story of Risk — Peter L. Bernstein\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> \u003Cdel>The Sovereign Individual — James Dale Davidson and Lord William Rees-Mogg\u003C/del>\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Fooled By Randomness — Nassim Nicholas Taleb\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> The Black Swan — Nassim Nicholas Taleb\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Superforecasting – Philip E. Tetlock and Dan Gardner\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Digital Gold – Nathaniel Popper\u003C/li>\n\u003C/ol>\n\u003Csmall>\n\u003Cul>\n\u003Cli>\u003Cdel>Strikethrough\u003C/del> \u003Cem>Abandoned and back on the shelf\u003C/em> 🙅‍\u003C/li>\n\u003Cli>\u003Cinput type=\"checkbox\"> In Progress 🙇\u003C/li>\n\u003Cli>\u003Cinput type=\"checkbox\" checked disabled> Finished! 💁‍\u003C/li>\n\u003C/ul>\n\u003C/small>\n\u003Ch3 id=\"addendum\">Addendum\u003C/h3>\n\u003Cdetails>\n  \u003Csummary>Fire in the Valley\u003C/summary>\n  \u003Ca name=\"fire-in-the-valley\">\u003C/a>\n  \u003Cp>I often think about what I missed by not being “in tech” (or rather “in the Bay Area”) when I was a bit younger. I graduated high school in 2004, meaning that if I had my shit together I could have gotten the fuck out of Tampa and high-tailed it to the west coast just in time to be on the ground floor to something cool. I had very little idea how much location factors in to participating in the digital economy.\u003C/p>\n  \u003Cp>Instead I went to college and said “fuck computers.\"\u003C/p>\n  \u003Cp>This book isn't about the years after the first dotcom bubble, it's about an earlier time when fortunes were made just as quickly, but there was no internet to fuel the personal computer revolution. Just a bunch of hard working, often scheming, nerds and true believers making the hardware and the fabulists selling a dream of a digital future. They created a scene where there was none, and seemed to have fun doing it. They probably weren't self-aware of that the minutia of their day to day \"work stuff\" becoming the geeky history of how personal computers helped spawn the modern tech industry.\u003C/p>\n  \u003Cp>I rarely admire or envy baby boomers, but the people and events described in this book make a clear exception to that policy.\u003C/p>\n  \u003Cp>After high school, I knew I was “good” with computers—whatever that means, I'm still trying to find out— but really I just lacked the vision to understand that I could hustle my way into tech if I wanted to. I didn’t manage to do that until 2009, and only then after \u003Ci>deciding to\u003C/i> at the end of 2008.\n  \u003C/p>\u003Cp>Recently I read the [New Yorker profile about Sam Altman](http://www.newyorker.com/magazine/2016/10/10/sam-altmans-manifest-destiny) and couldn’t help but feel the familiar hot sting of envy even thinking about the \u003Ci>scene\u003C/i> at Stanford in 2005. Right place at the right time, the way I figure it.\u003C/p>\n  \u003Cp>Like Steve Jobs and Steve Wozniack at the Homebrew Computing Club—I can’t read about that and not wish for that type of kismet in my life.\u003C/p>\n  \u003Cp>This book stirs up some strong feels.\u003C/p>\n\u003C/details>\n\u003Cdetails>\n\u003Csummary>Barbarian Days\u003C/summary>\n\u003Cp>I didn't grow up around surfing, despite being somewhat near the beach. The Gulf Coast is known for its calm white-sand, warm-water beaches. Not really a place for good waves. The Atlantic coast of Florida is a little better, but this is just the type of thing that's elusive for kids in the suburbs. I was lucky enough to have a mom willing to drive me an hour to the skatepark (and I still skate to this day, so it wasn't for nothing), but driving 2 or 3 hours to the opposite side of the state to try out a new board sport wasn't in the cards. Surfing was something that only happened in the fictional Saved by the Bell universe of Southern California.\u003C/p>\n\u003Cp>Continuing on a theme, this feels like another nostalgic take on a subject (and time) that passed me by. It's too late for me to commit to another brutal, dangerous hobby. My wife agrees with me.\u003C/p>\n\u003Cp>Sometimes I'm in awe of what a trip books are: it isn't my expression, but \u003Cb>the notion that you stare at a bunch of symbols on a page and experience vivid, emotional, waking hallucinations with zero physical effort or deleterious side-effects is fucking flabbergasting.\u003C/b>\u003C/p>\n\u003Cp>This book places you in the water, on the board. It makes me pine for those types of memories, but I'm happy to share a sliver of the experience without getting wet.\u003C/p>\n\u003C/details>\n\u003Cp>Related: \u003Ca href=\"https://medium.com/@sambreed/2015-books-504cb79ac5c0#.f8izs5mpq\">2015 reading list\u003C/a>\u003C/p>",{"headings":75,"imagePaths":82,"frontmatter":83},[76,78],{"depth":25,"slug":77,"text":66},"2016-reading-list",{"depth":79,"slug":80,"text":81},3,"addendum","Addendum",[],{"title":66,"slug":63,"description":67,"pubDate":68},"books.html",{"id":84,"data":86,"body":90,"filePath":91,"digest":92,"rendered":93},{"title":87,"description":88,"pubDate":89},"Books I'm reading","A non-exhaustive list of the books I'm reading in \u003Cyear>","May 28 2018","# Books, continued\n\nKeeping reading lists year-over-year has been fun. This year felt a bit different. I was still reading a couple of holdovers from my 2017 list and simply didn't have the energy to create a new post for 2018. It felt unsustainable, like I was forcing it. So instead I'm following the lead of other smart folks who keep a single running list.\n\n_Currently_\n\n\n* [Incerto](https://www.amazon.com/gp/product/198481981X) by Nassim Nicholas Taleb. A hardcover edition of 5 books that I already own. Taleb is one of a few writers good enough to buy multiple copies of when better editions come out. This is an excellent priting.\n* [An Elegant Puzzle: Systems of Engineering Management](https://www.amazon.com/dp/1732265186) by Will Larson. Published by Stripe Press. This is a beautiful book.\n* [The Timeless Way of Building](http://www.worldcat.org/oclc/840013131) by Christoper Alexander. I never really put this one down from last year, the clarity of language and thought is unmatched. I foresee myself deep-reading (and re-reading) this for a long, long time.\n* [2666](http://www.worldcat.org/oclc/216941696) by Roberto Bolaño. Keep at least one fiction book going at all times; the longer, the better. Started after finishing 100 Years of Solitude, staying on the theme of english translations of spanish lit.\n* [The Wind-up Bird Chronicle](http://www.worldcat.org/oclc/747193445) by Haruki Murakami\n\n_2019_\n\n* [Good Morning, Midnight](https://www.amazon.com/dp/0812988191) by Lily Brooks-Dalton\n* [Every Tool's a Hammer: Life Is What You Make It](https://www.amazon.com/dp/1982113472) by Adam Savage\n* [Black Leopard Red Wolf](https://www.amazon.com/gp/product/0735220174) by Marlon James\n* [Makers and Takers](https://www.amazon.com/dp/0553447238) by Rana Foroohar\n* [Ghosts of My Life](https://www.amazon.com/dp/1780992262) by Mark Fisher\n\n_2018_\n\n* [Bullshit Jobs](http://www.worldcat.org/oclc/1030241785) by David Graeber\n* [The Workbench Book](http://www.worldcat.org/oclc/41071867) by Scott Landis and [Best Workbenches](http://www.worldcat.org/oclc/973537637) by the Editors of Fine Woodworking. I've taken on woodworking/joinery as hobby over the past year or so and a mentor recommended my next project be a cabinetmaker's workbench.\n* [Skin in the Game](http://www.worldcat.org/oclc/1027035134) by [Nassim Nicholas Taleb](https://twitter.com/nntaleb)\n* [100 Years of Solitude](http://www.worldcat.org/oclc/881869530) by Gabriel García Márquez\n* [NeuroTribes](http://www.worldcat.org/oclc/932001597) by Steve Silberman\n* [Lao Tzu: Tao Te Ching](http://www.worldcat.org/oclc/884955043) translation by Urula K Le Guin\n* [The Lathe of Heaven](http://www.worldcat.org/oclc/1012127153) by Ursula K Le Guin\n* [They Can't Kill Us Until They Kill Us](http://www.worldcat.org/oclc/1027559077) by [Hanif Abdurraqib](https://twitter.com/NifMuhammad)\n* [Pale Fire](http://www.worldcat.org/oclc/24467494) by Vladimir Nabokov\n\n_Upcoming_\n\n* [The Time Machine Did It](http://www.worldcat.org/oclc/670128324) by John Swartzwelder\n* [Midnight's Children](http://www.worldcat.org/oclc/854809464) by Salaman Rushdie\n* [Underworld](http://www.worldcat.org/oclc/930928743) by Don DeLillo\n* [City of God](http://www.worldcat.org/oclc/889324546) by E.L. Doctorow\n\n_Technophilia_\n\n* [The Dream Machine](https://www.amazon.com/dp/B07GBCX7YC) by M. Mitchell Waldrop\n* [Cryptography Engineering: Design Principles and Practical Applications](http://www.worldcat.org/oclc/436030574) by Nies Ferguson, Bruce Schneier, and Tadayoshi Kohno\n* [Code Complete 2](http://www.worldcat.org/oclc/951650600) by Steve McConnell\n* [Programming Beyond Practices](http://www.worldcat.org/oclc/995161733) by [Gregory T. Brown](https://twitter.com/practicingdev)\n* [SVG Animations](http://www.worldcat.org/oclc/981929715) by [Sarah Drasner](https://twitter.com/sarah_edo)","src/content/writing/books.html.md","bb51f9777eb811ca",{"html":94,"metadata":95},"\u003Ch1 id=\"books-continued\">Books, continued\u003C/h1>\n\u003Cp>Keeping reading lists year-over-year has been fun. This year felt a bit different. I was still reading a couple of holdovers from my 2017 list and simply didn’t have the energy to create a new post for 2018. It felt unsustainable, like I was forcing it. So instead I’m following the lead of other smart folks who keep a single running list.\u003C/p>\n\u003Cp>\u003Cem>Currently\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/gp/product/198481981X\">Incerto\u003C/a> by Nassim Nicholas Taleb. A hardcover edition of 5 books that I already own. Taleb is one of a few writers good enough to buy multiple copies of when better editions come out. This is an excellent priting.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/dp/1732265186\">An Elegant Puzzle: Systems of Engineering Management\u003C/a> by Will Larson. Published by Stripe Press. This is a beautiful book.\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/840013131\">The Timeless Way of Building\u003C/a> by Christoper Alexander. I never really put this one down from last year, the clarity of language and thought is unmatched. I foresee myself deep-reading (and re-reading) this for a long, long time.\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/216941696\">2666\u003C/a> by Roberto Bolaño. Keep at least one fiction book going at all times; the longer, the better. Started after finishing 100 Years of Solitude, staying on the theme of english translations of spanish lit.\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/747193445\">The Wind-up Bird Chronicle\u003C/a> by Haruki Murakami\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>2019\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/dp/0812988191\">Good Morning, Midnight\u003C/a> by Lily Brooks-Dalton\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/dp/1982113472\">Every Tool’s a Hammer: Life Is What You Make It\u003C/a> by Adam Savage\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/gp/product/0735220174\">Black Leopard Red Wolf\u003C/a> by Marlon James\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/dp/0553447238\">Makers and Takers\u003C/a> by Rana Foroohar\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/dp/1780992262\">Ghosts of My Life\u003C/a> by Mark Fisher\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>2018\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/1030241785\">Bullshit Jobs\u003C/a> by David Graeber\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/41071867\">The Workbench Book\u003C/a> by Scott Landis and \u003Ca href=\"http://www.worldcat.org/oclc/973537637\">Best Workbenches\u003C/a> by the Editors of Fine Woodworking. I’ve taken on woodworking/joinery as hobby over the past year or so and a mentor recommended my next project be a cabinetmaker’s workbench.\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/1027035134\">Skin in the Game\u003C/a> by \u003Ca href=\"https://twitter.com/nntaleb\">Nassim Nicholas Taleb\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/881869530\">100 Years of Solitude\u003C/a> by Gabriel García Márquez\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/932001597\">NeuroTribes\u003C/a> by Steve Silberman\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/884955043\">Lao Tzu: Tao Te Ching\u003C/a> translation by Urula K Le Guin\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/1012127153\">The Lathe of Heaven\u003C/a> by Ursula K Le Guin\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/1027559077\">They Can’t Kill Us Until They Kill Us\u003C/a> by \u003Ca href=\"https://twitter.com/NifMuhammad\">Hanif Abdurraqib\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/24467494\">Pale Fire\u003C/a> by Vladimir Nabokov\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>Upcoming\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/670128324\">The Time Machine Did It\u003C/a> by John Swartzwelder\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/854809464\">Midnight’s Children\u003C/a> by Salaman Rushdie\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/930928743\">Underworld\u003C/a> by Don DeLillo\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/889324546\">City of God\u003C/a> by E.L. Doctorow\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>Technophilia\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/dp/B07GBCX7YC\">The Dream Machine\u003C/a> by M. Mitchell Waldrop\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/436030574\">Cryptography Engineering: Design Principles and Practical Applications\u003C/a> by Nies Ferguson, Bruce Schneier, and Tadayoshi Kohno\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/951650600\">Code Complete 2\u003C/a> by Steve McConnell\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/995161733\">Programming Beyond Practices\u003C/a> by \u003Ca href=\"https://twitter.com/practicingdev\">Gregory T. Brown\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.worldcat.org/oclc/981929715\">SVG Animations\u003C/a> by \u003Ca href=\"https://twitter.com/sarah_edo\">Sarah Drasner\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":96,"imagePaths":100,"frontmatter":101},[97],{"depth":25,"slug":98,"text":99},"books-continued","Books, continued",[],{"title":87,"slug":84,"description":88,"pubDate":89},"big-sur-marathon-2023",{"id":102,"data":104,"body":110,"filePath":111,"assetImports":112,"digest":114,"rendered":115},{"title":105,"description":106,"pubDate":107,"heroAlt":108,"cover":109},"Big Sur Marathon 2023 Race Report","Race overview from my very first marathon at Big Sur on April 30, 2023","May 2 2023","me, completely spent after sprinting to the finish line","__ASTRO_IMAGE_../../assets/big-sur-finish.jpg","We stayed about 2 miles from the start line in Big Sur, which meant that I didn't have to wake up at 3am to catch a bus from Monterey down to the start. The resort we stayed at was able to shuttle me to within 1/4 mile of the start line, which bought me some extra sleep and spared me a bumpy 90 minute ride down a windy, hilly stretch of highway.\n\nI woke up at 4:30, ate the breakfast I had packed, and was to the starting area by 5:20. I waited around for a bit before checking my gear bag, and then found a place to stretch. It was really crowded, over 5000 people! I downed 1 gel about 15 minutes before the start of the race. Based on my (self-reported) projected finish time, I was in the \"A\" corral and was at the very front. Gulp.\n\nI started slow out of the gate, as there was a lot of traffic and it was tough to get locked into a good cadence for the first few minutes. I was shocked by how many people (dudes) peeled off the pack to go relieve themselves in the woods during the first two miles. The lines for the bathrooms were really long before the start but there was quite literally nothing else to do but wait in line for the bathroom. Weird strategy. The other odd moment from the opening miles was the significant amount of clothing that was collectively shed in the first 10 minutes of the race. Any clothing you dropped would get donated, so maybe a bunch of people planned on that?\n\nI was feeling good and moving well after the first 5km. I ate another gel around 20 minutes in, knowing it was early but figuring that I should take something in while I was feeling good.\n\nThe race moved out of the trees and into a long, straight section of coastal highway with gently rolling hills. I was about 10 seconds behind the 3:30 pace group, which I knew meant that I was going too fast for my race plan. I slowed my pace a little bit, aiming for around 8 minute miles, which widened the gap between me and the pace group. This was a minor mistake. The wind started to pick up significantly, swapping between a crosswind and headwind every few minutes, but never stopping or losing strength. People's hats were blowing off. Out of the pace group in no man's land, it felt like I was running with a parachute. I took another gel around 45 minutes in and struggled running into the wind.\n\nAfter 20 minutes in the wind, I honestly needed a break and had to pee, so I stopped at the 8 mile aid station for a little under a minute, used the bathroom, and drank some of my sports drink. When I stopped I could still see the 3:30 pace group, but they were long gone by the time I got going again. The wind didn't let up and the course passed the lighthouse at Sur Point and started to climb as the highway lifted up along the cliffside for the next 4 miles. Climbing in the wind was brutal. There was some release at the crest of the first big hill, except that's exactly where you come around a corner to see the next 3 miles of climbing immediately ahead of you. That section was punishing. I didn't worry about pace at all, just tried to keep moving well, and remembered to keep eating and drinking.\n\nI passed the half marathon mark around 1:48:00 so I felt like I was in pretty good shape. The second half of the course had lots and lots of rolling hills. Let me be more clear: the second half of the course was as grueling as the first half. I finished my handheld with a good portion of the race left, and I started to be on the lookout for aid stations to get water at every opportunity. I went through my gels a little before the 3 hour mark, having taken 8 up to this point, I was probably 1-2 short of what I needed. I only felt mild stomach discomfort once or twice during the second half, but nothing serious or prolonged. I took the cue to slow down a bit. I did not look at my time much, any watch glances were to see how much distance I had left until the next pace increase. I definitely wasn't holding 7:45 in all those hills.\n\nI felt ok but not great when I passed the 20 mile mark. I knew that it would be very challenging to step on the gas for the next 10km. I did my best to maintain pace, trying to maintain speed coming downhill and keeping my arms moving as my legs were starting to get heavy. At the very end, I had enough in the tank to sprint the last 1/10th of a mile. Maybe I could have done more, but I'm glad that I finished strong. I did not stop and I did not walk.\n\nStats\n- Final time: 3:40:37\n- 306 of 5089. Top 10%.\n- 250 of 2559 men, also top 10%.\n- 55 of 411 men my age, just outside of the 10% bracket, but still pretty good thinking that only 54 guys my age running that marathon could go faster than me. And it's my first one!\n\nFinishing in the top 500 in such a big field is very cool! I think I approached the race cautiously, didn't make too many mistakes, and stuck with the plan. I'm very proud of this result and I know I have room to improve.","src/content/writing/big-sur-marathon-2023.md",[113],"../../assets/big-sur-finish.jpg","8fdc16c973dcbae1",{"html":116,"metadata":117},"\u003Cp>We stayed about 2 miles from the start line in Big Sur, which meant that I didn’t have to wake up at 3am to catch a bus from Monterey down to the start. The resort we stayed at was able to shuttle me to within 1/4 mile of the start line, which bought me some extra sleep and spared me a bumpy 90 minute ride down a windy, hilly stretch of highway.\u003C/p>\n\u003Cp>I woke up at 4:30, ate the breakfast I had packed, and was to the starting area by 5:20. I waited around for a bit before checking my gear bag, and then found a place to stretch. It was really crowded, over 5000 people! I downed 1 gel about 15 minutes before the start of the race. Based on my (self-reported) projected finish time, I was in the “A” corral and was at the very front. Gulp.\u003C/p>\n\u003Cp>I started slow out of the gate, as there was a lot of traffic and it was tough to get locked into a good cadence for the first few minutes. I was shocked by how many people (dudes) peeled off the pack to go relieve themselves in the woods during the first two miles. The lines for the bathrooms were really long before the start but there was quite literally nothing else to do but wait in line for the bathroom. Weird strategy. The other odd moment from the opening miles was the significant amount of clothing that was collectively shed in the first 10 minutes of the race. Any clothing you dropped would get donated, so maybe a bunch of people planned on that?\u003C/p>\n\u003Cp>I was feeling good and moving well after the first 5km. I ate another gel around 20 minutes in, knowing it was early but figuring that I should take something in while I was feeling good.\u003C/p>\n\u003Cp>The race moved out of the trees and into a long, straight section of coastal highway with gently rolling hills. I was about 10 seconds behind the 3:30 pace group, which I knew meant that I was going too fast for my race plan. I slowed my pace a little bit, aiming for around 8 minute miles, which widened the gap between me and the pace group. This was a minor mistake. The wind started to pick up significantly, swapping between a crosswind and headwind every few minutes, but never stopping or losing strength. People’s hats were blowing off. Out of the pace group in no man’s land, it felt like I was running with a parachute. I took another gel around 45 minutes in and struggled running into the wind.\u003C/p>\n\u003Cp>After 20 minutes in the wind, I honestly needed a break and had to pee, so I stopped at the 8 mile aid station for a little under a minute, used the bathroom, and drank some of my sports drink. When I stopped I could still see the 3:30 pace group, but they were long gone by the time I got going again. The wind didn’t let up and the course passed the lighthouse at Sur Point and started to climb as the highway lifted up along the cliffside for the next 4 miles. Climbing in the wind was brutal. There was some release at the crest of the first big hill, except that’s exactly where you come around a corner to see the next 3 miles of climbing immediately ahead of you. That section was punishing. I didn’t worry about pace at all, just tried to keep moving well, and remembered to keep eating and drinking.\u003C/p>\n\u003Cp>I passed the half marathon mark around 1:48:00 so I felt like I was in pretty good shape. The second half of the course had lots and lots of rolling hills. Let me be more clear: the second half of the course was as grueling as the first half. I finished my handheld with a good portion of the race left, and I started to be on the lookout for aid stations to get water at every opportunity. I went through my gels a little before the 3 hour mark, having taken 8 up to this point, I was probably 1-2 short of what I needed. I only felt mild stomach discomfort once or twice during the second half, but nothing serious or prolonged. I took the cue to slow down a bit. I did not look at my time much, any watch glances were to see how much distance I had left until the next pace increase. I definitely wasn’t holding 7:45 in all those hills.\u003C/p>\n\u003Cp>I felt ok but not great when I passed the 20 mile mark. I knew that it would be very challenging to step on the gas for the next 10km. I did my best to maintain pace, trying to maintain speed coming downhill and keeping my arms moving as my legs were starting to get heavy. At the very end, I had enough in the tank to sprint the last 1/10th of a mile. Maybe I could have done more, but I’m glad that I finished strong. I did not stop and I did not walk.\u003C/p>\n\u003Cp>Stats\u003C/p>\n\u003Cul>\n\u003Cli>Final time: 3:40:37\u003C/li>\n\u003Cli>306 of 5089. Top 10%.\u003C/li>\n\u003Cli>250 of 2559 men, also top 10%.\u003C/li>\n\u003Cli>55 of 411 men my age, just outside of the 10% bracket, but still pretty good thinking that only 54 guys my age running that marathon could go faster than me. And it’s my first one!\u003C/li>\n\u003C/ul>\n\u003Cp>Finishing in the top 500 in such a big field is very cool! I think I approached the race cautiously, didn’t make too many mistakes, and stuck with the plan. I’m very proud of this result and I know I have room to improve.\u003C/p>",{"headings":118,"imagePaths":119,"frontmatter":120},[],[],{"title":105,"slug":102,"description":106,"cover":113,"heroAlt":108,"pubDate":107},"making-things-for-fun.html",{"id":121,"data":123,"body":126,"filePath":127,"digest":128,"rendered":129},{"title":124,"pubDate":125},"Making Things For Fun","Sep 6 2016","## Making things for fun\n\n\u003Cdiv class=\"w-60-l w-50-m w-100 mb2 fr-ns tc\">\n  \u003Cimg src=\"/img/head-in-a-jar.png\" alt=\"it me\" />\u003Cbr/>\n  \u003Csmall>\u003Ci>\"some idiot\"\u003C/i>\u003C/small>\n\u003C/div>\n\nThis isn’t a blog. It’s a fun side project done over a couple weekends. There’s a big difference.\n\nIt's not a blog because it's not using any blogging software, per-se, just some elbow grease and [a few scripts][1] that I’ve to cobbled together into a mostly-working, typo-laden, glue–and–popsicle-sticks publishing platform to unleash upon the world like some Lovecraftian horror. Or not. I may be busy.\n\nSimple products are fashionable these days, especially when it comes to media consumption. Even I’ve been known to write a post on Medium dot com upon occasion, but I didn’t set out to build this as a monument to simplicity. No, this just isn’t that type of place and I’m not that type of fella; things are always a bit messier than that in real life.\n\nSo as it stands, this is just a barely functioning, loosely coherent website with weird cursor effects\u003Csup>[1][footnote1]\u003C/sup> (unless I've gotten bored and removed them) and superfluous footnotes\u003Csup>[2][footnote2]\u003C/sup> (I probably haven't removed these.)\n\n> So why go through all the trouble to build this in the first place? Why not just use Medium?\n\nIsn’t this what all software developers inevitably do anyway? Yes, that and add layers to things. You mean you'd really rather build some crappy knock-off of good software because your ego is too big to use anything that hasn't gracefully sprung as an unbidden gift to the world from your god-like cheeto-covered fingertips? Yes. A common thought among all software devs have goes something like, \"let’s all create something second-rate instead of using this perfectly good off-the-shelf in order to scratch the proverbial itch? Yes, indeed!\" Ok, it’s probably (definitely) something like that then.\n\nThe question might as well then become, \"why build anything at all?\"\n\n**I made this because it was fun.**\n\nIt was more fun figuring out how to [easily inline all the assets][2] and [strip out unused css][3] on this page than it would have been to set up Wordpress again. The first time I ever set up Wordpress in 2008 was a magical and transformative experience, so why am I so quick to shun it now? Am I really that self-important? (Yes, duh.) Wordpress is great software and I can’t make anything that comes close to it in a weekend.\n\n> Doing something from scratch, even if it's not polished, doesn't deny or invalidate what you've done in the past.\n\nFor a long time I refused to do any writing on my website because I felt like I didn't have the time. I was afraid that anything I wrote would be bad and then I'd be committed to it forever, comma splices and all. Paranoid that I would look back on it later with utter embarrassment kept me from committing to much writing since I killed my [first blog][5] in 2008. What I guess I means is I'm over that now?\n\n[Worse is better][4] after all, so why not let the tap start flowing!\n\nIn keeping with that spirit, I’ve shoddily rebuild an ode-to-a-Jekyll-site so that I can have reasonable writing experience for myself, which means markdown and not much else to fuss over (except custom tags and CSS and doing everything for myself). I’m unburdened by the need for SEO or any other such unspeakable non-sense, but I care about mobile web and I care about pagespeed so I’ve gone and done the aforementioned asset inlining, which I think has come out quite nicely. I also had service workers for no reason but then took those out.\n\n**You may never see this because I didn't know how Service Workers work.**\n\nI hope this is your first visit. If this page never changes, it might be because you have a fubar'ed Service Worker I installed and I'm not entirely sure how to purge and don't really care to test it extensively. So good luck! This might be fun!\n\n**Go out and make something, even if it's a shoddy facsimile of something else.**\n\n> Now what are you going to make for yourself?\n\n_p.s._ And, yes, I do plan on building an HTML guest book some day. But for now a link to twitter will have to suffice ✍️\n\n\u003Caside>\n  \u003Col>\n    \u003Cli id=\"making-things-for-fun_footnote-01\">\n      The custom cursors (provided they're still here, if not, I'll include a gif) were a fun idea I gleaned from [@kwuchu][6] tweeting about redesigning his portfolio site, which featured a similarly cropped picture of him. Since I already had the avatar of my face cropped out, I threw it on the header to see how it would look. It was static and unmoving and no fun whatsoever. I don't know how I stumbled into the custom cursor CSS, but I definitely used [David Walsh's blog post][7] to see it in action and grok how it should work. Then [@ohhoe][8] asked my to make sparkle trails and I couldn't say \"no\" to that.\n    \u003C/li>\n    \u003Cli id=\"making-things-for-fun_footnote-02\">\n      Who doesn't love a good footnote? If you know someone, submit their names to me in writing and I'll add them to my list.\n    \u003C/li>\n  \u003C/ol>\n\u003C/aside>\n\n[1]: https://github.com/wookiehangover/wookiehangover.com/tree/master/build\n[2]: https://github.com/remy/inliner\n[3]: https://github.com/giakki/uncss\n[4]: https://www.jwz.org/doc/worse-is-better.html\n[5]: http://samuelbreed.blogspot.com/\n[6]: https://twitter.com/kwuchu\n[7]: https://davidwalsh.name/css-custom-cursor\n[8]: https://twitter.com/ohhoe\n[footnote1]: #making-things-for-fun_footnote-01\n[footnote2]: #making-things-for-fun_footnote-02","src/content/writing/making-things-for-fun.html.md","f4d433b14fb9bdda",{"html":130,"metadata":131},"\u003Ch2 id=\"making-things-for-fun\">Making things for fun\u003C/h2>\n\u003Cdiv class=\"w-60-l w-50-m w-100 mb2 fr-ns tc\">\n  \u003Cimg src=\"/img/head-in-a-jar.png\" alt=\"it me\">\u003Cbr>\n  \u003Csmall>\u003Ci>\"some idiot\"\u003C/i>\u003C/small>\n\u003C/div>\n\u003Cp>This isn’t a blog. It’s a fun side project done over a couple weekends. There’s a big difference.\u003C/p>\n\u003Cp>It’s not a blog because it’s not using any blogging software, per-se, just some elbow grease and \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com/tree/master/build\">a few scripts\u003C/a> that I’ve to cobbled together into a mostly-working, typo-laden, glue–and–popsicle-sticks publishing platform to unleash upon the world like some Lovecraftian horror. Or not. I may be busy.\u003C/p>\n\u003Cp>Simple products are fashionable these days, especially when it comes to media consumption. Even I’ve been known to write a post on Medium dot com upon occasion, but I didn’t set out to build this as a monument to simplicity. No, this just isn’t that type of place and I’m not that type of fella; things are always a bit messier than that in real life.\u003C/p>\n\u003Cp>So as it stands, this is just a barely functioning, loosely coherent website with weird cursor effects\u003Csup>\u003Ca href=\"#making-things-for-fun_footnote-01\">1\u003C/a>\u003C/sup> (unless I’ve gotten bored and removed them) and superfluous footnotes\u003Csup>\u003Ca href=\"#making-things-for-fun_footnote-02\">2\u003C/a>\u003C/sup> (I probably haven’t removed these.)\u003C/p>\n\u003Cblockquote>\n\u003Cp>So why go through all the trouble to build this in the first place? Why not just use Medium?\u003C/p>\n\u003C/blockquote>\n\u003Cp>Isn’t this what all software developers inevitably do anyway? Yes, that and add layers to things. You mean you’d really rather build some crappy knock-off of good software because your ego is too big to use anything that hasn’t gracefully sprung as an unbidden gift to the world from your god-like cheeto-covered fingertips? Yes. A common thought among all software devs have goes something like, “let’s all create something second-rate instead of using this perfectly good off-the-shelf in order to scratch the proverbial itch? Yes, indeed!” Ok, it’s probably (definitely) something like that then.\u003C/p>\n\u003Cp>The question might as well then become, “why build anything at all?”\u003C/p>\n\u003Cp>\u003Cstrong>I made this because it was fun.\u003C/strong>\u003C/p>\n\u003Cp>It was more fun figuring out how to \u003Ca href=\"https://github.com/remy/inliner\">easily inline all the assets\u003C/a> and \u003Ca href=\"https://github.com/giakki/uncss\">strip out unused css\u003C/a> on this page than it would have been to set up Wordpress again. The first time I ever set up Wordpress in 2008 was a magical and transformative experience, so why am I so quick to shun it now? Am I really that self-important? (Yes, duh.) Wordpress is great software and I can’t make anything that comes close to it in a weekend.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Doing something from scratch, even if it’s not polished, doesn’t deny or invalidate what you’ve done in the past.\u003C/p>\n\u003C/blockquote>\n\u003Cp>For a long time I refused to do any writing on my website because I felt like I didn’t have the time. I was afraid that anything I wrote would be bad and then I’d be committed to it forever, comma splices and all. Paranoid that I would look back on it later with utter embarrassment kept me from committing to much writing since I killed my \u003Ca href=\"http://samuelbreed.blogspot.com/\">first blog\u003C/a> in 2008. What I guess I means is I’m over that now?\u003C/p>\n\u003Cp>\u003Ca href=\"https://www.jwz.org/doc/worse-is-better.html\">Worse is better\u003C/a> after all, so why not let the tap start flowing!\u003C/p>\n\u003Cp>In keeping with that spirit, I’ve shoddily rebuild an ode-to-a-Jekyll-site so that I can have reasonable writing experience for myself, which means markdown and not much else to fuss over (except custom tags and CSS and doing everything for myself). I’m unburdened by the need for SEO or any other such unspeakable non-sense, but I care about mobile web and I care about pagespeed so I’ve gone and done the aforementioned asset inlining, which I think has come out quite nicely. I also had service workers for no reason but then took those out.\u003C/p>\n\u003Cp>\u003Cstrong>You may never see this because I didn’t know how Service Workers work.\u003C/strong>\u003C/p>\n\u003Cp>I hope this is your first visit. If this page never changes, it might be because you have a fubar’ed Service Worker I installed and I’m not entirely sure how to purge and don’t really care to test it extensively. So good luck! This might be fun!\u003C/p>\n\u003Cp>\u003Cstrong>Go out and make something, even if it’s a shoddy facsimile of something else.\u003C/strong>\u003C/p>\n\u003Cblockquote>\n\u003Cp>Now what are you going to make for yourself?\u003C/p>\n\u003C/blockquote>\n\u003Cp>\u003Cem>p.s.\u003C/em> And, yes, I do plan on building an HTML guest book some day. But for now a link to twitter will have to suffice ✍️\u003C/p>\n\u003Caside>\n  \u003Col>\n    \u003Cli id=\"making-things-for-fun_footnote-01\">\n      The custom cursors (provided they're still here, if not, I'll include a gif) were a fun idea I gleaned from [@kwuchu][6] tweeting about redesigning his portfolio site, which featured a similarly cropped picture of him. Since I already had the avatar of my face cropped out, I threw it on the header to see how it would look. It was static and unmoving and no fun whatsoever. I don't know how I stumbled into the custom cursor CSS, but I definitely used [David Walsh's blog post][7] to see it in action and grok how it should work. Then [@ohhoe][8] asked my to make sparkle trails and I couldn't say \"no\" to that.\n    \u003C/li>\n    \u003Cli id=\"making-things-for-fun_footnote-02\">\n      Who doesn't love a good footnote? If you know someone, submit their names to me in writing and I'll add them to my list.\n    \u003C/li>\n  \u003C/ol>\n\u003C/aside>",{"headings":132,"imagePaths":136,"frontmatter":137},[133],{"depth":27,"slug":134,"text":135},"making-things-for-fun","Making things for fun",[],{"title":124,"slug":121,"pubDate":125},"dipsea-2023-race-report",{"id":138,"data":140,"body":146,"filePath":147,"assetImports":148,"digest":150,"rendered":151},{"title":141,"description":142,"pubDate":143,"heroAlt":144,"cover":145},"Dipsea 2023 Race Report","Race overview from my very first running of The Dipsea on June 11, 2023","June 12 2023","me, in my Henry Rollins \"Search & Destroy\" hoodie at the start line.","__ASTRO_IMAGE_../../assets/C4F2FB7B-DA17-4F91-BD24-D96D2E0CF1A4_1_105_c.jpeg","> [The Dipsea Race](https://www.dipsea.org) is a 7.4 mile trail race from Mill Valley to Stinson Beach. It was first run in 1905 and has a unique handicapping system that makes it competative for runners of all ages. 2023 was my first year participating, after almost 9 years of living in Mill Valley and 4 years of running.\n\nI woke up early before my alarm went off. It's near the height of summer so it was already light out before 6am. I made breakfast, found my kit (ready from the night before) and dressed, then stretched out on the yoga mat. I had very little prep left to do and was out the door by 7, leaving at jog to wind through the neighborhood to get downtown.\n\nI was at the bag check-in by 7:15 but wasn't ready to ditch my hoodie yet, I still had lots of time to mill around the start area and stay warm. I waited through the line for the bathroom a few times, and jogged up and down the block a few times, but stayed close to the corral. I bumped into a former co-worker from Credit Karma. We exchanged pleasantries before separating into the crowd.\n\nI could have arrived much later, but would have needed to bring my own bag. I overheard one of the volunteers saying they had run out. I recognized a few of the runners I've seen around town. I saw Jeffrey, one of the owners of the art gallery that carries Amy's ceramics, in a yellow volunteer's vest. He offered to take my photo under the start gate. He took good photos! I thanked him and continued pacing the town square waiting for my group.\n\nThe race start is divided into two groups. The \"invitational\" group finished in the top half of the field of last year's race, and their heats start first. The \"runners\" group, which I am in, comprises the back half of the field, and positions are given by lottery (but they do accept bribes and sob stories. I gave both and was accepted. Pity works.) The heats are handicapped by age and gender: children and the elderly starting first, priority going to the very oldest and very youngest. The first heat in each group is larger than you assume it would be. I started 50 minutes behind the first group with 140 other mostly-fit runners in their 30s. I only saw 1 woman in the group.\n\nI didn't race anyone out of the gate. The 1/4 mile to the stairs sets your place in line for the queue. I passed a good number of people but the whole mess was crowded and there wasn't much rooms to move much quicker than the average pace of the pack. I jogged away from the top step, power hiked strategically passing the first mile marker, and was greeted by dense fog at the top of the hill. I was already starting to pass people from the very first waves of runners. Those kids didn't know what hit 'em. I had saved enough that I could push a bit on the road down to Muir Woods. I opted to not take the suicide route, and bypassing it seemed to only get me down a few places, some of which I recovered.\n\nThe Muir Woods parking lot flew by. The climb up to the fire road through \"the forest\" was humid and grueling, a single-file line on the right with only the strongest making passes on the left. I am convinced that you cannot run this section. I was needing to recover some from the sprint downhill so I was glad to not attempt to run. Some mild nausea kicked up when my heartrate was in the mid 180s, so I backed off the throttle and hiked with my hands on my waist until I felt my body calm down.\n\nWhen we hit the fire road the trail widened some and the slope lessened, forking to a graded fire road on the left and the continuation of the single-track to the right. The single-track looked very crowded, so I broke left up the fire road where I could finally jog again, trading a bit more distance for a minor break from climbing. I was passing people again on this section, but I don't know if the trade was worth it. Probably evened out in the end.\n\nThe fire road climb continued and at the next fork I merged back onto the trail. Again, I power hiked as needed to keep my heart rate in check. Though I was mostly past the nausea, I definitely felt more tapped than I expected. The climbing you do on the stairs and in the forest are no joke. With a bit more running I could have made up a few minutes here, but without it I didn't get to the top of Cardiac Hill until 55 minutes had gone by, so finishing sub-1:20 was going to be a stretch. I stopped and choked down 2 sips of water down before continuing on to the descent.\n\nI was moving well in this section. When the trail forked for another shortcut after a particularly muddy slope, I decided to tempt fate and take it. I wasn't happy with this decision in the end. The shortcut was aggressively narrow and jammed single file with people, including a kid directly in front of me who couldn't have been more than 10. This section meandered a bit, despite being the straighter path, I would have been better off going around the long way where I could have run. Across the bridge and then up the last climb, I power hiked past a few people who had muscled there way around me in the shortcut and prepared myself to give the last mile everything I could throw at it.\n\nI ran a 7 minute split for the last 1.3 miles. My training shined through. When compared to the same section I ran last November in the half marathon I did here last November, going more than 30 seconds a mile faster. At a cadence of 180 and strides that are about a yard means that I would have cleared my previous performance by nearly a football field. Given that I arrived in the same spot on the map with similar amounts of climbing in my legs in both races, I am quite pleased to drop my past-self that conclusively.\n\nOnly the final mile felt like a true race. I was attempting to pass as many people as I could and provoked a good little footrace at the end with another runner. We passed each other back and forth, crossing the line together for a photo finish. The final push was very taxing and my heartrate peaked here at 194, which is thoroughly in \"holy shit\" territory and my body did not like much of that. I pulled off to the left just after the line and stood with my head between my legs for a good 20 seconds trying to get myself together and not puke. A volunteer asked if I was ok, so it must have looked bad, but I choked out an \"I'm ok,\" followed by a zombie-like shuffle to the t-shirt and medal hand out.\n\nI found the end of a table to put my stuff on, and by the time I was collecting myself enough to text Amy, she was standing next to me.\n\nResult\n|Time|Overall Position|\"Runners\" Position|\n|-|-|-|\n|1:21:04.86|905 / 1364|309 / 756|\n\n\u003Cfigure>\n  \u003Cimg src=\"/img/1B9CED58-0ECD-47B3-B640-A1514447C7F5_1_105_c.jpeg\" alt=\"me, crossing the finish line at full effort\" />\n  \u003Cfigcaption>me, crossing the finish line at full effort\u003C/figcaption>\n\u003C/figure>","src/content/writing/dipsea-2023-race-report.md",[149],"../../assets/C4F2FB7B-DA17-4F91-BD24-D96D2E0CF1A4_1_105_c.jpeg","6cae316f6822461d",{"html":152,"metadata":153},"\u003Cblockquote>\n\u003Cp>\u003Ca href=\"https://www.dipsea.org\">The Dipsea Race\u003C/a> is a 7.4 mile trail race from Mill Valley to Stinson Beach. It was first run in 1905 and has a unique handicapping system that makes it competative for runners of all ages. 2023 was my first year participating, after almost 9 years of living in Mill Valley and 4 years of running.\u003C/p>\n\u003C/blockquote>\n\u003Cp>I woke up early before my alarm went off. It’s near the height of summer so it was already light out before 6am. I made breakfast, found my kit (ready from the night before) and dressed, then stretched out on the yoga mat. I had very little prep left to do and was out the door by 7, leaving at jog to wind through the neighborhood to get downtown.\u003C/p>\n\u003Cp>I was at the bag check-in by 7:15 but wasn’t ready to ditch my hoodie yet, I still had lots of time to mill around the start area and stay warm. I waited through the line for the bathroom a few times, and jogged up and down the block a few times, but stayed close to the corral. I bumped into a former co-worker from Credit Karma. We exchanged pleasantries before separating into the crowd.\u003C/p>\n\u003Cp>I could have arrived much later, but would have needed to bring my own bag. I overheard one of the volunteers saying they had run out. I recognized a few of the runners I’ve seen around town. I saw Jeffrey, one of the owners of the art gallery that carries Amy’s ceramics, in a yellow volunteer’s vest. He offered to take my photo under the start gate. He took good photos! I thanked him and continued pacing the town square waiting for my group.\u003C/p>\n\u003Cp>The race start is divided into two groups. The “invitational” group finished in the top half of the field of last year’s race, and their heats start first. The “runners” group, which I am in, comprises the back half of the field, and positions are given by lottery (but they do accept bribes and sob stories. I gave both and was accepted. Pity works.) The heats are handicapped by age and gender: children and the elderly starting first, priority going to the very oldest and very youngest. The first heat in each group is larger than you assume it would be. I started 50 minutes behind the first group with 140 other mostly-fit runners in their 30s. I only saw 1 woman in the group.\u003C/p>\n\u003Cp>I didn’t race anyone out of the gate. The 1/4 mile to the stairs sets your place in line for the queue. I passed a good number of people but the whole mess was crowded and there wasn’t much rooms to move much quicker than the average pace of the pack. I jogged away from the top step, power hiked strategically passing the first mile marker, and was greeted by dense fog at the top of the hill. I was already starting to pass people from the very first waves of runners. Those kids didn’t know what hit ‘em. I had saved enough that I could push a bit on the road down to Muir Woods. I opted to not take the suicide route, and bypassing it seemed to only get me down a few places, some of which I recovered.\u003C/p>\n\u003Cp>The Muir Woods parking lot flew by. The climb up to the fire road through “the forest” was humid and grueling, a single-file line on the right with only the strongest making passes on the left. I am convinced that you cannot run this section. I was needing to recover some from the sprint downhill so I was glad to not attempt to run. Some mild nausea kicked up when my heartrate was in the mid 180s, so I backed off the throttle and hiked with my hands on my waist until I felt my body calm down.\u003C/p>\n\u003Cp>When we hit the fire road the trail widened some and the slope lessened, forking to a graded fire road on the left and the continuation of the single-track to the right. The single-track looked very crowded, so I broke left up the fire road where I could finally jog again, trading a bit more distance for a minor break from climbing. I was passing people again on this section, but I don’t know if the trade was worth it. Probably evened out in the end.\u003C/p>\n\u003Cp>The fire road climb continued and at the next fork I merged back onto the trail. Again, I power hiked as needed to keep my heart rate in check. Though I was mostly past the nausea, I definitely felt more tapped than I expected. The climbing you do on the stairs and in the forest are no joke. With a bit more running I could have made up a few minutes here, but without it I didn’t get to the top of Cardiac Hill until 55 minutes had gone by, so finishing sub-1:20 was going to be a stretch. I stopped and choked down 2 sips of water down before continuing on to the descent.\u003C/p>\n\u003Cp>I was moving well in this section. When the trail forked for another shortcut after a particularly muddy slope, I decided to tempt fate and take it. I wasn’t happy with this decision in the end. The shortcut was aggressively narrow and jammed single file with people, including a kid directly in front of me who couldn’t have been more than 10. This section meandered a bit, despite being the straighter path, I would have been better off going around the long way where I could have run. Across the bridge and then up the last climb, I power hiked past a few people who had muscled there way around me in the shortcut and prepared myself to give the last mile everything I could throw at it.\u003C/p>\n\u003Cp>I ran a 7 minute split for the last 1.3 miles. My training shined through. When compared to the same section I ran last November in the half marathon I did here last November, going more than 30 seconds a mile faster. At a cadence of 180 and strides that are about a yard means that I would have cleared my previous performance by nearly a football field. Given that I arrived in the same spot on the map with similar amounts of climbing in my legs in both races, I am quite pleased to drop my past-self that conclusively.\u003C/p>\n\u003Cp>Only the final mile felt like a true race. I was attempting to pass as many people as I could and provoked a good little footrace at the end with another runner. We passed each other back and forth, crossing the line together for a photo finish. The final push was very taxing and my heartrate peaked here at 194, which is thoroughly in “holy shit” territory and my body did not like much of that. I pulled off to the left just after the line and stood with my head between my legs for a good 20 seconds trying to get myself together and not puke. A volunteer asked if I was ok, so it must have looked bad, but I choked out an “I’m ok,” followed by a zombie-like shuffle to the t-shirt and medal hand out.\u003C/p>\n\u003Cp>I found the end of a table to put my stuff on, and by the time I was collecting myself enough to text Amy, she was standing next to me.\u003C/p>\n\u003Cp>Result\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Time\u003C/th>\u003Cth>Overall Position\u003C/th>\u003Cth>”Runners” Position\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1:21:04.86\u003C/td>\u003Ctd>905 / 1364\u003C/td>\u003Ctd>309 / 756\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cfigure>\n  \u003Cimg src=\"/img/1B9CED58-0ECD-47B3-B640-A1514447C7F5_1_105_c.jpeg\" alt=\"me, crossing the finish line at full effort\">\n  \u003Cfigcaption>me, crossing the finish line at full effort\u003C/figcaption>\n\u003C/figure>",{"headings":154,"imagePaths":155,"frontmatter":156},[],[],{"title":141,"slug":138,"description":142,"cover":149,"heroAlt":144,"pubDate":143},"lessons-from-the-jerk.html",{"id":157,"data":159,"body":163,"filePath":164,"digest":165,"rendered":166},{"title":160,"description":161,"pubDate":162},"Lessons from The Jerk (1978)","","Nov 26 2016","## Lessons from The Jerk (1978)\n\nIf you're not familiar with [The Jerk (1978)][imdb] starring Steve Martin, do yourself (well really, do _me_ a favor) and watch it. It's streaming on Amazon Video. Just go watch it. I'll wait.\n\n\u003Cp class=\"tc\">\n  \u003Cimg src=\"/img/the-jerk-1978.jpg\"\n    class=\"w-50-ns w-100 ml3-ns fr-ns mt1 mb2 pa1 br1 ba b--rainbows\" />\n\u003C/p>\n\nNow that you're back, I want to share 3 very important pieces of advice that the star of our story, Maven Johnson, receives from his loving family before he departs on his Hero's Journey:\n\n1. The Lord loves a working man\n2. Don't trust whitey\n3. See a doctor and get rid of it\n\n**This is universally good advice.**\n\nI may not believe in any higher power, but showing up and being willing to get your hands dirty gives you more advantages than not.\n\nI may not be anything other than an average white american man, but I sure as hell don't trust any authority figure. It's a reasonable precautionary measure.\n\nAnd I may not follow all good advice, but seriously you should see a doctor every once in a while. And call your mom.\n\nI first saw these painted on a plaque in a tattoo shop in Boulder, completely removed from their context in The Jerk, which I had already seen but didn't connect at the time. I had remembered the signage despite missing the connection to the film. I re-watched it last week and finally noticed, and reveled in the warmth of a pop-culture reference coming full circle: it was a moment of life's weird interconnected on full display. I spent a lot of time in that tattoo shop.\n\nWhat difficult-to-ignore advice has influenced you?\n\n[imdb]: http://www.imdb.com/title/tt0079367/","src/content/writing/lessons-from-the-jerk.html.md","f820dc60e29813c4",{"html":167,"metadata":168},"\u003Ch2 id=\"lessons-from-the-jerk-1978\">Lessons from The Jerk (1978)\u003C/h2>\n\u003Cp>If you’re not familiar with \u003Ca href=\"http://www.imdb.com/title/tt0079367/\">The Jerk (1978)\u003C/a> starring Steve Martin, do yourself (well really, do \u003Cem>me\u003C/em> a favor) and watch it. It’s streaming on Amazon Video. Just go watch it. I’ll wait.\u003C/p>\n\u003Cp class=\"tc\">\n  \u003Cimg src=\"/img/the-jerk-1978.jpg\" class=\"w-50-ns w-100 ml3-ns fr-ns mt1 mb2 pa1 br1 ba b--rainbows\">\n\u003C/p>\n\u003Cp>Now that you’re back, I want to share 3 very important pieces of advice that the star of our story, Maven Johnson, receives from his loving family before he departs on his Hero’s Journey:\u003C/p>\n\u003Col>\n\u003Cli>The Lord loves a working man\u003C/li>\n\u003Cli>Don’t trust whitey\u003C/li>\n\u003Cli>See a doctor and get rid of it\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cstrong>This is universally good advice.\u003C/strong>\u003C/p>\n\u003Cp>I may not believe in any higher power, but showing up and being willing to get your hands dirty gives you more advantages than not.\u003C/p>\n\u003Cp>I may not be anything other than an average white american man, but I sure as hell don’t trust any authority figure. It’s a reasonable precautionary measure.\u003C/p>\n\u003Cp>And I may not follow all good advice, but seriously you should see a doctor every once in a while. And call your mom.\u003C/p>\n\u003Cp>I first saw these painted on a plaque in a tattoo shop in Boulder, completely removed from their context in The Jerk, which I had already seen but didn’t connect at the time. I had remembered the signage despite missing the connection to the film. I re-watched it last week and finally noticed, and reveled in the warmth of a pop-culture reference coming full circle: it was a moment of life’s weird interconnected on full display. I spent a lot of time in that tattoo shop.\u003C/p>\n\u003Cp>What difficult-to-ignore advice has influenced you?\u003C/p>",{"headings":169,"imagePaths":172,"frontmatter":173},[170],{"depth":27,"slug":171,"text":160},"lessons-from-the-jerk-1978",[],{"title":160,"slug":157,"pubDate":162,"description":161},"picking-up-the-pieces.html",{"id":174,"data":176,"body":180,"filePath":181,"digest":182,"rendered":183},{"title":177,"description":178,"pubDate":179},"Picking up the pieces","A story about how I've come to embrace odd metaphors to color language","Sep 13 2016","## Picking up the pieces; or How I learned to stop worrying and embrace weird metaphors\n\nMetaphors are fractals of language: once you start to examine them closely, you end up seeing the same pattern over and over and over again.\n\n\u003Ca href=\"../img/john-wayne.jpg\" class=\"none\">\n  \u003Cimg src=\"/img/john-wayne.jpg\"\n    class=\"w-100 mv1 pa1 br1 ba b--rainbows\" />\n\u003C/a>\n\n> This is not my first rodeo but it is my first day\n\nI tend to find myself re-using the same (usually tired) metaphors in all sorts of different situations. But let's not _chalk it up_ to laziness right away. I can't turn a blind eye once I start seeing a particular pattern that's useful for solving problems and, well, as they (I) say, _I've found my hammer and everything becomes a nail_.\u003Csup>[1](#picking-up-the-pieces-01)\u003C/sup>\n\n### Helpful Metaphors\n\nTravel metaphors are always useful, bringing in words like _eyeline_, _takeoff_, and _landing_ into conversations makes work feel more like a swashbuckling adventure than a boring slog through a checklist.\n\nEggs rolling towards the edge of a table is a particularly good image I've borrowed from Matt Work. It's so damn useful when you need show how to deal with decision overload. All management problems work like this:\n\n> There are a dozen eggs rolling toward the edge of the table. You can only catch one.\n\nIt's an argument against micromanagement and interventionism, while offering practical advice for most types of people wrangling problems.\n\n### Unhelpful Metaphors\n\nHave you ever found somehwere in the middle of the back half of a sentence when you realize you're using an obtuse or obscure metaphor, and the feeling sinks in that your captive audience is making a face, because you are in the middle of a cognitive leap so bizarre it would make an anti-comedian blush? Me too.\n\nI call that an \"unhelpful metaphor.\" Even if it does make sense without being a stretch, if it makes the poor audience question the sanity of the speaker it's safe to say it should probably be left out.\n\n**Finding balance**\n\nUsually when I start employing these colorful turns of phrase it's because I'm trending to frame a concept, and I'm using roughly hewn idioms in an imprecise language to do it. Like how a charcoal rubbing brings out the detail hidden to the naked eye, an applicable metaphor, however weird, can help drawn out a details that might not be readily apparent.\n\nSo these days I just say it, whether or not it's a weird comparison. I'm lending my point of view, and in a subjective world, the sooner you understand someone's perspective, the sooner you'l be able to establish empathy.\n\n\u003Caside>\n  \u003Col>\n    \u003Cli id=\"picking-up-the-pieces-01\">Ok. Let's  try and get through the rest this without over-packing every sentence with parenthetical asides (you're not Faulkner, after all.)\u003C/li>\n  \u003C/ol>\n\u003C/aside>","src/content/writing/picking-up-the-pieces.html.md","3bb01f875b152d95",{"html":184,"metadata":185},"\u003Ch2 id=\"picking-up-the-pieces-or-how-i-learned-to-stop-worrying-and-embrace-weird-metaphors\">Picking up the pieces; or How I learned to stop worrying and embrace weird metaphors\u003C/h2>\n\u003Cp>Metaphors are fractals of language: once you start to examine them closely, you end up seeing the same pattern over and over and over again.\u003C/p>\n\u003Ca href=\"../img/john-wayne.jpg\" class=\"none\">\n  \u003Cimg src=\"/img/john-wayne.jpg\" class=\"w-100 mv1 pa1 br1 ba b--rainbows\">\n\u003C/a>\n\u003Cblockquote>\n\u003Cp>This is not my first rodeo but it is my first day\u003C/p>\n\u003C/blockquote>\n\u003Cp>I tend to find myself re-using the same (usually tired) metaphors in all sorts of different situations. But let’s not \u003Cem>chalk it up\u003C/em> to laziness right away. I can’t turn a blind eye once I start seeing a particular pattern that’s useful for solving problems and, well, as they (I) say, \u003Cem>I’ve found my hammer and everything becomes a nail\u003C/em>.\u003Csup>\u003Ca href=\"#picking-up-the-pieces-01\">1\u003C/a>\u003C/sup>\u003C/p>\n\u003Ch3 id=\"helpful-metaphors\">Helpful Metaphors\u003C/h3>\n\u003Cp>Travel metaphors are always useful, bringing in words like \u003Cem>eyeline\u003C/em>, \u003Cem>takeoff\u003C/em>, and \u003Cem>landing\u003C/em> into conversations makes work feel more like a swashbuckling adventure than a boring slog through a checklist.\u003C/p>\n\u003Cp>Eggs rolling towards the edge of a table is a particularly good image I’ve borrowed from Matt Work. It’s so damn useful when you need show how to deal with decision overload. All management problems work like this:\u003C/p>\n\u003Cblockquote>\n\u003Cp>There are a dozen eggs rolling toward the edge of the table. You can only catch one.\u003C/p>\n\u003C/blockquote>\n\u003Cp>It’s an argument against micromanagement and interventionism, while offering practical advice for most types of people wrangling problems.\u003C/p>\n\u003Ch3 id=\"unhelpful-metaphors\">Unhelpful Metaphors\u003C/h3>\n\u003Cp>Have you ever found somehwere in the middle of the back half of a sentence when you realize you’re using an obtuse or obscure metaphor, and the feeling sinks in that your captive audience is making a face, because you are in the middle of a cognitive leap so bizarre it would make an anti-comedian blush? Me too.\u003C/p>\n\u003Cp>I call that an “unhelpful metaphor.” Even if it does make sense without being a stretch, if it makes the poor audience question the sanity of the speaker it’s safe to say it should probably be left out.\u003C/p>\n\u003Cp>\u003Cstrong>Finding balance\u003C/strong>\u003C/p>\n\u003Cp>Usually when I start employing these colorful turns of phrase it’s because I’m trending to frame a concept, and I’m using roughly hewn idioms in an imprecise language to do it. Like how a charcoal rubbing brings out the detail hidden to the naked eye, an applicable metaphor, however weird, can help drawn out a details that might not be readily apparent.\u003C/p>\n\u003Cp>So these days I just say it, whether or not it’s a weird comparison. I’m lending my point of view, and in a subjective world, the sooner you understand someone’s perspective, the sooner you’l be able to establish empathy.\u003C/p>\n\u003Caside>\n  \u003Col>\n    \u003Cli id=\"picking-up-the-pieces-01\">Ok. Let's  try and get through the rest this without over-packing every sentence with parenthetical asides (you're not Faulkner, after all.)\u003C/li>\n  \u003C/ol>\n\u003C/aside>",{"headings":186,"imagePaths":196,"frontmatter":197},[187,190,193],{"depth":27,"slug":188,"text":189},"picking-up-the-pieces-or-how-i-learned-to-stop-worrying-and-embrace-weird-metaphors","Picking up the pieces; or How I learned to stop worrying and embrace weird metaphors",{"depth":79,"slug":191,"text":192},"helpful-metaphors","Helpful Metaphors",{"depth":79,"slug":194,"text":195},"unhelpful-metaphors","Unhelpful Metaphors",[],{"title":177,"slug":174,"description":178,"pubDate":179},"twitter.html",{"id":198,"data":200,"body":206,"filePath":207,"assetImports":208,"digest":210,"rendered":211},{"title":201,"description":202,"pubDate":203,"heroAlt":204,"cover":205},"Twitter","Leaving Twitter","Jul 18 2022","Ghibli style a lonely house in mountain landscape at dusk orange and pink sky - Stable Diffusion v1.5","__ASTRO_IMAGE_../../assets/d107c44c-bd10-4128-a703-da86feaa2176.png","**Update: I left the site in early November 2022 and locked my account. A searchable copy of my bad tweets is available at [hellsite.sambreed.dev](https://hellsite.sambreed.dev).**\n\nSo I'm thinking about getting off twitter.\n\nThe more I use it, the less I get out of it. \n\nI've turned into a passive user, one loathe to create and barely there to engage. \nI don't want to see my retweets from people I follow. \n\nOnly a handful of people see and interact with what I post, and those feel mechanical. \n\nThe friends I met on the platform in the early 2010s have all moved on or have large followings. \n\nMy following has stayed modest, which I attribute to my considerate pull-back in 2015 when I abdicated my company, got a corporate job, and stopped pursing speaking engagements at conferences.\n\nNow it's 7 years later and the way I see the world has changed.\n\nI no longer envy engagement for engagement's sake; I can see through the shills and marketers and shit-posters to the dark heat of the feedback loop.\n\nMy phone is not a positive force for my ADHD; if it's in front of me, I will pick it up and flip through a few screens, seeking the pleasure of the dopamine hit I get from the right type of content: a like, a reply, a recognition, or (usually) just the guilty pleasure of schadenfreude.\n\nI stopped using Instagram on my phone because it felt like an attention trap that I knew well-enough to not interact with too frequently, but like driving past a multi-car pile up, something I couldn't keep myself from gawking at.\n\nIf I had anything important to say, why bother saying it on Twitter when I can self-publish just as easily?\n\nAnd while we're asking questions, are the platform and the format even good?\n\nForced brevity can yield increased clarity of thought, but it's far from a guarantee.\n\nEnding on a positive note, there are a few __good__ ways to use Twitter:\n- **Chronological Timeline.** Yes, I recognize that much has been made of this. The common joke being that the algorithmic timeline is so bad they have to give you a way to disable it or they wouldn't have any users. I'm sure this isn't all true, the algorithmic timeline __must__ have add value for __someone__, I just know that it isn't for me. \n- **[Disable all Retweets.](https://glitch.com/~turn-off-retweets)** I can't recommend this enough. One of the things that has kept me on the platform has been the ability to read things by the people I follow. When retweets were added, it seemed good, but some of my favorite tweeters are prolific and indiscriminate retweeters, which can make for a feed that's unpredictably filled with angry content.\n- **Lists.** I feel like this feature isn't well-promoted in the app for how good it is. Private, pinned lists (named with emoji characters, of course) let you greatly expand the content you'll see without polluting your main timeline.\n- **Never tweet.** I'm lifting this advice directly from my colleague Keith. Unless you're a journalist, a marketer, or otherwise earn a living from shitposting, the best possible way to use Twitter is to never tweet under any circumstances.","src/content/writing/twitter.html.md",[209],"../../assets/d107c44c-bd10-4128-a703-da86feaa2176.png","2d22278bc502af74",{"html":212,"metadata":213},"\u003Cp>\u003Cstrong>Update: I left the site in early November 2022 and locked my account. A searchable copy of my bad tweets is available at \u003Ca href=\"https://hellsite.sambreed.dev\">hellsite.sambreed.dev\u003C/a>.\u003C/strong>\u003C/p>\n\u003Cp>So I’m thinking about getting off twitter.\u003C/p>\n\u003Cp>The more I use it, the less I get out of it.\u003C/p>\n\u003Cp>I’ve turned into a passive user, one loathe to create and barely there to engage.\nI don’t want to see my retweets from people I follow.\u003C/p>\n\u003Cp>Only a handful of people see and interact with what I post, and those feel mechanical.\u003C/p>\n\u003Cp>The friends I met on the platform in the early 2010s have all moved on or have large followings.\u003C/p>\n\u003Cp>My following has stayed modest, which I attribute to my considerate pull-back in 2015 when I abdicated my company, got a corporate job, and stopped pursing speaking engagements at conferences.\u003C/p>\n\u003Cp>Now it’s 7 years later and the way I see the world has changed.\u003C/p>\n\u003Cp>I no longer envy engagement for engagement’s sake; I can see through the shills and marketers and shit-posters to the dark heat of the feedback loop.\u003C/p>\n\u003Cp>My phone is not a positive force for my ADHD; if it’s in front of me, I will pick it up and flip through a few screens, seeking the pleasure of the dopamine hit I get from the right type of content: a like, a reply, a recognition, or (usually) just the guilty pleasure of schadenfreude.\u003C/p>\n\u003Cp>I stopped using Instagram on my phone because it felt like an attention trap that I knew well-enough to not interact with too frequently, but like driving past a multi-car pile up, something I couldn’t keep myself from gawking at.\u003C/p>\n\u003Cp>If I had anything important to say, why bother saying it on Twitter when I can self-publish just as easily?\u003C/p>\n\u003Cp>And while we’re asking questions, are the platform and the format even good?\u003C/p>\n\u003Cp>Forced brevity can yield increased clarity of thought, but it’s far from a guarantee.\u003C/p>\n\u003Cp>Ending on a positive note, there are a few \u003Cstrong>good\u003C/strong> ways to use Twitter:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Chronological Timeline.\u003C/strong> Yes, I recognize that much has been made of this. The common joke being that the algorithmic timeline is so bad they have to give you a way to disable it or they wouldn’t have any users. I’m sure this isn’t all true, the algorithmic timeline \u003Cstrong>must\u003C/strong> have add value for \u003Cstrong>someone\u003C/strong>, I just know that it isn’t for me.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://glitch.com/~turn-off-retweets\">Disable all Retweets.\u003C/a>\u003C/strong> I can’t recommend this enough. One of the things that has kept me on the platform has been the ability to read things by the people I follow. When retweets were added, it seemed good, but some of my favorite tweeters are prolific and indiscriminate retweeters, which can make for a feed that’s unpredictably filled with angry content.\u003C/li>\n\u003Cli>\u003Cstrong>Lists.\u003C/strong> I feel like this feature isn’t well-promoted in the app for how good it is. Private, pinned lists (named with emoji characters, of course) let you greatly expand the content you’ll see without polluting your main timeline.\u003C/li>\n\u003Cli>\u003Cstrong>Never tweet.\u003C/strong> I’m lifting this advice directly from my colleague Keith. Unless you’re a journalist, a marketer, or otherwise earn a living from shitposting, the best possible way to use Twitter is to never tweet under any circumstances.\u003C/li>\n\u003C/ul>",{"headings":214,"imagePaths":215,"frontmatter":216},[],[],{"title":201,"slug":198,"description":202,"pubDate":203,"cover":209,"heroAlt":204},"tragic-design-is.html",{"id":217,"data":219,"body":222,"filePath":223,"digest":224,"rendered":225},{"title":220,"pubDate":221},"Tragic Design is...","Aug 6 2017","## Tragic Design is...\n\nWhen an app lets you accidentally enter a zip code instead of a full address and still completes your order. Optimizing for click-throughs, I guess?\n\n\u003Cdiv class=\"w-100 mb2 fr-ns tc\">\n  \u003Ca href=\"/img/tragic-01.png\">\u003Cimg src=\"/img/tragic-01.png\" alt=\"uber eats it\" />\u003C/a>\u003Cbr/>\n  \u003Csmall>\u003Ci>huh?\u003C/i>\u003C/small>\n\u003C/div>\n\n~~This was too boring for a tweet and now I want to find more examples.~~ Then I made some tweets.\n\nThe following was adapted using [Darius Kazemi's](http://tinysubversions.com/) wonderful new alternative to twitter moments™, [spooler](https://tinysubversions.com/spooler/?url=https://twitter.com/sambreed/status//885343588485259264).\n\n### A thread by \u003Ca href=\"https://twitter.com/sambreed/status/885343588485259264\">very un-dude\u003C/a> (that's me)\n\nWhy do twitter &amp; instagram go out of their way to make it impossible to either right click or drag images out of the browser to save? I mean I know why but it fucking sucks.\u003Csup>[[1](https://twitter.com/sambreed/status/8853397799439441931)]\u003C/sup> It's a god damn browser feature that you have to go out of your way to obscure. Web devs: push back!\u003Csup>[[2](https://twitter.com/sambreed/status/885340468485120000)]\u003C/sup>\n\nTwitter stop spending time fucking up built in features. The contents of an &lt;img&gt; tags aren't DRM'ed (yet), here's to hoping they never are.\u003Csup>[[3](https://twitter.com/sambreed/status/885341066592870400)]\u003C/sup> I should not have to do this to save silly images, you shitheels!\u003Csup>[[4](https://twitter.com/sambreed/status/885341803079016448)]\u003C/sup>\n\n\u003Ca href=\"/img/twitter-images2.gif\" class=\"none\">\u003Cimg src=\"/img/twitter-images.gif\" alt=\"twitter obscures image urls\" />\u003C/a>\n\n> oh shit I made a dope new feature tho — that image is now _every_ image. twitter, if you hire me I will gladly ruin this product with you...\u003Csup>[[5](https://twitter.com/sambreed/status/885341803079016448)]\u003C/sup>\n\n\u003Ca href=\"/img/twitter-images2.gif\" class=\"none\">\u003Cimg src=\"/img/twitter-images2.gif\" alt=\"wherein I ruin the product\" />\u003C/a>\n\n### Why is this tragic?\n\nIn the case of _Uber_, it's just stupid that it let me complete an order without confirming the address. The checkout flow on web seems to have changed since I recorded that screenshot.\n\nFor _Twitter_, this is a case of wanting to optimize sharing over saving and reposting. The only problem is that taints an essential underpinning of the world wide web: URIs are the lowest common denomonator of sharing. It's excessively inefficient to embed media _without_ having it hosted somewhere that you can identify with a publicly readable URI. Using DOM and CSS to try to prevent users from discovering the _resource idenfiers_ for media you just served them is antithetical to building an open web. The irony is that Twitter is that it's biggest redeeming quality is that it's not an _entirely closed_ walled garden, like Facebook or Snapchat. Working against a platform feature that's a core property of something you benefit from seems doubly wasteful.\n\n### What is _Tragic Design_\n\nFor one, [Tragic Design](http://a.co/eP48MQx) is a book by Jonathan Shariat & Cynthia Savard Saucier that made it's way onto my [2017 Reading List](https://wookiehangover.com/writing/2017-reading-list.html). Go figure. It's a clever title and describes an obvious-yet-undescribed idea: design that's harmful to users can cause a disproportionate amount of trouble, beyond just looking bad. For all the talk about the human element being paramount in the thoughts of designers, it's surprisingly easy for this to be the first thing that's lost when software developers (or even worse, bureaucrats) get involved.\n\n*Footnotes*\n\n1. https://twitter.com/sambreed/status/885339779943944193\n2. https://twitter.com/sambreed/status/885340468485120000\n3. https://twitter.com/sambreed/status/885341066592870400\n4. https://twitter.com/sambreed/status/885341803079016448\n5. https://twitter.com/sambreed/status/885343588485259264","src/content/writing/tragic-design-is.html.md","59e14e864a54ae33",{"html":226,"metadata":227},"\u003Ch2 id=\"tragic-design-is\">Tragic Design is…\u003C/h2>\n\u003Cp>When an app lets you accidentally enter a zip code instead of a full address and still completes your order. Optimizing for click-throughs, I guess?\u003C/p>\n\u003Cdiv class=\"w-100 mb2 fr-ns tc\">\n  \u003Ca href=\"/img/tragic-01.png\">\u003Cimg src=\"/img/tragic-01.png\" alt=\"uber eats it\">\u003C/a>\u003Cbr>\n  \u003Csmall>\u003Ci>huh?\u003C/i>\u003C/small>\n\u003C/div>\n\u003Cp>\u003Cdel>This was too boring for a tweet and now I want to find more examples.\u003C/del> Then I made some tweets.\u003C/p>\n\u003Cp>The following was adapted using \u003Ca href=\"http://tinysubversions.com/\">Darius Kazemi’s\u003C/a> wonderful new alternative to twitter moments™, \u003Ca href=\"https://tinysubversions.com/spooler/?url=https://twitter.com/sambreed/status//885343588485259264\">spooler\u003C/a>.\u003C/p>\n\u003Ch3 id=\"a-thread-by-very-un-dude-thats-me\">A thread by \u003Ca href=\"https://twitter.com/sambreed/status/885343588485259264\">very un-dude\u003C/a> (that’s me)\u003C/h3>\n\u003Cp>Why do twitter &#x26; instagram go out of their way to make it impossible to either right click or drag images out of the browser to save? I mean I know why but it fucking sucks.\u003Csup>[\u003Ca href=\"https://twitter.com/sambreed/status/8853397799439441931\">1\u003C/a>]\u003C/sup> It’s a god damn browser feature that you have to go out of your way to obscure. Web devs: push back!\u003Csup>[\u003Ca href=\"https://twitter.com/sambreed/status/885340468485120000\">2\u003C/a>]\u003C/sup>\u003C/p>\n\u003Cp>Twitter stop spending time fucking up built in features. The contents of an &#x3C;img> tags aren’t DRM’ed (yet), here’s to hoping they never are.\u003Csup>[\u003Ca href=\"https://twitter.com/sambreed/status/885341066592870400\">3\u003C/a>]\u003C/sup> I should not have to do this to save silly images, you shitheels!\u003Csup>[\u003Ca href=\"https://twitter.com/sambreed/status/885341803079016448\">4\u003C/a>]\u003C/sup>\u003C/p>\n\u003Cp>\u003Ca href=\"/img/twitter-images2.gif\" class=\"none\">\u003Cimg src=\"/img/twitter-images.gif\" alt=\"twitter obscures image urls\">\u003C/a>\u003C/p>\n\u003Cblockquote>\n\u003Cp>oh shit I made a dope new feature tho — that image is now \u003Cem>every\u003C/em> image. twitter, if you hire me I will gladly ruin this product with you…\u003Csup>[\u003Ca href=\"https://twitter.com/sambreed/status/885341803079016448\">5\u003C/a>]\u003C/sup>\u003C/p>\n\u003C/blockquote>\n\u003Cp>\u003Ca href=\"/img/twitter-images2.gif\" class=\"none\">\u003Cimg src=\"/img/twitter-images2.gif\" alt=\"wherein I ruin the product\">\u003C/a>\u003C/p>\n\u003Ch3 id=\"why-is-this-tragic\">Why is this tragic?\u003C/h3>\n\u003Cp>In the case of \u003Cem>Uber\u003C/em>, it’s just stupid that it let me complete an order without confirming the address. The checkout flow on web seems to have changed since I recorded that screenshot.\u003C/p>\n\u003Cp>For \u003Cem>Twitter\u003C/em>, this is a case of wanting to optimize sharing over saving and reposting. The only problem is that taints an essential underpinning of the world wide web: URIs are the lowest common denomonator of sharing. It’s excessively inefficient to embed media \u003Cem>without\u003C/em> having it hosted somewhere that you can identify with a publicly readable URI. Using DOM and CSS to try to prevent users from discovering the \u003Cem>resource idenfiers\u003C/em> for media you just served them is antithetical to building an open web. The irony is that Twitter is that it’s biggest redeeming quality is that it’s not an \u003Cem>entirely closed\u003C/em> walled garden, like Facebook or Snapchat. Working against a platform feature that’s a core property of something you benefit from seems doubly wasteful.\u003C/p>\n\u003Ch3 id=\"what-is-tragic-design\">What is \u003Cem>Tragic Design\u003C/em>\u003C/h3>\n\u003Cp>For one, \u003Ca href=\"http://a.co/eP48MQx\">Tragic Design\u003C/a> is a book by Jonathan Shariat &#x26; Cynthia Savard Saucier that made it’s way onto my \u003Ca href=\"https://wookiehangover.com/writing/2017-reading-list.html\">2017 Reading List\u003C/a>. Go figure. It’s a clever title and describes an obvious-yet-undescribed idea: design that’s harmful to users can cause a disproportionate amount of trouble, beyond just looking bad. For all the talk about the human element being paramount in the thoughts of designers, it’s surprisingly easy for this to be the first thing that’s lost when software developers (or even worse, bureaucrats) get involved.\u003C/p>\n\u003Cp>\u003Cem>Footnotes\u003C/em>\u003C/p>\n\u003Col>\n\u003Cli>\u003Ca href=\"https://twitter.com/sambreed/status/885339779943944193\">https://twitter.com/sambreed/status/885339779943944193\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/sambreed/status/885340468485120000\">https://twitter.com/sambreed/status/885340468485120000\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/sambreed/status/885341066592870400\">https://twitter.com/sambreed/status/885341066592870400\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/sambreed/status/885341803079016448\">https://twitter.com/sambreed/status/885341803079016448\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/sambreed/status/885343588485259264\">https://twitter.com/sambreed/status/885343588485259264\u003C/a>\u003C/li>\n\u003C/ol>",{"headings":228,"imagePaths":241,"frontmatter":242},[229,232,235,238],{"depth":27,"slug":230,"text":231},"tragic-design-is","Tragic Design is…",{"depth":79,"slug":233,"text":234},"a-thread-by-very-un-dude-thats-me","A thread by very un-dude (that’s me)",{"depth":79,"slug":236,"text":237},"why-is-this-tragic","Why is this tragic?",{"depth":79,"slug":239,"text":240},"what-is-tragic-design","What is Tragic Design",[],{"title":220,"slug":217,"pubDate":221},"why-I-read-what-I-read-in-2016.html",{"id":243,"data":245,"body":248,"filePath":249,"digest":250,"rendered":251},{"title":246,"pubDate":247},"Why I Read What I Read in 2016","Jan 1 2017","## Why I Read What I Read in 2016\n\nJanuary 1, 2017\n\nI tried to read more this year, I really did. I had serious intentions about it, so I did what serious people do, I started keeping a list. Or at least I decided to publish it and keep it up to date. There was a natural satisfaction, an additional dopamine rush of accomplishment, to checking off an title right after I finished it.\n\n> So far this book has no kissing in it at all and is totally boring\n\n\u003Cp class=\"w-100 tr\">\n— \u003Ca href=\"https://twitter.com/sambreed/status/736443022850719744\" target=\"__blank\">Some idiot on twitter\u003C/a>\n\u003C/p>\n\n\u003Ca href=\"https://twitter.com/sambreed/status/736443022850719744\">\n  \u003Cimg src=\"/img/kissinger.jpg\"\n    class=\"w-60-l w-50-m w-100 ml3-ns fr-ns mt1 mb2 pa1 br1 ba b--rainbows\" />\n\u003C/a>\n\t\nI started on Wunderlist. Probably around the second half of 2015 enough static had built up around the problem to trigger a release, a single spasm of output into list form, tapped diligently onto the keyboard of my iPhone. That list, of things I was currently reading and thing I remembered reading up to that point in the year and books I had already purchased and were waiting for me on my bookshelf, was what source my 2015 post, which I still wrote in a hurry on New Year’s Day 2016.\n\nI kept up the practice of maintaining a reading list in Wunderlist. It unfurled itself ahead of me and pushed the past books forever below the fold. I got ambitious a couple of times and added dozens of titles, so many in fact that the list became a burden. I couldn’t look at it. And the format, for however much it rewarded me with the initial thrill of checking off a title, downplayed the previous items in a way that was a little unsatisfying. I had also taken to using Wunderlist (which I love, btw, despite the criticism) for work task tracking, so it became a thing that now did two things, which is far to many functions for my limbic brain to remember how to reward. So I let that list wither a little until finally I abandoned it entirely.\n\nThat’s when I finally re-did my website and by doing a classic thing-you-shouldn’t-do and rolled my own publishing software from scratch. Mostly so I could maintain a list in markdown, which, I kinda did?\n\nLast year’s was a Medium post. Medium is great. I’m mad jellz of what they built. But I like writing in thick app, and I like writing in markdown, and I like being able to keep and move around my own files.\u003Csup>1\u003C/sup>\n\nSo I once again went through the act of translating my reading history from Wunderlist into a more sharable format. Hence the list you’ll find archived at the bottom of this post.\u003Csup>2\u003C/sup>\n\n### How to read this list:\n\nBecause decisions are hard, I’ve gone through the trouble of preparing a few variations:\n\n1. The “Classic” list, as maintained in earlier versions of this post. If you don’t like introspective bullshit, skip to this one — [Classic List](2016-reading-list.html)\n2. The Esoteric List, my first thoughts on how to properly formulate a wrap up post that sums up my life this year — [Esoteric](#so-you-like-books-huh-)\n3. Up / down recommendations, my no frills recommendations: read it or skip it — [Up/Down](#up-down)\n\nI now present these, out of order:\n\n### So you like books, huh?\n\nFuck man, this was a hell of a year, wasn’t it? I’ve probably said that exact phrase a couple of dozen times in the waning days of 2016. But, fuck, man, wasn’t it tho?\n\nWhile trying to narrowly avoid [inner emigration](https://en.m.wikipedia.org/wiki/Inner_emigration), I’ve put myself on a full press embargo after the months of frenzy leading up to the US Presidential Election: I’m terrified that the 24 hour news cycle is designed only to distract, and there’s very little to distinguish honest journalism from partisan hackery in the echo chambers we’ve spent the last few years building for ourselves.\n\nSo I read some fuckin books.\n\n### Fiction\n\nI read three pieces of fiction this year that stand out. None were published any time recently. They have with very little to do with one another, save for that _Flow My Tears…_ and _Cat’s Cradle_ could loosely be thrown into the Science Fiction section at a used bookstore and no crime would have been committed, and I enjoyed each one of them for entirely different reasons.\n\n* [_Flow My Tears, the Policeman Said_][tears] by Philip K. Dick ★★★★☆\n\nPhilip K. Dick often wrote about  men who suddenly find themselves out of place, where their underlying assumptions about the world are either slowly subverted if not turned entirely upside down. _Flow My Tears…_ is one of the latter.\n\n* [_Cat’s Cradle_: A Novel][cats] by Kurt Vonnegut ★★★★★\n\nKurt Vonnegut knows how to keep things brief and always remembers to include a punchline. And there’s a main character in this book with the same last name as me, go figure why I liked it. You should read this, it’s short and funny and leaves you thinking about big questions about humanity. And Ice-9.\n\n* [_American Gods_][gods] by Neil Gaiman ★★★★☆\n\nNeil Gaiman is not an author that I’ve ever really gotten into. He seems like a soft spoken British man who spins somewhat boring stories infused with “magick” and “faeries’ or something like that, right? Either way, I was probably quick to judge Gaiman on his observable aesthetic and film adaptations. American Gods is great.\n\nMore importantly, these three works bring into question the notion of identity: in _Flow My Tears…_, the protagonists celebrity identity is stripped away in an instant with no explanation; _Cat’s Cradle_ centers around a group of people failing to understand each other and their means of relating to the world, all while foolishly toying with scientific advances that carry devastating consequences; finally, American Gods serves as modern mythology-cum-Bildungsroman and is about a character literally named “Shadow” who’s piecing together his present version of himself from fractured memories of his past life while struggling to separate reality from fantasy or illusion.\n\nPhew, ok, that was a mouthful. On with the rest of the list.\n\n### Non-Fiction\n\nLast year’s wrap up post was assembled in a hurry, and while I certainly had chosen a few vectors in my non-fiction selections, I had of course done it somewhat haphazardly. I largely discovered the things on my 2015 list myself by way of the internet. In 2016 I went about it a bit differently\u003Csup>2\u003C/sup> and I’m pleased with the results.\n\n* [_Fire in the Valley_: The Birth and Death of the Personal Computer][fire] by Michael Swaine and Paul Freiberger ★★★★★\n\nIf you work in tech, read this book. [See previously](2016-reading-list.html#fire-in-the-valley-details)\n\n* [_Incerto_][incerto] by Nassim Nicholas Taleb ★★★★★\n\t* _Fooled By Randomness_\n\t* _The Black Swan_\n\t* _Antifragile_\n\nThe last thing I expected to find this year was yet another author to do a deep-dive into, but Nassim Taleb is my man this year. I picked up Antifragile in February based off of Joe’s glowing recommendation. I had recalled seeing the covers of Fooled By Randomness and The Black Swan in bookstores in recent years, but I glibly assumed that they were of the Malcom Gladwell variety of disposable pop-science / psychology non ficton, full of bluster and anecdote but otherwise lacking in anything concrete. Similar to the genre of business books, but for people who think they’re smarter than people who read business books.\n\nBoy was I wrong.\n\nFull of bluster: yes. Taleb is absurdly bumptious, but in a way that I find endearing. Lacking in content: hardly. The only similarity to cheapie business books is some of the repetitiveness in the arguments being presented, but that’s at best a superficial criticism. I poured through _Antifragile_, the cumulative argument in the [_Incerto_][incerto] series, but the prologue assured me that I wouldn’t need to read the previous three volumes as a prerequisite to grokking the subject matter.\n\nAfter reading _Antifragile_ I let its ideas stew in my brain for a few months, as I dug through other non-fiction in nearby fields and concepts, particularly by Niall Ferguson. But _Antifragile_ kept on bugging me. I wanted to re-read it.\n\nThe fundamental asymmetries that exist between what we think we know and everything else in the universe, and we’re hardwired to misinterpret events. As a species we excel at _predicting the past_ and are generally terrible at keeping score when we make predictions about the future — and our past losses can always be  summarized in convenient and intelligent-sounding justifications.\n\nAround that same time I started following Nassim Taleb on twitter (worth it) and that he had recently published [_Incerto_][incerto] as a handsome box of paperbacks. Sold. Also gave as a gift to a few smartypants people I know.\n\nPresented as a series of essays, anecdotes, and diatribes, with copious footnotes and even a technical essay or two, _Fooled By Randomness_, _The Black Swan_, and _Antifragile_ just about made my anti-academic year, and are now prized possessions on my bookshelf. I look forward to finishing _Bed of Procrustes_ this year and to re-reading the series again in the future. I’ve never encountered so many powerful and challenging ideas all in one place. It’s a piece of non-fiction that begs to be read for pleasure over and over again, just like a good sci-fi or fantasy series would. Amazing.\n\n### Up / Down\n\nCold, meaningless ratings.\n\n* Science Fiction / Fantasy\n\t* _The Three Body Problem_ by Cixin Liu ★★★★☆\n\t* _The Killing Moon_ by N.K. Jemisin ★★★★☆\n\t* _Influx_ by Daniel Suarez ★★★☆☆\n\t* _Daemon_ by Daniel Suarez ★★★☆☆\n\t* _Dirk Gently’s Holistic Detective Agency_ by Douglas Adams ★★☆☆☆\n\n* Historical Fiction\n\t* _Burr_ by Gore Vidal ★★★☆☆\n\n* “Fiction” section fiction\n\t* _Inherent Vice_ by Thomas Pynchon ★★★★★\n\t* _The Illuminatus! Trilogy_ by Robert Shea and Robert Anton Wilson ★★★★☆\n\n* Finance / Economics / History\n\t* _The (Mis)Behavior of Markets_ by Beniot Mandlebrot ★★★★★\n\t* _Against the Gods: the Remarkable Story of Risk_ by Peter L. Bernstein ★★★★★\n\t* _Superforecasting_ by Philip E. Tetlock and Dan Gardner ★★★★★\n\t* _The Ascent of Money_ by Niall Feguson ★★★★☆\n\t* _Civilization_ by Niall Ferguson ★★★☆☆\n\t* _Sapiens_ by Yuval Harari ★★★☆☆\n\t* _The Sovereign Individual_ by James Dale Davidson and Lord William Rees-Mogg ★☆☆☆☆\n\t* _Digital Gold_ by Nathaniel Popper ★★★☆☆\n\n* Memoir / Biography\n * _Barbarian Days_ by William Finnegan ★★★★★\n * _Kissinger: 1923 - 1969 The Idealist_ by Niall Ferguson ★★★★☆\n * _Learning to Live Finally: the Last Interview_ by Jacque Derrida ★★★☆☆\n * _Brian Eno: Visual Music_ by Christopher Scoates ★★★★☆\n * _7 Days in Ohio_ by Nathan Rabin ★★★★☆\n\n\n1. File ownership and content exportability are typically the first rights you wave to operate in someone else’s walled garden. It’s not hard to imagine a future wherein a change to a Terms of Service agreement suddenly applies restrictive licensing to content you’ve created and uploaded. The right to access the bits that make up one’s work is essential. Also note that filesystem access in mobile is a far cry from what it is in the realm of desktop computing, another dark shadow on the horizon for those interested in keeping platforms open and free.\n2. (but above the footnotes)\n3. Rather than having to do all the hard work of choosing what to read, I let my notable internet person Joe McCann do most of the heavy lifting. I borrowed heavily from his [2015 list](https://medium.com/@joemccann/don-t-read-these-books-in-2016-ee07f1ad8d3e) and presumably nabbed a few titles off his 2016 shelf as well. Thanks for saving me the effort of finding interesting non-ficton, Joe.\n\n\n[tears]: https://www.amazon.com/Flow-My-Tears-Policeman-Said/dp/0547572255/\n[cats]: https://www.amazon.com/Cats-Cradle-Novel-Kurt-Vonnegut/dp/038533348X/\n[gods]: https://www.amazon.com/American-Gods-Tenth-Anniversary-Novel/dp/0062472100/\n[fire]: https://www.amazon.com/Fire-Valley-Birth-Personal-Computer/dp/1937785769/\n[incerto]: https://www.amazon.com/Incerto-Fooled-Randomness-Procrustes-Antifragile/dp/0399590455/","src/content/writing/what-I-read-in-2016.html.md","6be065a9fa48a558",{"html":252,"metadata":253},"\u003Ch2 id=\"why-i-read-what-i-read-in-2016\">Why I Read What I Read in 2016\u003C/h2>\n\u003Cp>January 1, 2017\u003C/p>\n\u003Cp>I tried to read more this year, I really did. I had serious intentions about it, so I did what serious people do, I started keeping a list. Or at least I decided to publish it and keep it up to date. There was a natural satisfaction, an additional dopamine rush of accomplishment, to checking off an title right after I finished it.\u003C/p>\n\u003Cblockquote>\n\u003Cp>So far this book has no kissing in it at all and is totally boring\u003C/p>\n\u003C/blockquote>\n\u003Cp class=\"w-100 tr\">\n— \u003Ca href=\"https://twitter.com/sambreed/status/736443022850719744\" target=\"__blank\">Some idiot on twitter\u003C/a>\n\u003C/p>\n\u003Ca href=\"https://twitter.com/sambreed/status/736443022850719744\">\n  \u003Cimg src=\"/img/kissinger.jpg\" class=\"w-60-l w-50-m w-100 ml3-ns fr-ns mt1 mb2 pa1 br1 ba b--rainbows\">\n\u003C/a>\n\u003Cp>I started on Wunderlist. Probably around the second half of 2015 enough static had built up around the problem to trigger a release, a single spasm of output into list form, tapped diligently onto the keyboard of my iPhone. That list, of things I was currently reading and thing I remembered reading up to that point in the year and books I had already purchased and were waiting for me on my bookshelf, was what source my 2015 post, which I still wrote in a hurry on New Year’s Day 2016.\u003C/p>\n\u003Cp>I kept up the practice of maintaining a reading list in Wunderlist. It unfurled itself ahead of me and pushed the past books forever below the fold. I got ambitious a couple of times and added dozens of titles, so many in fact that the list became a burden. I couldn’t look at it. And the format, for however much it rewarded me with the initial thrill of checking off a title, downplayed the previous items in a way that was a little unsatisfying. I had also taken to using Wunderlist (which I love, btw, despite the criticism) for work task tracking, so it became a thing that now did two things, which is far to many functions for my limbic brain to remember how to reward. So I let that list wither a little until finally I abandoned it entirely.\u003C/p>\n\u003Cp>That’s when I finally re-did my website and by doing a classic thing-you-shouldn’t-do and rolled my own publishing software from scratch. Mostly so I could maintain a list in markdown, which, I kinda did?\u003C/p>\n\u003Cp>Last year’s was a Medium post. Medium is great. I’m mad jellz of what they built. But I like writing in thick app, and I like writing in markdown, and I like being able to keep and move around my own files.\u003Csup>1\u003C/sup>\u003C/p>\n\u003Cp>So I once again went through the act of translating my reading history from Wunderlist into a more sharable format. Hence the list you’ll find archived at the bottom of this post.\u003Csup>2\u003C/sup>\u003C/p>\n\u003Ch3 id=\"how-to-read-this-list\">How to read this list:\u003C/h3>\n\u003Cp>Because decisions are hard, I’ve gone through the trouble of preparing a few variations:\u003C/p>\n\u003Col>\n\u003Cli>The “Classic” list, as maintained in earlier versions of this post. If you don’t like introspective bullshit, skip to this one — \u003Ca href=\"2016-reading-list.html\">Classic List\u003C/a>\u003C/li>\n\u003Cli>The Esoteric List, my first thoughts on how to properly formulate a wrap up post that sums up my life this year — \u003Ca href=\"#so-you-like-books-huh-\">Esoteric\u003C/a>\u003C/li>\n\u003Cli>Up / down recommendations, my no frills recommendations: read it or skip it — \u003Ca href=\"#up-down\">Up/Down\u003C/a>\u003C/li>\n\u003C/ol>\n\u003Cp>I now present these, out of order:\u003C/p>\n\u003Ch3 id=\"so-you-like-books-huh\">So you like books, huh?\u003C/h3>\n\u003Cp>Fuck man, this was a hell of a year, wasn’t it? I’ve probably said that exact phrase a couple of dozen times in the waning days of 2016. But, fuck, man, wasn’t it tho?\u003C/p>\n\u003Cp>While trying to narrowly avoid \u003Ca href=\"https://en.m.wikipedia.org/wiki/Inner_emigration\">inner emigration\u003C/a>, I’ve put myself on a full press embargo after the months of frenzy leading up to the US Presidential Election: I’m terrified that the 24 hour news cycle is designed only to distract, and there’s very little to distinguish honest journalism from partisan hackery in the echo chambers we’ve spent the last few years building for ourselves.\u003C/p>\n\u003Cp>So I read some fuckin books.\u003C/p>\n\u003Ch3 id=\"fiction\">Fiction\u003C/h3>\n\u003Cp>I read three pieces of fiction this year that stand out. None were published any time recently. They have with very little to do with one another, save for that \u003Cem>Flow My Tears…\u003C/em> and \u003Cem>Cat’s Cradle\u003C/em> could loosely be thrown into the Science Fiction section at a used bookstore and no crime would have been committed, and I enjoyed each one of them for entirely different reasons.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/Flow-My-Tears-Policeman-Said/dp/0547572255/\">\u003Cem>Flow My Tears, the Policeman Said\u003C/em>\u003C/a> by Philip K. Dick ★★★★☆\u003C/li>\n\u003C/ul>\n\u003Cp>Philip K. Dick often wrote about  men who suddenly find themselves out of place, where their underlying assumptions about the world are either slowly subverted if not turned entirely upside down. \u003Cem>Flow My Tears…\u003C/em> is one of the latter.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/Cats-Cradle-Novel-Kurt-Vonnegut/dp/038533348X/\">\u003Cem>Cat’s Cradle\u003C/em>: A Novel\u003C/a> by Kurt Vonnegut ★★★★★\u003C/li>\n\u003C/ul>\n\u003Cp>Kurt Vonnegut knows how to keep things brief and always remembers to include a punchline. And there’s a main character in this book with the same last name as me, go figure why I liked it. You should read this, it’s short and funny and leaves you thinking about big questions about humanity. And Ice-9.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/American-Gods-Tenth-Anniversary-Novel/dp/0062472100/\">\u003Cem>American Gods\u003C/em>\u003C/a> by Neil Gaiman ★★★★☆\u003C/li>\n\u003C/ul>\n\u003Cp>Neil Gaiman is not an author that I’ve ever really gotten into. He seems like a soft spoken British man who spins somewhat boring stories infused with “magick” and “faeries’ or something like that, right? Either way, I was probably quick to judge Gaiman on his observable aesthetic and film adaptations. American Gods is great.\u003C/p>\n\u003Cp>More importantly, these three works bring into question the notion of identity: in \u003Cem>Flow My Tears…\u003C/em>, the protagonists celebrity identity is stripped away in an instant with no explanation; \u003Cem>Cat’s Cradle\u003C/em> centers around a group of people failing to understand each other and their means of relating to the world, all while foolishly toying with scientific advances that carry devastating consequences; finally, American Gods serves as modern mythology-cum-Bildungsroman and is about a character literally named “Shadow” who’s piecing together his present version of himself from fractured memories of his past life while struggling to separate reality from fantasy or illusion.\u003C/p>\n\u003Cp>Phew, ok, that was a mouthful. On with the rest of the list.\u003C/p>\n\u003Ch3 id=\"non-fiction\">Non-Fiction\u003C/h3>\n\u003Cp>Last year’s wrap up post was assembled in a hurry, and while I certainly had chosen a few vectors in my non-fiction selections, I had of course done it somewhat haphazardly. I largely discovered the things on my 2015 list myself by way of the internet. In 2016 I went about it a bit differently\u003Csup>2\u003C/sup> and I’m pleased with the results.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/Fire-Valley-Birth-Personal-Computer/dp/1937785769/\">\u003Cem>Fire in the Valley\u003C/em>: The Birth and Death of the Personal Computer\u003C/a> by Michael Swaine and Paul Freiberger ★★★★★\u003C/li>\n\u003C/ul>\n\u003Cp>If you work in tech, read this book. \u003Ca href=\"2016-reading-list.html#fire-in-the-valley-details\">See previously\u003C/a>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amazon.com/Incerto-Fooled-Randomness-Procrustes-Antifragile/dp/0399590455/\">\u003Cem>Incerto\u003C/em>\u003C/a> by Nassim Nicholas Taleb ★★★★★\n\u003Cul>\n\u003Cli>\u003Cem>Fooled By Randomness\u003C/em>\u003C/li>\n\u003Cli>\u003Cem>The Black Swan\u003C/em>\u003C/li>\n\u003Cli>\u003Cem>Antifragile\u003C/em>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>The last thing I expected to find this year was yet another author to do a deep-dive into, but Nassim Taleb is my man this year. I picked up Antifragile in February based off of Joe’s glowing recommendation. I had recalled seeing the covers of Fooled By Randomness and The Black Swan in bookstores in recent years, but I glibly assumed that they were of the Malcom Gladwell variety of disposable pop-science / psychology non ficton, full of bluster and anecdote but otherwise lacking in anything concrete. Similar to the genre of business books, but for people who think they’re smarter than people who read business books.\u003C/p>\n\u003Cp>Boy was I wrong.\u003C/p>\n\u003Cp>Full of bluster: yes. Taleb is absurdly bumptious, but in a way that I find endearing. Lacking in content: hardly. The only similarity to cheapie business books is some of the repetitiveness in the arguments being presented, but that’s at best a superficial criticism. I poured through \u003Cem>Antifragile\u003C/em>, the cumulative argument in the \u003Ca href=\"https://www.amazon.com/Incerto-Fooled-Randomness-Procrustes-Antifragile/dp/0399590455/\">\u003Cem>Incerto\u003C/em>\u003C/a> series, but the prologue assured me that I wouldn’t need to read the previous three volumes as a prerequisite to grokking the subject matter.\u003C/p>\n\u003Cp>After reading \u003Cem>Antifragile\u003C/em> I let its ideas stew in my brain for a few months, as I dug through other non-fiction in nearby fields and concepts, particularly by Niall Ferguson. But \u003Cem>Antifragile\u003C/em> kept on bugging me. I wanted to re-read it.\u003C/p>\n\u003Cp>The fundamental asymmetries that exist between what we think we know and everything else in the universe, and we’re hardwired to misinterpret events. As a species we excel at \u003Cem>predicting the past\u003C/em> and are generally terrible at keeping score when we make predictions about the future — and our past losses can always be  summarized in convenient and intelligent-sounding justifications.\u003C/p>\n\u003Cp>Around that same time I started following Nassim Taleb on twitter (worth it) and that he had recently published \u003Ca href=\"https://www.amazon.com/Incerto-Fooled-Randomness-Procrustes-Antifragile/dp/0399590455/\">\u003Cem>Incerto\u003C/em>\u003C/a> as a handsome box of paperbacks. Sold. Also gave as a gift to a few smartypants people I know.\u003C/p>\n\u003Cp>Presented as a series of essays, anecdotes, and diatribes, with copious footnotes and even a technical essay or two, \u003Cem>Fooled By Randomness\u003C/em>, \u003Cem>The Black Swan\u003C/em>, and \u003Cem>Antifragile\u003C/em> just about made my anti-academic year, and are now prized possessions on my bookshelf. I look forward to finishing \u003Cem>Bed of Procrustes\u003C/em> this year and to re-reading the series again in the future. I’ve never encountered so many powerful and challenging ideas all in one place. It’s a piece of non-fiction that begs to be read for pleasure over and over again, just like a good sci-fi or fantasy series would. Amazing.\u003C/p>\n\u003Ch3 id=\"up--down\">Up / Down\u003C/h3>\n\u003Cp>Cold, meaningless ratings.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Science Fiction / Fantasy\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cem>The Three Body Problem\u003C/em> by Cixin Liu ★★★★☆\u003C/li>\n\u003Cli>\u003Cem>The Killing Moon\u003C/em> by N.K. Jemisin ★★★★☆\u003C/li>\n\u003Cli>\u003Cem>Influx\u003C/em> by Daniel Suarez ★★★☆☆\u003C/li>\n\u003Cli>\u003Cem>Daemon\u003C/em> by Daniel Suarez ★★★☆☆\u003C/li>\n\u003Cli>\u003Cem>Dirk Gently’s Holistic Detective Agency\u003C/em> by Douglas Adams ★★☆☆☆\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Historical Fiction\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cem>Burr\u003C/em> by Gore Vidal ★★★☆☆\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>“Fiction” section fiction\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cem>Inherent Vice\u003C/em> by Thomas Pynchon ★★★★★\u003C/li>\n\u003Cli>\u003Cem>The Illuminatus! Trilogy\u003C/em> by Robert Shea and Robert Anton Wilson ★★★★☆\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Finance / Economics / History\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cem>The (Mis)Behavior of Markets\u003C/em> by Beniot Mandlebrot ★★★★★\u003C/li>\n\u003Cli>\u003Cem>Against the Gods: the Remarkable Story of Risk\u003C/em> by Peter L. Bernstein ★★★★★\u003C/li>\n\u003Cli>\u003Cem>Superforecasting\u003C/em> by Philip E. Tetlock and Dan Gardner ★★★★★\u003C/li>\n\u003Cli>\u003Cem>The Ascent of Money\u003C/em> by Niall Feguson ★★★★☆\u003C/li>\n\u003Cli>\u003Cem>Civilization\u003C/em> by Niall Ferguson ★★★☆☆\u003C/li>\n\u003Cli>\u003Cem>Sapiens\u003C/em> by Yuval Harari ★★★☆☆\u003C/li>\n\u003Cli>\u003Cem>The Sovereign Individual\u003C/em> by James Dale Davidson and Lord William Rees-Mogg ★☆☆☆☆\u003C/li>\n\u003Cli>\u003Cem>Digital Gold\u003C/em> by Nathaniel Popper ★★★☆☆\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>Memoir / Biography\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>Barbarian Days\u003C/em> by William Finnegan ★★★★★\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>Kissinger: 1923 - 1969 The Idealist\u003C/em> by Niall Ferguson ★★★★☆\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>Learning to Live Finally: the Last Interview\u003C/em> by Jacque Derrida ★★★☆☆\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>Brian Eno: Visual Music\u003C/em> by Christopher Scoates ★★★★☆\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>7 Days in Ohio\u003C/em> by Nathan Rabin ★★★★☆\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Col>\n\u003Cli>File ownership and content exportability are typically the first rights you wave to operate in someone else’s walled garden. It’s not hard to imagine a future wherein a change to a Terms of Service agreement suddenly applies restrictive licensing to content you’ve created and uploaded. The right to access the bits that make up one’s work is essential. Also note that filesystem access in mobile is a far cry from what it is in the realm of desktop computing, another dark shadow on the horizon for those interested in keeping platforms open and free.\u003C/li>\n\u003Cli>(but above the footnotes)\u003C/li>\n\u003Cli>Rather than having to do all the hard work of choosing what to read, I let my notable internet person Joe McCann do most of the heavy lifting. I borrowed heavily from his \u003Ca href=\"https://medium.com/@joemccann/don-t-read-these-books-in-2016-ee07f1ad8d3e\">2015 list\u003C/a> and presumably nabbed a few titles off his 2016 shelf as well. Thanks for saving me the effort of finding interesting non-ficton, Joe.\u003C/li>\n\u003C/ol>",{"headings":254,"imagePaths":272,"frontmatter":273},[255,257,260,263,266,269],{"depth":27,"slug":256,"text":246},"why-i-read-what-i-read-in-2016",{"depth":79,"slug":258,"text":259},"how-to-read-this-list","How to read this list:",{"depth":79,"slug":261,"text":262},"so-you-like-books-huh","So you like books, huh?",{"depth":79,"slug":264,"text":265},"fiction","Fiction",{"depth":79,"slug":267,"text":268},"non-fiction","Non-Fiction",{"depth":79,"slug":270,"text":271},"up--down","Up / Down",[],{"title":246,"slug":243,"pubDate":247},"2022/links-december-2022",{"id":274,"data":276,"body":282,"filePath":283,"assetImports":284,"digest":286,"rendered":287},{"title":277,"description":278,"pubDate":279,"heroAlt":280,"cover":281},"Links, December 2022","More links to tabs I've kept open for 4 months","Dec 31 2022","these four yet crouched at the edge of the firelight among their strange chattels and watched how the ragged flames fled down the wind as if sucked by some maelstrom out there in the void - Stable Diffusion v1.5","__ASTRO_IMAGE_../../../assets/f7d62a45-a2c6-48fb-be8a-1735bf3f2d5f.png","Yikes! When I last posted a batch of links, I said I would get to this every month. That didn't happen. September rolled into October, Fall became winter and here we are, at the end of the year with a big crop of tabs to round up.\n\n### Technology\n\n* [Blogs about Hardware (ooh.directory)](https://ooh.directory/blogs/technology/hardware/)\n\t* I had been secretly wanting for something just like this to come back in fashion, essentially the Yahoo! directory concept from 1995 but curated, up to date, and with modern features.\n* [Why writing by hand is still the best way to retain information](https://stackoverflow.blog/2022/11/23/why-writing-by-hand-is-still-the-best-way-to-retain-information/)\n\t* I prefer to take meeting notes by hand, since typing is difficult to be discrete about and I'm not enough of an inborn stenographer to take verbatim notes and stay engaged in a conversation. My notes during meetings tend to me for me to organize my thoughts around what I'm hearing, capturing themes and motives and plot points but rarely dialog or executive summaries in real time. These notes often aren't even helpful when I look back at them! Yet I have a dozen notebooks full of them covering as many years of meetings, and rarely if ever have I returned to the content of a specific note after more than a few weeks. \n* [A Faster Horse](https://redmonk.com/sogrady/2022/12/09/faster-horse/)\n\t* Some AWS history and ruminations on it's future, in the context of its own ever-increasing complexity and the emergence of higher level platforms like Vercel, Fly, et al. In broad strokes, AWS in 2022 is similar to Microsoft in 2005 when AWS first launched. Do they innovate by building for customers or developers?\n*  [Work Is Work | codahale.com](https://codahale.com/work-is-work/)\n\t* An exceptionally clever take on what grinds the gears in large organizations and some advice on how to combat them. None of this is bad advice.\n* [The Web’s Next Transition | Epic Web Dev by Kent C. Dodds](https://www.epicweb.dev/the-webs-next-transition)\n\t* It's taken me 15+ years to have strong intuition and first hand experience with different application patterns discussed here, and Kent gets it all right. I've been using Remix for some time now and their implementation of these patterns make for a powerful and flexible way to build things quickly. Say what you will about React, but it's undeniable that there's something good going on in this part of the web development community if these types of frameworks are the end result.\n* [A year of new avenues](https://www.robinsloan.com/lab/new-avenues/)\n\t* Before the events prompting this post, I had written a bit about why I was dissatisfied with Twitter and social media in general in 2022. The specific circumstances don't warrant any more than, \"I don't post there anymore\" but Robin Sloan's post nails the obituary for the last generation of platforms with a tone of optimism that can still be found in the right places online.\n* [Some Tricks To Making Mastodon Way More Useful](https://www.techdirt.com/2022/12/29/some-tricks-to-making-mastodon-way-more-useful/)\n\t* Continuing on the thread of life online after Twitter, the new website has some interesting quirks and features and ways to use it. Protocols are more resilient than platforms. \n\n### Code / Software\n\n* *[FFmpeg - Ultimate Guide | IMG.LY Blog](https://img.ly/blog/ultimate-guide-to-ffmpeg/)\n\t* (In no particular order here,) ffmpeg is a swiss army knife of video and audio processing that I got to know well for a project for Freeskier Magazine in 2009 and have been using when the need arises ever since. It's a daunting tool so having a crisp how-to around is a good thing.\n* [CRDT: Fractional Indexing - Made by Evan](https://madebyevan.com/algos/crdt-fractional-indexing/)\n\t* Conflict-Resistant Data Types continue to be cool!\n* [Making the Web Developer’s Pilgrimage · Jens Oliver Meiert](https://meiert.com/en/blog/web-developer-pilgrimage/)\n\t* What a great idea that I'll never have time to do! This is a level of pedantry that I can really appreciate. I learned so much from reading the JavaScript spec when I was getting deeper knowledge of the language but I hadn't ever considered exploring the HTML spec in the same way. \n* [The HTTP crash course nobody asked for](https://fasterthanli.me/articles/the-http-crash-course-nobody-asked-for)\n\t* Continuing on the theme from the link above.\n* [The state of HTTP in 2022](https://blog.cloudflare.com/the-state-of-http-in-2022/)\n\t* A late addition to the list. HTTP/3 had been on my radar but I hadn't done much reading about it before this. I knew part of the story with HTTP/2 push being hollow from following Jake Archibald but didn't know that it was enough of a wash for Chrome to remove it altogether in favor of 103 response hints and it absent from all HTTP/3 implementations (but still present in the spec.)\n* [The Modern Algorithmic Toolbox (CS168), Spring 2022](https://web.stanford.edu/class/cs168/index.html)\n\t* I love collecting bookmarks like this. I'll likely never go through these course materials but it's always fun to dunk my head into the icy fresh waters of academia sometimes and pretend I was a college student who wanted to learn about computers.\n* [Algorithms you should know before you take system design interviews](https://blog.bytebytego.com/p/algorithms-you-should-know-before?triedSigningIn=true)\n\t* I don't believe in quiz style interviews but these types of lists are useful because they usually corelate to real world use cases.\n* [Creating a Zoom UI - Steve Ruiz](https://www.steveruiz.me/posts/zoom-ui)\n\t* Having learned this the hard way, this was worth bookmarking.\n* [AWS Well-Architected - Build secure, efficient cloud applications](https://aws.amazon.com/architecture/well-architected/?wa-lens-whitepapers.sort-by=item.additionalFields.sortDate&wa-lens-whitepapers.sort-order=desc&awsm.page-wa-lens-whitepapers=1&wa-guidance-whitepapers.sort-by=item.additionalFields.sortDate&wa-guidance-whitepapers.sort-order=desc)\n\t* The Redmonk article linked above is not wrong about the labyrinthian complexity that one can get mired in when doing just about anything in AWS. So much so that a compendium of best practices and example architectures spanning the myriad choices within AWS is more than necessary.\n* [Rob Pike's simple C regex matcher in Go](https://benhoyt.com/writings/rob-pike-regex/)\n\t* Coding is tough and people are really clever about it!\n* [Web technology optimism hour](https://macwright.com/2022/11/18/optimism-updates.html)\n\t* The note from above on Kent C. Dodd's article listed above, The Web's Next Transition, hits on this same theme: it's a great time to be a web developer! Things can be better but I'd rather be building things today than 10 or 20 years ago. The tools are better, the browsers are better, \n* [The Distributed Computing Manifesto](https://www.allthingsdistributed.com/2022/11/amazon-1998-distributed-computing-manifesto.html)\n\t* AWS-heavy linkage this go around, but man oh man is this a good one. I had the pleasure of meeting Wernver Vogels when I was on business in Amsterdam some years ago, and spent an afternoon watching the Seahawks in the playoffs in a bar with him and a large group of people. I don't remember talking to him beyond introducing myself and that he was in a Marshawn Lynch jersey. A few years later I would be sitting at my desk on the 7th floor of the Credit Karma office and I would see Marshawn Lynch pop his head out of the door to the stairwells, look in either direction with big eyes before scampering (light feet on a big dude!) down the hall. He was looking for his sister, who worked there, but I didn't have that fact in that moment. Anyway, this post should be essential reading for any software engineer.\n* [Modules, monoliths, and microservices](https://tailscale.com/blog/modules-monoliths-and-microservices/)\n\t* More good information on systems design. Remined me of [Boundaries](https://www.destroyallsoftware.com/talks/boundaries)  because most anything that touches on modularity will remind me of _Boundaries_. \n* [ReDoS \"vulnerabilities\" and misaligned incentives](https://blog.yossarian.net/2022/12/28/ReDoS-vulnerabilities-and-misaligned-incentives)\n\t* Can't agree with this more. I posted about it here: https://mastodon.social/@sambreed/109598537983995990\n* [Cache your CORS, for performance & profit](https://httptoolkit.com/blog/cache-your-cors/)\n* [How I’m a Productive Programmer With a Memory of a Fruit Fly](https://hynek.me/articles/productive-fruit-fly-programmer/)\n\t* I'm a sucker for descriptions of other people's workflows. In practice people use computers in wildly different ways to accomplish the same task. This is both frustrating and amazing.\n* [Playing with ActivityPub](https://macwright.com/2022/12/09/activitypub.html)\n\t* The reason why the events surrounding social media platforms at the end of this year seem different than the last schism is that there are now alternative platforms that have a few years of hardening under their belt. Underlying these new platforms are a set of protocols and conventions for distributing content across independent host applications, rather than a single central authority. ActivityPub and its ilk are noteworthy and ought to be explored. The prospect that any website can become follow-able across a large network feels like a concept from an earlier era being brought back to life.\n\n### Design\n\n* [Adventure game graphics with DALL-E 2](https://hpjansson.org/blag/2022/08/16/adventure-game-graphics-with-dall-e-2/)\n* [Clustering high-dimensional data: 3D point clouds | Towards Data Science](https://towardsdatascience.com/fundamentals-to-clustering-high-dimensional-data-3d-point-clouds-3196ee56f5da)\n\n### AI\n\n* [The AI Unbundling – Stratechery by Ben Thompson](https://stratechery.com/2022/the-ai-unbundling/)\n* [Nvidia In the Valley – Stratechery by Ben Thompson](https://stratechery.com/2022/nvidia-in-the-valley/)\n* [sw-yx/ai-notes: notes for my AI studies, writing, and product brainstorming](https://github.com/sw-yx/ai-notes/)\n* [Stable Diffusion Based Image Compression | by Matthias Bühlmann | Towards AI](https://pub.towardsai.net/stable-diffusion-based-image-compresssion-6f1f0a399202)\n* [The Illustrated Stable Diffusion – Jay Alammar – Visualizing machine learning one concept at a time.](https://jalammar.github.io/illustrated-stable-diffusion/)\n\n### etc.\n* [We don’t have a hundred biases, we have the wrong model - Works in Progress](https://www.worksinprogress.co/issue/biases-the-wrong-model/?utm_campaign=%22Securities%22%20by%20Lux%20Capital&utm_medium=email&utm_source=Revue%20newsletter)\n* [Maintenance Is Sorely Needed In The Fight Against Global Warming](https://www.noemamag.com/the-disappearing-art-of-maintenance/?utm_campaign=%22Securities%22%20by%20Lux%20Capital&utm_medium=email&utm_source=Revue%20newsletter)\n* [100 Rules To Live By - Dru Riley](https://druriley.com/100-rules-2020/)","src/content/writing/2022/links-december-2022.md",[285],"../../../assets/f7d62a45-a2c6-48fb-be8a-1735bf3f2d5f.png","196cfe8b51c7ccfb",{"html":288,"metadata":289},"\u003Cp>Yikes! When I last posted a batch of links, I said I would get to this every month. That didn’t happen. September rolled into October, Fall became winter and here we are, at the end of the year with a big crop of tabs to round up.\u003C/p>\n\u003Ch3 id=\"technology\">Technology\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://ooh.directory/blogs/technology/hardware/\">Blogs about Hardware (ooh.directory)\u003C/a>\n\u003Cul>\n\u003Cli>I had been secretly wanting for something just like this to come back in fashion, essentially the Yahoo! directory concept from 1995 but curated, up to date, and with modern features.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://stackoverflow.blog/2022/11/23/why-writing-by-hand-is-still-the-best-way-to-retain-information/\">Why writing by hand is still the best way to retain information\u003C/a>\n\u003Cul>\n\u003Cli>I prefer to take meeting notes by hand, since typing is difficult to be discrete about and I’m not enough of an inborn stenographer to take verbatim notes and stay engaged in a conversation. My notes during meetings tend to me for me to organize my thoughts around what I’m hearing, capturing themes and motives and plot points but rarely dialog or executive summaries in real time. These notes often aren’t even helpful when I look back at them! Yet I have a dozen notebooks full of them covering as many years of meetings, and rarely if ever have I returned to the content of a specific note after more than a few weeks.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://redmonk.com/sogrady/2022/12/09/faster-horse/\">A Faster Horse\u003C/a>\n\u003Cul>\n\u003Cli>Some AWS history and ruminations on it’s future, in the context of its own ever-increasing complexity and the emergence of higher level platforms like Vercel, Fly, et al. In broad strokes, AWS in 2022 is similar to Microsoft in 2005 when AWS first launched. Do they innovate by building for customers or developers?\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://codahale.com/work-is-work/\">Work Is Work | codahale.com\u003C/a>\n\u003Cul>\n\u003Cli>An exceptionally clever take on what grinds the gears in large organizations and some advice on how to combat them. None of this is bad advice.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.epicweb.dev/the-webs-next-transition\">The Web’s Next Transition | Epic Web Dev by Kent C. Dodds\u003C/a>\n\u003Cul>\n\u003Cli>It’s taken me 15+ years to have strong intuition and first hand experience with different application patterns discussed here, and Kent gets it all right. I’ve been using Remix for some time now and their implementation of these patterns make for a powerful and flexible way to build things quickly. Say what you will about React, but it’s undeniable that there’s something good going on in this part of the web development community if these types of frameworks are the end result.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.robinsloan.com/lab/new-avenues/\">A year of new avenues\u003C/a>\n\u003Cul>\n\u003Cli>Before the events prompting this post, I had written a bit about why I was dissatisfied with Twitter and social media in general in 2022. The specific circumstances don’t warrant any more than, “I don’t post there anymore” but Robin Sloan’s post nails the obituary for the last generation of platforms with a tone of optimism that can still be found in the right places online.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.techdirt.com/2022/12/29/some-tricks-to-making-mastodon-way-more-useful/\">Some Tricks To Making Mastodon Way More Useful\u003C/a>\n\u003Cul>\n\u003Cli>Continuing on the thread of life online after Twitter, the new website has some interesting quirks and features and ways to use it. Protocols are more resilient than platforms.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"code--software\">Code / Software\u003C/h3>\n\u003Cul>\n\u003Cli>*\u003Ca href=\"https://img.ly/blog/ultimate-guide-to-ffmpeg/\">FFmpeg - Ultimate Guide | IMG.LY Blog\u003C/a>\n\u003Cul>\n\u003Cli>(In no particular order here,) ffmpeg is a swiss army knife of video and audio processing that I got to know well for a project for Freeskier Magazine in 2009 and have been using when the need arises ever since. It’s a daunting tool so having a crisp how-to around is a good thing.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://madebyevan.com/algos/crdt-fractional-indexing/\">CRDT: Fractional Indexing - Made by Evan\u003C/a>\n\u003Cul>\n\u003Cli>Conflict-Resistant Data Types continue to be cool!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://meiert.com/en/blog/web-developer-pilgrimage/\">Making the Web Developer’s Pilgrimage · Jens Oliver Meiert\u003C/a>\n\u003Cul>\n\u003Cli>What a great idea that I’ll never have time to do! This is a level of pedantry that I can really appreciate. I learned so much from reading the JavaScript spec when I was getting deeper knowledge of the language but I hadn’t ever considered exploring the HTML spec in the same way.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://fasterthanli.me/articles/the-http-crash-course-nobody-asked-for\">The HTTP crash course nobody asked for\u003C/a>\n\u003Cul>\n\u003Cli>Continuing on the theme from the link above.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.cloudflare.com/the-state-of-http-in-2022/\">The state of HTTP in 2022\u003C/a>\n\u003Cul>\n\u003Cli>A late addition to the list. HTTP/3 had been on my radar but I hadn’t done much reading about it before this. I knew part of the story with HTTP/2 push being hollow from following Jake Archibald but didn’t know that it was enough of a wash for Chrome to remove it altogether in favor of 103 response hints and it absent from all HTTP/3 implementations (but still present in the spec.)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://web.stanford.edu/class/cs168/index.html\">The Modern Algorithmic Toolbox (CS168), Spring 2022\u003C/a>\n\u003Cul>\n\u003Cli>I love collecting bookmarks like this. I’ll likely never go through these course materials but it’s always fun to dunk my head into the icy fresh waters of academia sometimes and pretend I was a college student who wanted to learn about computers.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.bytebytego.com/p/algorithms-you-should-know-before?triedSigningIn=true\">Algorithms you should know before you take system design interviews\u003C/a>\n\u003Cul>\n\u003Cli>I don’t believe in quiz style interviews but these types of lists are useful because they usually corelate to real world use cases.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.steveruiz.me/posts/zoom-ui\">Creating a Zoom UI - Steve Ruiz\u003C/a>\n\u003Cul>\n\u003Cli>Having learned this the hard way, this was worth bookmarking.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://aws.amazon.com/architecture/well-architected/?wa-lens-whitepapers.sort-by=item.additionalFields.sortDate&#x26;wa-lens-whitepapers.sort-order=desc&#x26;awsm.page-wa-lens-whitepapers=1&#x26;wa-guidance-whitepapers.sort-by=item.additionalFields.sortDate&#x26;wa-guidance-whitepapers.sort-order=desc\">AWS Well-Architected - Build secure, efficient cloud applications\u003C/a>\n\u003Cul>\n\u003Cli>The Redmonk article linked above is not wrong about the labyrinthian complexity that one can get mired in when doing just about anything in AWS. So much so that a compendium of best practices and example architectures spanning the myriad choices within AWS is more than necessary.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://benhoyt.com/writings/rob-pike-regex/\">Rob Pike’s simple C regex matcher in Go\u003C/a>\n\u003Cul>\n\u003Cli>Coding is tough and people are really clever about it!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://macwright.com/2022/11/18/optimism-updates.html\">Web technology optimism hour\u003C/a>\n\u003Cul>\n\u003Cli>The note from above on Kent C. Dodd’s article listed above, The Web’s Next Transition, hits on this same theme: it’s a great time to be a web developer! Things can be better but I’d rather be building things today than 10 or 20 years ago. The tools are better, the browsers are better,\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.allthingsdistributed.com/2022/11/amazon-1998-distributed-computing-manifesto.html\">The Distributed Computing Manifesto\u003C/a>\n\u003Cul>\n\u003Cli>AWS-heavy linkage this go around, but man oh man is this a good one. I had the pleasure of meeting Wernver Vogels when I was on business in Amsterdam some years ago, and spent an afternoon watching the Seahawks in the playoffs in a bar with him and a large group of people. I don’t remember talking to him beyond introducing myself and that he was in a Marshawn Lynch jersey. A few years later I would be sitting at my desk on the 7th floor of the Credit Karma office and I would see Marshawn Lynch pop his head out of the door to the stairwells, look in either direction with big eyes before scampering (light feet on a big dude!) down the hall. He was looking for his sister, who worked there, but I didn’t have that fact in that moment. Anyway, this post should be essential reading for any software engineer.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://tailscale.com/blog/modules-monoliths-and-microservices/\">Modules, monoliths, and microservices\u003C/a>\n\u003Cul>\n\u003Cli>More good information on systems design. Remined me of \u003Ca href=\"https://www.destroyallsoftware.com/talks/boundaries\">Boundaries\u003C/a>  because most anything that touches on modularity will remind me of \u003Cem>Boundaries\u003C/em>.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.yossarian.net/2022/12/28/ReDoS-vulnerabilities-and-misaligned-incentives\">ReDoS “vulnerabilities” and misaligned incentives\u003C/a>\n\u003Cul>\n\u003Cli>Can’t agree with this more. I posted about it here: \u003Ca href=\"https://mastodon.social/@sambreed/109598537983995990\">https://mastodon.social/@sambreed/109598537983995990\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://httptoolkit.com/blog/cache-your-cors/\">Cache your CORS, for performance &#x26; profit\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://hynek.me/articles/productive-fruit-fly-programmer/\">How I’m a Productive Programmer With a Memory of a Fruit Fly\u003C/a>\n\u003Cul>\n\u003Cli>I’m a sucker for descriptions of other people’s workflows. In practice people use computers in wildly different ways to accomplish the same task. This is both frustrating and amazing.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://macwright.com/2022/12/09/activitypub.html\">Playing with ActivityPub\u003C/a>\n\u003Cul>\n\u003Cli>The reason why the events surrounding social media platforms at the end of this year seem different than the last schism is that there are now alternative platforms that have a few years of hardening under their belt. Underlying these new platforms are a set of protocols and conventions for distributing content across independent host applications, rather than a single central authority. ActivityPub and its ilk are noteworthy and ought to be explored. The prospect that any website can become follow-able across a large network feels like a concept from an earlier era being brought back to life.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"design\">Design\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://hpjansson.org/blag/2022/08/16/adventure-game-graphics-with-dall-e-2/\">Adventure game graphics with DALL-E 2\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://towardsdatascience.com/fundamentals-to-clustering-high-dimensional-data-3d-point-clouds-3196ee56f5da\">Clustering high-dimensional data: 3D point clouds | Towards Data Science\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"ai\">AI\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://stratechery.com/2022/the-ai-unbundling/\">The AI Unbundling – Stratechery by Ben Thompson\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://stratechery.com/2022/nvidia-in-the-valley/\">Nvidia In the Valley – Stratechery by Ben Thompson\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/sw-yx/ai-notes/\">sw-yx/ai-notes: notes for my AI studies, writing, and product brainstorming\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://pub.towardsai.net/stable-diffusion-based-image-compresssion-6f1f0a399202\">Stable Diffusion Based Image Compression | by Matthias Bühlmann | Towards AI\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://jalammar.github.io/illustrated-stable-diffusion/\">The Illustrated Stable Diffusion – Jay Alammar – Visualizing machine learning one concept at a time.\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"etc\">etc.\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.worksinprogress.co/issue/biases-the-wrong-model/?utm_campaign=%22Securities%22%20by%20Lux%20Capital&#x26;utm_medium=email&#x26;utm_source=Revue%20newsletter\">We don’t have a hundred biases, we have the wrong model - Works in Progress\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.noemamag.com/the-disappearing-art-of-maintenance/?utm_campaign=%22Securities%22%20by%20Lux%20Capital&#x26;utm_medium=email&#x26;utm_source=Revue%20newsletter\">Maintenance Is Sorely Needed In The Fight Against Global Warming\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://druriley.com/100-rules-2020/\">100 Rules To Live By - Dru Riley\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":290,"imagePaths":306,"frontmatter":307},[291,294,297,300,303],{"depth":79,"slug":292,"text":293},"technology","Technology",{"depth":79,"slug":295,"text":296},"code--software","Code / Software",{"depth":79,"slug":298,"text":299},"design","Design",{"depth":79,"slug":301,"text":302},"ai","AI",{"depth":79,"slug":304,"text":305},"etc","etc.",[],{"title":277,"slug":274,"description":278,"cover":285,"heroAlt":280,"pubDate":279},"2024/links-august",{"id":308,"data":310,"body":316,"filePath":317,"assetImports":318,"digest":320,"rendered":321},{"title":311,"description":312,"pubDate":313,"heroAlt":314,"cover":315},"Links, August 2024","what's happening in the world of links","Aug 31 2024","prompt: 'a skateboarding dog' model: flux.dev","__ASTRO_IMAGE_../../../assets/skate-dog-aug-2024.png","- [Anchor Links and How to Make Them Awesome / Coder's Block](https://codersblock.com/blog/anchor-links-and-how-to-make-them-awesome/#adding-scroll-margin)\n\t- scroll-margin-top will pad elements that are automatically scrolled to\n- [Cuisine Selector with :has()](https://codepen.io/jh3y/pen/wvLvYWo?editors=1100)\n- [LLMs and Programming in the first days of 2024 - \\\u003Cantirez\\>](http://antirez.com/news/140)\n- [Toward inquiry | A Working Library](https://aworkinglibrary.com/writing/toward-inquiry)\n- [incolumitas.com – So you want to Scrape like the Big Boys? 🚀](https://incolumitas.com/2021/11/03/so-you-want-to-scrape-like-the-big-boys/)\n- [“Art is Dead”: A Rumination on the Future of Creativity in an AI-Curious World](https://baukunst.co/stories/obsession/art-is-dead-a-rumination-on-the-future-of-creativity-in-an-ai-curious-world)\n- [The Intellectual Obesity Crisis - by Gurwinder - The Prism](https://www.gurwinder.blog/p/the-intellectual-obesity-crisis)\n- [It’s Never Been Easier to Land in Director’s Jail](https://www.hollywoodreporter.com/movies/movie-news/directors-jail-1235879871/)\n- [vldb.org/pvldb/vol2/vldb09-583.pdf](https://vldb.org/pvldb/vol2/vldb09-583.pdf)\n- [The Soul of Maintaining a New Machine - First Draft | Books in Progress](https://books.worksinprogress.co/book/maintenance-of-everything/communities-of-practice/the-soul-of-maintaining-a-new-machine/1)\n- [Street Fighter II, paper trails](https://fabiensanglard.net/sf2_sheets/)\n- [Matter.js Demo](https://brm.io/matter-js/demo/#catapult)\n- [Techmeme June 12, 2006](https://web.archive.org/web/20060612050032/http://www.techmeme.com/)\n\t- techmeme is really timeless.\n- [WebGPU Unleashed: A Practical Tutorial](https://shi-yan.github.io/webgpuunleashed/)\n- [GitHub - hacksider/Deep-Live-Cam: real time face swap and one-click video deepfake with only a single image (uncensored)](https://github.com/hacksider/Deep-Live-Cam)\n- [Pikuma: Isometric Projection in Game Development](https://pikuma.com/blog/isometric-projection-in-games)\n- [Sort, sweep, and prune: Collision detection algorithms · leanrada.com](https://leanrada.com/notes/sweep-and-prune/)\n- [Okay, I really like WezTerm | Alex Plescan](https://alexplescan.com/posts/2024/08/10/wezterm/)\n\t- WezTerm is nice! I have been using iTerm2 since at least 2011 or 2012. I remember first seeing Paul Irish using it during a conference presentation. I’ve used it ever since without complaint. Recently, they’ve added to add AI integrations which I’m not interested in.\n- https://extension765.com/blogs/soderblog/raiders\n- https://leonardkoscianski.com/page/3/\n- https://blog.bitdrift.io/post/optimizing-web-ui-large-datasets?trk=feed_main-feed-card_feed-article-content\n- https://explained.ai/matrix-calculus/\n- https://vgel.me/posts/faster-inference/\n- https://github.com/charlax/professional-programming\n- [Calculating Empires](https://calculatingempires.net/?pos=16986.91,8725.00,13.0676)","src/content/writing/2024/links-august.md",[319],"../../../assets/skate-dog-aug-2024.png","02ebb49196c30f2c",{"html":322,"metadata":323},"\u003Cul>\n\u003Cli>\u003Ca href=\"https://codersblock.com/blog/anchor-links-and-how-to-make-them-awesome/#adding-scroll-margin\">Anchor Links and How to Make Them Awesome / Coder’s Block\u003C/a>\n\u003Cul>\n\u003Cli>scroll-margin-top will pad elements that are automatically scrolled to\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://codepen.io/jh3y/pen/wvLvYWo?editors=1100\">Cuisine Selector with :has()\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://antirez.com/news/140\">LLMs and Programming in the first days of 2024 - &#x3C;antirez>\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://aworkinglibrary.com/writing/toward-inquiry\">Toward inquiry | A Working Library\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://incolumitas.com/2021/11/03/so-you-want-to-scrape-like-the-big-boys/\">incolumitas.com – So you want to Scrape like the Big Boys? 🚀\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://baukunst.co/stories/obsession/art-is-dead-a-rumination-on-the-future-of-creativity-in-an-ai-curious-world\">“Art is Dead”: A Rumination on the Future of Creativity in an AI-Curious World\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.gurwinder.blog/p/the-intellectual-obesity-crisis\">The Intellectual Obesity Crisis - by Gurwinder - The Prism\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.hollywoodreporter.com/movies/movie-news/directors-jail-1235879871/\">It’s Never Been Easier to Land in Director’s Jail\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://vldb.org/pvldb/vol2/vldb09-583.pdf\">vldb.org/pvldb/vol2/vldb09-583.pdf\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://books.worksinprogress.co/book/maintenance-of-everything/communities-of-practice/the-soul-of-maintaining-a-new-machine/1\">The Soul of Maintaining a New Machine - First Draft | Books in Progress\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://fabiensanglard.net/sf2_sheets/\">Street Fighter II, paper trails\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://brm.io/matter-js/demo/#catapult\">Matter.js Demo\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://web.archive.org/web/20060612050032/http://www.techmeme.com/\">Techmeme June 12, 2006\u003C/a>\n\u003Cul>\n\u003Cli>techmeme is really timeless.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://shi-yan.github.io/webgpuunleashed/\">WebGPU Unleashed: A Practical Tutorial\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/hacksider/Deep-Live-Cam\">GitHub - hacksider/Deep-Live-Cam: real time face swap and one-click video deepfake with only a single image (uncensored)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://pikuma.com/blog/isometric-projection-in-games\">Pikuma: Isometric Projection in Game Development\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://leanrada.com/notes/sweep-and-prune/\">Sort, sweep, and prune: Collision detection algorithms · leanrada.com\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://alexplescan.com/posts/2024/08/10/wezterm/\">Okay, I really like WezTerm | Alex Plescan\u003C/a>\n\u003Cul>\n\u003Cli>WezTerm is nice! I have been using iTerm2 since at least 2011 or 2012. I remember first seeing Paul Irish using it during a conference presentation. I’ve used it ever since without complaint. Recently, they’ve added to add AI integrations which I’m not interested in.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://extension765.com/blogs/soderblog/raiders\">https://extension765.com/blogs/soderblog/raiders\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://leonardkoscianski.com/page/3/\">https://leonardkoscianski.com/page/3/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.bitdrift.io/post/optimizing-web-ui-large-datasets?trk=feed_main-feed-card_feed-article-content\">https://blog.bitdrift.io/post/optimizing-web-ui-large-datasets?trk=feed_main-feed-card_feed-article-content\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://explained.ai/matrix-calculus/\">https://explained.ai/matrix-calculus/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://vgel.me/posts/faster-inference/\">https://vgel.me/posts/faster-inference/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/charlax/professional-programming\">https://github.com/charlax/professional-programming\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://calculatingempires.net/?pos=16986.91,8725.00,13.0676\">Calculating Empires\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":324,"imagePaths":325,"frontmatter":326},[],[],{"title":311,"slug":308,"description":312,"cover":319,"heroAlt":314,"pubDate":313},"2024/great-link-drought",{"id":327,"data":329,"body":333,"filePath":334,"digest":335,"rendered":336},{"title":330,"description":331,"pubDate":332},"The great link drought of 2024","whoops I stopped linkdumping","Jul 23 2024","I had a good run with my linkdump blog posts. Here's why I stopped, followed by a brief list of links.\n\nI've never been able to blog consistently, despite keeping a daily writing habit going for many years now. Just look at the sad history of my posts: mostly clustered around holidays or, in true developer fashion, when I make updates to my website.\n\nThe main reason for petering out after [February 2024](/writing/2024/links-february): I switched to using the [Arc Browser](https://arc.net/) for my daily driver.\n\nArc isn't without controversy. I've heard complaints about their shift towards AI features like search indexing and summarization. For me, those features are not what makes Arc interesting: it's the design.\n\nOne UX feature that caught me off guard when I first started using it: it automatically discards unpinned tabs after 24 hours. While the timeout can be adjusted, this significantly disrupted in my blogging strategy of letting ~~dead~~ interesting tabs accumulate for a month before compiling them into a list to post here.\n\nAs source of tabs dried up, I stopped posting. As a consequence, the criteria for me saving a link became more rigorous: I needed to remember to capture it somehow, usually by moving it to a text document.\n\nIt's telling how badly broken browser bookmarking is that I never considered saving these as acutal bookmarks. The same goes for Pinboard. Ideally, these linkdumps to be built up automatically, perhaps through a heuritic analysis of my browser history.\n\n## March\n- [BrushNet: A Plug-and-Play Image Inpainting Model with Decomposed Dual-Branch Diffusion](https://tencentarc.github.io/BrushNet/)\n  - a paper I read when working with image models earlier in the year, specifically around masked inpainting with segment anything + grounding dino and some clever masking. It's better than nothing but you still have to re-roll a lot to get good results.\n- [Ontology for Media Creation - MovieLabs](https://movielabs.com/production-technology/ontology-for-media-creation/)\n  - just about everything you can possibly think of probably has a normative specification, should you ever need one\n- [CSS Paged Media Module Level 3](https://www.w3.org/TR/css-page-3/)\n\n## April\n- [GitHub - karpathy/llm.c: LLM training in simple, raw C/CUDA](https://github.com/karpathy/llm.c)\n  - one of my colleagues is doing a training run for gpt-2 using this code.\n- [JARVIS-1: Open-world Multi-task Agents with Memory-Augmented Multimodal Language Models](https://craftjarvis-jarvis1.github.io/)\n  - somewhat anticipating the SeeACT link below. someday working agentic programming patterns will shake out of academia into commerical use.\n- [The Forest](https://theforest.link/#info)\n  - clever metaphor but I wish it were more visual. also seems to be in need of curation.\n- [Introducing Idefics2: A Powerful 8B Vision-Language Model for the community](https://huggingface.co/blog/idefics2)\n  - Multimodal models unlock a lot of previously closed doors. Semantic understanding of images is a powerful primitive.\n- [Nature of Code](https://natureofcode.com/)\n  - I love a free code book and this one seems good.\n- [Apple's Future Computer: The Knowledge Navigator - YouTube](https://www.youtube.com/watch?v=9bjve67p33E)\n  - had never seen this but it's an uncanny vision that seems close-ish to reality today with the right tools.\n- [Fermat's Library | The Uncanny Valley annotated/explained version.](https://fermatslibrary.com/s/the-uncanny-valley#email-newsletter)\n- [Collatz conjecture - Wikipedia](https://en.wikipedia.org/wiki/Collatz_conjecture)\n- [The Bitter Lesson](http://www.incompleteideas.net/IncIdeas/BitterLesson.html)\n- [Introducing Augment: a company dedicated to empowering developers with AI](https://www.augmentcode.com/blog/introducing-augment)\n  - I've had the priviledge to work with the Augment team since day 1 and have been using their product constantly since the first alpha. Watch this space, Augment has a seriously talented team.\n\n## May\n- [Generate open graph social preview images with Remix](https://www.jacobparis.com/content/remix-og)\n  - Vercel has done the lion-share of the work here but I needed to do this in Remix and found this specific guide helpful. Dynamic preview card images go a long way to make a product feel more complete.\n- [FIELD.IO](https://field.io/)\n  - I still appreciate a good agency site.\n- [Figma’s journey to TypeScript | Figma Blog](https://www.figma.com/blog/figmas-journey-to-typescript-compiling-away-our-custom-programming-language/)\n  - People complain about TypeScript but I don't get it. TypeScript is great, and a more sensible long term bet for your company than a homemade dialect.\n- [Stanford CS25: V4 I Jason Wei & Hyung Won Chung of OpenAI - YouTube](https://www.youtube.com/watch?v=3gb-ZkVRemQ)\n  - Recommended by the ai researchers I work with as a good introduction to training techniques.\n- [Language agents: a critical evolutionary step of artificial intelligence](https://yusu.substack.com/p/language-agents)\n  - [SeeAct](https://osu-nlp-group.github.io/SeeAct/)\n  - I saw Yu Su present his work on language agents and appreciate his breakdown of the space. The hardest part of agentic programming is knowing when a task is done, especially when your history overflows the available context. My hunch is that you'll need split-brained or adversarial architectures to achieve even rudimentary autonomy.\n\n## June\n- [Ask a Manager: I was rejected because I told my interviewer I never make mistakes](https://www.askamanager.org/2024/06/update-i-was-rejected-because-i-told-my-interviewer-i-never-make-mistakes.html)\n  - A tautology of a question, very hard work to miss something this obvious.\n- [Fast Crimes at Lambda School](https://www.sandofsky.com/lambda-school/)\n  - I was an early advocate for code school (Galvanize and then later Turing Academy) and hired some great people that way, so it was shocking to learn about how badly things went for lambda school.\n- [common.wtf — commonly used unicodes](https://www.common.wtf/)\n- [Crispin](https://www.crispin.com/)\n  - fka Crispin Porter Bogusky. I did a lot of work for them at Quick Left in the early 2010s. I _still_ appreciate a good agency website.\n- [MUMU: Bootstrapping Multimodal Image Generation from Text-to-Image Data](https://arxiv.org/abs/2406.18790#)\n  - The authors, [@alexy_peys](https://x.com/alex_peys) and [@williamLberman](https://x.com/williamLberman), are on my team at shv and it was a pleasure to watch them work on this. They made very notable progress using simple architectures, clever data preparation, and limited GPU hours.\n\n## July\n- [The Magic of Clip Path](https://emilkowal.ski/ui/the-magic-of-clip-path)\n- [jbilcke-hf/clapper: Clapper.app, the video editor designed for the age of AI cinema](https://github.com/jbilcke-hf/clapper)\n- [The E.U. Goes Too Far – Stratechery by Ben Thompson](https://stratechery.com/2024/the-e-u-goes-too-far/)\n\t- [The American digital backwater](https://www.garbageday.email/p/american-digital-backwater)","src/content/writing/2024/great-link-drought.md","0ed3b4a252b21960",{"html":337,"metadata":338},"\u003Cp>I had a good run with my linkdump blog posts. Here’s why I stopped, followed by a brief list of links.\u003C/p>\n\u003Cp>I’ve never been able to blog consistently, despite keeping a daily writing habit going for many years now. Just look at the sad history of my posts: mostly clustered around holidays or, in true developer fashion, when I make updates to my website.\u003C/p>\n\u003Cp>The main reason for petering out after \u003Ca href=\"/writing/2024/links-february\">February 2024\u003C/a>: I switched to using the \u003Ca href=\"https://arc.net/\">Arc Browser\u003C/a> for my daily driver.\u003C/p>\n\u003Cp>Arc isn’t without controversy. I’ve heard complaints about their shift towards AI features like search indexing and summarization. For me, those features are not what makes Arc interesting: it’s the design.\u003C/p>\n\u003Cp>One UX feature that caught me off guard when I first started using it: it automatically discards unpinned tabs after 24 hours. While the timeout can be adjusted, this significantly disrupted in my blogging strategy of letting \u003Cdel>dead\u003C/del> interesting tabs accumulate for a month before compiling them into a list to post here.\u003C/p>\n\u003Cp>As source of tabs dried up, I stopped posting. As a consequence, the criteria for me saving a link became more rigorous: I needed to remember to capture it somehow, usually by moving it to a text document.\u003C/p>\n\u003Cp>It’s telling how badly broken browser bookmarking is that I never considered saving these as acutal bookmarks. The same goes for Pinboard. Ideally, these linkdumps to be built up automatically, perhaps through a heuritic analysis of my browser history.\u003C/p>\n\u003Ch2 id=\"march\">March\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tencentarc.github.io/BrushNet/\">BrushNet: A Plug-and-Play Image Inpainting Model with Decomposed Dual-Branch Diffusion\u003C/a>\n\u003Cul>\n\u003Cli>a paper I read when working with image models earlier in the year, specifically around masked inpainting with segment anything + grounding dino and some clever masking. It’s better than nothing but you still have to re-roll a lot to get good results.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://movielabs.com/production-technology/ontology-for-media-creation/\">Ontology for Media Creation - MovieLabs\u003C/a>\n\u003Cul>\n\u003Cli>just about everything you can possibly think of probably has a normative specification, should you ever need one\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.w3.org/TR/css-page-3/\">CSS Paged Media Module Level 3\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"april\">April\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/karpathy/llm.c\">GitHub - karpathy/llm.c: LLM training in simple, raw C/CUDA\u003C/a>\n\u003Cul>\n\u003Cli>one of my colleagues is doing a training run for gpt-2 using this code.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://craftjarvis-jarvis1.github.io/\">JARVIS-1: Open-world Multi-task Agents with Memory-Augmented Multimodal Language Models\u003C/a>\n\u003Cul>\n\u003Cli>somewhat anticipating the SeeACT link below. someday working agentic programming patterns will shake out of academia into commerical use.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://theforest.link/#info\">The Forest\u003C/a>\n\u003Cul>\n\u003Cli>clever metaphor but I wish it were more visual. also seems to be in need of curation.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/idefics2\">Introducing Idefics2: A Powerful 8B Vision-Language Model for the community\u003C/a>\n\u003Cul>\n\u003Cli>Multimodal models unlock a lot of previously closed doors. Semantic understanding of images is a powerful primitive.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://natureofcode.com/\">Nature of Code\u003C/a>\n\u003Cul>\n\u003Cli>I love a free code book and this one seems good.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.youtube.com/watch?v=9bjve67p33E\">Apple’s Future Computer: The Knowledge Navigator - YouTube\u003C/a>\n\u003Cul>\n\u003Cli>had never seen this but it’s an uncanny vision that seems close-ish to reality today with the right tools.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://fermatslibrary.com/s/the-uncanny-valley#email-newsletter\">Fermat’s Library | The Uncanny Valley annotated/explained version.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.wikipedia.org/wiki/Collatz_conjecture\">Collatz conjecture - Wikipedia\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.incompleteideas.net/IncIdeas/BitterLesson.html\">The Bitter Lesson\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.augmentcode.com/blog/introducing-augment\">Introducing Augment: a company dedicated to empowering developers with AI\u003C/a>\n\u003Cul>\n\u003Cli>I’ve had the priviledge to work with the Augment team since day 1 and have been using their product constantly since the first alpha. Watch this space, Augment has a seriously talented team.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"may\">May\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.jacobparis.com/content/remix-og\">Generate open graph social preview images with Remix\u003C/a>\n\u003Cul>\n\u003Cli>Vercel has done the lion-share of the work here but I needed to do this in Remix and found this specific guide helpful. Dynamic preview card images go a long way to make a product feel more complete.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://field.io/\">FIELD.IO\u003C/a>\n\u003Cul>\n\u003Cli>I still appreciate a good agency site.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.figma.com/blog/figmas-journey-to-typescript-compiling-away-our-custom-programming-language/\">Figma’s journey to TypeScript | Figma Blog\u003C/a>\n\u003Cul>\n\u003Cli>People complain about TypeScript but I don’t get it. TypeScript is great, and a more sensible long term bet for your company than a homemade dialect.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.youtube.com/watch?v=3gb-ZkVRemQ\">Stanford CS25: V4 I Jason Wei &#x26; Hyung Won Chung of OpenAI - YouTube\u003C/a>\n\u003Cul>\n\u003Cli>Recommended by the ai researchers I work with as a good introduction to training techniques.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://yusu.substack.com/p/language-agents\">Language agents: a critical evolutionary step of artificial intelligence\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://osu-nlp-group.github.io/SeeAct/\">SeeAct\u003C/a>\u003C/li>\n\u003Cli>I saw Yu Su present his work on language agents and appreciate his breakdown of the space. The hardest part of agentic programming is knowing when a task is done, especially when your history overflows the available context. My hunch is that you’ll need split-brained or adversarial architectures to achieve even rudimentary autonomy.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"june\">June\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.askamanager.org/2024/06/update-i-was-rejected-because-i-told-my-interviewer-i-never-make-mistakes.html\">Ask a Manager: I was rejected because I told my interviewer I never make mistakes\u003C/a>\n\u003Cul>\n\u003Cli>A tautology of a question, very hard work to miss something this obvious.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.sandofsky.com/lambda-school/\">Fast Crimes at Lambda School\u003C/a>\n\u003Cul>\n\u003Cli>I was an early advocate for code school (Galvanize and then later Turing Academy) and hired some great people that way, so it was shocking to learn about how badly things went for lambda school.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.common.wtf/\">common.wtf — commonly used unicodes\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.crispin.com/\">Crispin\u003C/a>\n\u003Cul>\n\u003Cli>fka Crispin Porter Bogusky. I did a lot of work for them at Quick Left in the early 2010s. I \u003Cem>still\u003C/em> appreciate a good agency website.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://arxiv.org/abs/2406.18790#\">MUMU: Bootstrapping Multimodal Image Generation from Text-to-Image Data\u003C/a>\n\u003Cul>\n\u003Cli>The authors, \u003Ca href=\"https://x.com/alex_peys\">@alexy_peys\u003C/a> and \u003Ca href=\"https://x.com/williamLberman\">@williamLberman\u003C/a>, are on my team at shv and it was a pleasure to watch them work on this. They made very notable progress using simple architectures, clever data preparation, and limited GPU hours.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"july\">July\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://emilkowal.ski/ui/the-magic-of-clip-path\">The Magic of Clip Path\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/jbilcke-hf/clapper\">jbilcke-hf/clapper: Clapper.app, the video editor designed for the age of AI cinema\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://stratechery.com/2024/the-e-u-goes-too-far/\">The E.U. Goes Too Far – Stratechery by Ben Thompson\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.garbageday.email/p/american-digital-backwater\">The American digital backwater\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":339,"imagePaths":355,"frontmatter":356},[340,343,346,349,352],{"depth":27,"slug":341,"text":342},"march","March",{"depth":27,"slug":344,"text":345},"april","April",{"depth":27,"slug":347,"text":348},"may","May",{"depth":27,"slug":350,"text":351},"june","June",{"depth":27,"slug":353,"text":354},"july","July",[],{"title":330,"slug":327,"description":331,"pubDate":332},"2022/links-part-one.html",{"id":357,"data":359,"body":363,"filePath":364,"digest":365,"rendered":366},{"title":360,"description":361,"pubDate":362},"Links Blog","Links! more links to things I've had open","Jul 13 2022","another link dump, some of these have been open for months and need to be closed or forgotten. It's healthy to pay down the tab debt at least once a quarter.\n\n- [10 Years of Meteor](https://meteor10.sachagreif.com/)\n    - meteor had some good parts but missed the mark on several. I didn't care for meteor at the time, but did go on to use Apollo GraphQL heavily at Credit Karma. It was ok, but perhaps overly complicated.\n    - [Sidebar](https://sidebar.io/)\n        - linked from the meteor piece, it's a daily link aggregator\n- [Body Margin 8px | Miriam Eric Suzanne](https://www.miriamsuzanne.com/2022/07/04/body-margin-8px/)\n    - a few too many words on the history of browser resets, specifically the 8px body margin\n- [auth-helpers/packages/nextjs at main · supabase-community/auth-helpers](https://github.com/supabase-community/auth-helpers/tree/main/packages/nextjs?utm_medium=email&_hsmi=218642387&utm_content=218642387&utm_source=hs_email#migrating-from-supabasesupabase-auth-helpers-to-supabaseauth-helpers)\n    - supabase might have finally fixed their auth? I need to update this in [redacted]\n- [The new wave of React state management](https://frontendmastery.com/posts/the-new-wave-of-react-state-management/)\n    - everything is new, again. this time it's state management, because flow was fucked and redux is too repetitive, so we need more of these.\n    - [pmndrs/zustand: 🐻 Bear necessities for state management in React](https://github.com/pmndrs/zustand) looks cool though\n- [virgil/Overview.md at master · titzer/virgil](https://github.com/titzer/virgil/blob/master/doc/tutorial/Overview.md)\n    - [redacted] has been designing a programming language, so I collected this to send to him\n- [Google AI Blog: Minerva: Solving Quantitative Reasoning Problems with Language Models](https://ai.googleblog.com/2022/06/minerva-solving-quantitative-reasoning.html)\n    - more AI research for the pile.\n- [Things You Should Know About Databases](https://architecturenotes.co/things-you-should-know-about-databases/)\n    - I can't produce this knowledge a priori, but this tread over territory I was already familiar with from reading Martin Kleppmann's Warthog book. (Everyone should read the Warthog book.)\n- [multiprocessio/datastation: App to easily query, script, and visualize data from every database, file, and API.](https://github.com/multiprocessio/datastation)\n    - another notebook alternative. under-designed imo.\n- [Tailscale · Best VPN Service for Secure Networks](https://tailscale.com/)\n    - [redacted] is using this. But does look interesting, trad-VPN is so wasteful\n- [One-liner for running queries against CSV files with SQLite | Simon Willison’s TILs](https://til.simonwillison.net/sqlite/one-line-csv-operations)\n    - stoopid sqlite tricks\n- [AddyOsmani.com - Software Engineering - The Soft Parts](https://addyosmani.com/blog/software-engineering-soft-parts/)\n    - thoughtful post from Addy about being a human who also works with other humans and also computers\n- [Notes on maintaining an internal React component library | Gabe's blog](https://www.gabe.pizza/notes-on-component-libraries/)\n- [The Bill Gurley Chronicles: VCs, Marketplaces, and Early-Stage Investing](https://macro-ops.com/the-bill-gurley-chronicles-an-above-the-crowd-mba-on-vcs-marketplaces-and-early-stage-investing/)\n    - This might be the single most informative blog post I have ever read. It summarizes 20 years of Bill Gurley's blog, which is just nugget after interesting nugget of shrewd analysis and galaxy-brain predictions that were more accurate than not.\n- [CSS: Flexible Repeating SVG Masks](https://tylergaw.com/blog/css-repeating-svg-masks/)\n    - [redacted] designed me something like this for [WebRTC.party](https://webrtc.party/) and I did my own half-baked version and then found this post. For next time.\n- [I'm All-In on Server-Side SQLite · Fly](https://fly.io/blog/all-in-on-sqlite-litestream/)\n    - more SQLite hype\n- [Local warming - Works in Progress](https://www.worksinprogress.co/issue/local-warming/)\n    - I like the design. The content didn't stick with me, but the design did.\n- [Elegant Six-Page Proof Reveals the Emergence of Random Structure | Quanta Magazine](https://www.quantamagazine.org/elegant-six-page-proof-reveals-the-emergence-of-random-structure-20220425/)\n    - I always save the tab on this genre Math shit after I read half of it and move onto something else. I long for the timeline where I studied a bit harder and got the muscle memory worn into me to fully understand this realm instead of feeling like a lost child.\n- [How to write more clearly, think more clearly, and learn complex material](https://news.ycombinator.com/item?id=31060362)\n- [How to Freaking Find Great Developers By Having Them Read Code | Freaking Rectangle](https://freakingrectangle.wordpress.com/2022/04/15/how-to-freaking-hire-great-developers/)\n    - Lotsa people opine on how to do interviews, or otherwise bemoan the modern leetcode-style panel interview, but this is a novel hot take. Analyzing is better than synthesizing.\n- [Reliably Send an HTTP Request as a User Leaves a Page | CSS-Tricks - CSS-Tricks](https://css-tricks.com/send-an-http-request-on-page-exit/)\n    - Still hard to do! There's a built-in `ping` attribute on the anchor tag, but Firefox doesn't support it.\n- [Agile and the Long Crisis of Software](https://logicmag.io/clouds/agile-and-the-long-crisis-of-software/)\n    - my favorite dead horse to beat: discourse on project management techniques! though this is a good history, the subject is fraught. It's a distraction from building.\n- [What I learned as a hired consultant for autodidact physicists | Aeon Ideas](https://aeon.co/ideas/what-i-learned-as-a-hired-consultant-for-autodidact-physicists)\n    - good germ of a story here\n- [A Rust web server / frontend setup like it's 2022 (with axum and yew) | Robert Krahn](https://robert.kra.hn/posts/2022-04-03_rust-web-wasm/)\n    - I deeply, deeply want to write Rust but feel like I can't ever afford to slow down and suffer through the learning curve. I just end up writing JavaScript (TypeScript).\n- [Two-way writeups: Coda’s secret to shipping fast](https://coda.io/@lshackleton/two-way-writeups-coda-s-secret-to-shipping-fast)\n    - hey look, more discourse on project management techniques! this is good though, coda makes good tools\n- [Mapo Tofu | Cult Favorite](https://cult.st/recipes/mapo-tofu)\n    - I want to cook this!\n- [Sichuan(ish) Celery | Cult Favorite](https://cult.st/recipes/sichuanish-celery)\n    - I want to cook this too!\n- [The SPACE of Developer Productivity - ACM Queue](https://queue.acm.org/detail.cfm?id=3454124)\n    - yet another piece adjacent to project management discourse. this time a framework to measure developer productivity. I discussed this with Sean in 2016/17 as being a multi-dimensional gradient descent problem.\n- [Nadia Asparouhova | Idea machines](https://nadia.xyz/idea-machines)\n    - \"effective altruism\"\n- [set -e, -u, -o, -x pipefail explanation](https://gist.github.com/mohanpedala/1e2ff5661761d3abd0385e8223e16425)\n    - I don't write bash as regularly as I used to (thank god) and I can never remember which of these I need to do. Bash is the pits.","src/content/writing/2022/links-part-one.html.md","4ec789097cb6bbb1",{"html":367,"metadata":368},"\u003Cp>another link dump, some of these have been open for months and need to be closed or forgotten. It’s healthy to pay down the tab debt at least once a quarter.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://meteor10.sachagreif.com/\">10 Years of Meteor\u003C/a>\n\u003Cul>\n\u003Cli>meteor had some good parts but missed the mark on several. I didn’t care for meteor at the time, but did go on to use Apollo GraphQL heavily at Credit Karma. It was ok, but perhaps overly complicated.\u003C/li>\n\u003Cli>\u003Ca href=\"https://sidebar.io/\">Sidebar\u003C/a>\n\u003Cul>\n\u003Cli>linked from the meteor piece, it’s a daily link aggregator\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.miriamsuzanne.com/2022/07/04/body-margin-8px/\">Body Margin 8px | Miriam Eric Suzanne\u003C/a>\n\u003Cul>\n\u003Cli>a few too many words on the history of browser resets, specifically the 8px body margin\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/supabase-community/auth-helpers/tree/main/packages/nextjs?utm_medium=email&#x26;_hsmi=218642387&#x26;utm_content=218642387&#x26;utm_source=hs_email#migrating-from-supabasesupabase-auth-helpers-to-supabaseauth-helpers\">auth-helpers/packages/nextjs at main · supabase-community/auth-helpers\u003C/a>\n\u003Cul>\n\u003Cli>supabase might have finally fixed their auth? I need to update this in [redacted]\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://frontendmastery.com/posts/the-new-wave-of-react-state-management/\">The new wave of React state management\u003C/a>\n\u003Cul>\n\u003Cli>everything is new, again. this time it’s state management, because flow was fucked and redux is too repetitive, so we need more of these.\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/pmndrs/zustand\">pmndrs/zustand: 🐻 Bear necessities for state management in React\u003C/a> looks cool though\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/titzer/virgil/blob/master/doc/tutorial/Overview.md\">virgil/Overview.md at master · titzer/virgil\u003C/a>\n\u003Cul>\n\u003Cli>[redacted] has been designing a programming language, so I collected this to send to him\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://ai.googleblog.com/2022/06/minerva-solving-quantitative-reasoning.html\">Google AI Blog: Minerva: Solving Quantitative Reasoning Problems with Language Models\u003C/a>\n\u003Cul>\n\u003Cli>more AI research for the pile.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://architecturenotes.co/things-you-should-know-about-databases/\">Things You Should Know About Databases\u003C/a>\n\u003Cul>\n\u003Cli>I can’t produce this knowledge a priori, but this tread over territory I was already familiar with from reading Martin Kleppmann’s Warthog book. (Everyone should read the Warthog book.)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/multiprocessio/datastation\">multiprocessio/datastation: App to easily query, script, and visualize data from every database, file, and API.\u003C/a>\n\u003Cul>\n\u003Cli>another notebook alternative. under-designed imo.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://tailscale.com/\">Tailscale · Best VPN Service for Secure Networks\u003C/a>\n\u003Cul>\n\u003Cli>[redacted] is using this. But does look interesting, trad-VPN is so wasteful\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://til.simonwillison.net/sqlite/one-line-csv-operations\">One-liner for running queries against CSV files with SQLite | Simon Willison’s TILs\u003C/a>\n\u003Cul>\n\u003Cli>stoopid sqlite tricks\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://addyosmani.com/blog/software-engineering-soft-parts/\">AddyOsmani.com - Software Engineering - The Soft Parts\u003C/a>\n\u003Cul>\n\u003Cli>thoughtful post from Addy about being a human who also works with other humans and also computers\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.gabe.pizza/notes-on-component-libraries/\">Notes on maintaining an internal React component library | Gabe’s blog\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://macro-ops.com/the-bill-gurley-chronicles-an-above-the-crowd-mba-on-vcs-marketplaces-and-early-stage-investing/\">The Bill Gurley Chronicles: VCs, Marketplaces, and Early-Stage Investing\u003C/a>\n\u003Cul>\n\u003Cli>This might be the single most informative blog post I have ever read. It summarizes 20 years of Bill Gurley’s blog, which is just nugget after interesting nugget of shrewd analysis and galaxy-brain predictions that were more accurate than not.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://tylergaw.com/blog/css-repeating-svg-masks/\">CSS: Flexible Repeating SVG Masks\u003C/a>\n\u003Cul>\n\u003Cli>[redacted] designed me something like this for \u003Ca href=\"https://webrtc.party/\">WebRTC.party\u003C/a> and I did my own half-baked version and then found this post. For next time.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://fly.io/blog/all-in-on-sqlite-litestream/\">I’m All-In on Server-Side SQLite · Fly\u003C/a>\n\u003Cul>\n\u003Cli>more SQLite hype\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.worksinprogress.co/issue/local-warming/\">Local warming - Works in Progress\u003C/a>\n\u003Cul>\n\u003Cli>I like the design. The content didn’t stick with me, but the design did.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.quantamagazine.org/elegant-six-page-proof-reveals-the-emergence-of-random-structure-20220425/\">Elegant Six-Page Proof Reveals the Emergence of Random Structure | Quanta Magazine\u003C/a>\n\u003Cul>\n\u003Cli>I always save the tab on this genre Math shit after I read half of it and move onto something else. I long for the timeline where I studied a bit harder and got the muscle memory worn into me to fully understand this realm instead of feeling like a lost child.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://news.ycombinator.com/item?id=31060362\">How to write more clearly, think more clearly, and learn complex material\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://freakingrectangle.wordpress.com/2022/04/15/how-to-freaking-hire-great-developers/\">How to Freaking Find Great Developers By Having Them Read Code | Freaking Rectangle\u003C/a>\n\u003Cul>\n\u003Cli>Lotsa people opine on how to do interviews, or otherwise bemoan the modern leetcode-style panel interview, but this is a novel hot take. Analyzing is better than synthesizing.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://css-tricks.com/send-an-http-request-on-page-exit/\">Reliably Send an HTTP Request as a User Leaves a Page | CSS-Tricks - CSS-Tricks\u003C/a>\n\u003Cul>\n\u003Cli>Still hard to do! There’s a built-in \u003Ccode>ping\u003C/code> attribute on the anchor tag, but Firefox doesn’t support it.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://logicmag.io/clouds/agile-and-the-long-crisis-of-software/\">Agile and the Long Crisis of Software\u003C/a>\n\u003Cul>\n\u003Cli>my favorite dead horse to beat: discourse on project management techniques! though this is a good history, the subject is fraught. It’s a distraction from building.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://aeon.co/ideas/what-i-learned-as-a-hired-consultant-for-autodidact-physicists\">What I learned as a hired consultant for autodidact physicists | Aeon Ideas\u003C/a>\n\u003Cul>\n\u003Cli>good germ of a story here\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://robert.kra.hn/posts/2022-04-03_rust-web-wasm/\">A Rust web server / frontend setup like it’s 2022 (with axum and yew) | Robert Krahn\u003C/a>\n\u003Cul>\n\u003Cli>I deeply, deeply want to write Rust but feel like I can’t ever afford to slow down and suffer through the learning curve. I just end up writing JavaScript (TypeScript).\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://coda.io/@lshackleton/two-way-writeups-coda-s-secret-to-shipping-fast\">Two-way writeups: Coda’s secret to shipping fast\u003C/a>\n\u003Cul>\n\u003Cli>hey look, more discourse on project management techniques! this is good though, coda makes good tools\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://cult.st/recipes/mapo-tofu\">Mapo Tofu | Cult Favorite\u003C/a>\n\u003Cul>\n\u003Cli>I want to cook this!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://cult.st/recipes/sichuanish-celery\">Sichuan(ish) Celery | Cult Favorite\u003C/a>\n\u003Cul>\n\u003Cli>I want to cook this too!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://queue.acm.org/detail.cfm?id=3454124\">The SPACE of Developer Productivity - ACM Queue\u003C/a>\n\u003Cul>\n\u003Cli>yet another piece adjacent to project management discourse. this time a framework to measure developer productivity. I discussed this with Sean in 2016/17 as being a multi-dimensional gradient descent problem.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://nadia.xyz/idea-machines\">Nadia Asparouhova | Idea machines\u003C/a>\n\u003Cul>\n\u003Cli>“effective altruism”\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://gist.github.com/mohanpedala/1e2ff5661761d3abd0385e8223e16425\">set -e, -u, -o, -x pipefail explanation\u003C/a>\n\u003Cul>\n\u003Cli>I don’t write bash as regularly as I used to (thank god) and I can never remember which of these I need to do. Bash is the pits.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":369,"imagePaths":370,"frontmatter":371},[],[],{"title":360,"slug":357,"description":361,"pubDate":362},"2022/links-august-2022.html",{"id":372,"data":374,"body":379,"filePath":380,"assetImports":381,"digest":383,"rendered":384},{"title":375,"description":376,"pubDate":377,"heroAlt":375,"cover":378},"Links Blog August 2022","Links! more links to things I've had open for most of August 2022","Aug 30 2022","__ASTRO_IMAGE_../../../assets/0411fe02-021e-4f3a-b45a-591907eea8a9.png","I've committed to blogging more while also paying down my open tab debt. Once a month, I'll use the Session Buddy extension to export my current tabs on my personal computer.\n\n- [pico.js, a face-detection library in 200 lines of JavaScript](https://nenadmarkus.com/p/picojs-intro/)\n    - a few years old already, but things like this never cease to amaze me. When I was learning JavaScript, I would joke with my colleagues about far-fetched behavior like realtime face detection being done in JS, so to see it laid out so tersely makes me excited for the future. \n- [Architecture Notes — System Design & Software Architectures Explained](https://architecturenotes.co/)\n    - the write-up here about Redis made it into my social feeds. I'm a sucker for diagrams and short paragraphs and database internals. I love systems, and I love Redis, despite having not used it for anything recently. Early on at Quick Left, I built a number of client projects that used Redis for caching or lightweight storage. I even made the mistake of trying to build an entire app with a Redis backend until it collapsed under it's own schema-less weight.\n- [Shoelace.style](https://shoelace.style/)\n    - I really, really don't want web components to be vaporware. Shoelace seems like a deliberate step in the right direction: making web-native components that are compatible with React (because that's where the developers are). Tools should embrace where developers are and help make them better at their jobs.\n    - The Next.js integration looks ugly today, but I'm willing to bet that it improves over time.\n- [Webhooks.fyi](https://webhooks.fyi/)\n    - filed under: essential information. h/t to [Jeff Lindsay](https://progrium.com) for inventing webhooks in the first place. \n- [Deconstructing Bézier curves](http://blog.pkh.me/p/33-deconstructing-be%CC%81zier-curves.html)\n    - tutorials about once-byzantine concepts are my jam. I could collect these infinitely. \n    - Two more links fell out of this one:\n        - http://blog.pkh.me/p/29-the-most-useful-math-formulas.html\n        - https://en.m.wikipedia.org/wiki/De_Casteljau%27s_algorithm\n- [Instagram, TikTok, and the Three Trends – Stratechery by Ben Thompson](https://stratechery.com/2022/instagram-tiktok-and-the-three-trends/)\n    - too long to summarize, but tldr social media destroyed the traditional media and now the next generation of apps are reshaping things again; we're all living through the consequences of it and won't know what trends matter for another decade.\n- [CannedTXT](https://cannedtxt.com/)\n    - widely shared, but a smart little source of \"canned responses.\" It's tough to be terse, polite, and direct in writing without a lot of practice; this is a masterclass.\n- [100 Rules — Personal Philosophy - Dru Riley](https://druriley.com/100-rules-2020/)\n    - aphorisms are another fun thing to collect. I'd never thought of keeping a running list of the good ones.\n- [The Unreasonable Effectiveness of Makefiles](https://matt-rickard.com/the-unreasonable-effectiveness-of-makefiles)\n    - I'm on the fence about this hypothesis. At Credit Karma, I put Makefiles in lots of my projects because it seemed like a universal solution.\n    - I've been using linux since I was a teenager, so the idea of running `make` in a project and just having it do the right thing appealed to me.\n    - In practice, I found it to be less than ideal. Make syntax is \"yet another\" technology to weave into a project that's not already going to use it.\n    - Using it to invoke npm commands and interface to other build and test scripts was fine, but it didn't remove any complexity. Rather, it added complexity in exchange for very little utility.\n    - The only correct take on `make` is that there's really only _one_ Makefile. Every Makefile you encounter has been copypasta'd from the original.\n- [Patterns.dev - Modern Web App Design Patterns](https://www.patterns.dev/)\n    - huge collection of design patterns. Materials like this would have been extremely effective when I was learning how to build apps. Reading Stoyan Stefanov's JavaScript Patterns book was an eye-opening experience for me 10 years ago, so it's heartening to see that tradition continued.\n- [Software Engineering Books](https://software-engineering-books.com/)\n    - In a similar vein to the previous tab, here is a curated reading list. I've read a number of these already and the remainder are on the list.\n    - I've already finished The Personal MBA because it was the only book listed in two different categories. It was dense, which is the only compliment for a business book, which tend to be 2 paragraphs worth of ideas spread across 100 pages of filler.\n- [I Looked Into 34 Top Real-World Blockchain Projects So You Don’t Have To | Niko’s Blog](https://weh.wtf/34-blockchain-projects.html)\n    - This is tongue-in-cheek because the \"list\" of 34 companies comes from an unknown media outlet and the original author is obviously pro crypto.\n    - The original piece could very well be a link farming or affiliate marketing situation, and if you pick a year-old post on a site like that, you'd be shocked if the majority of the links weren't dead or redirects.\n    - But yeah, crypto has so far only been provably good at creating exchanges to trade crypto, which exist to get market makers (the shills) and retail investors (the marks) to trade crypto. QED.\n- [The Maintenance Race](https://www.worksinprogress.co/issue/the-maintenance-race/)\n    - Long read by Stewart Brand. I recently finished reading his biography, Whole Earth, so Brand has been top of mind lately.\n    - My only notes from the biography is that he occasionally seemed like a jerk, but I'm glad they left that stuff in, because honestly who's _not_ a jerk every now and then.\n    - Anyway this is an interesting story and re-enforces an aphorism from Nassim Taleb that I'm fond of: \"prepare for the worst, the best will work itself out\".\n    - [The Browser](https://thebrowser.com/) this is a paid newsletter that I don't pay for but seemed interesting, Brand tweeted about it having run a blerb about the article.\n- [Implementing \"seen by\" functionality with Postgres](https://supabase.com/blog/2022/07/18/seen-by-in-postgresql)\n    - smarties over at supabase demonstrating hyperloglog tables in postgres\n- [codecrafters-io/build-your-own-x: Master programming by recreating your favorite technologies from scratch.](https://github.com/codecrafters-io/build-your-own-x#build-your-own-3d-renderer)\n    - yet-another Rosetta Stone for building a wide variety of software projects\n- [Burnout Guide: Symptoms, Causes, and Prevention - Commoncog](https://commoncog.com/g/burnout/)\n    - haha an article about burnout that's a bit too long to read given my current energy and commitment levels. \"I knows it when I sees it\". Come back to this one later on down the road.\n- [Cryptocurrency \"market caps\" and notional value](https://blog.mollywhite.net/cryptocurrency-market-caps-and-notional-value/)\n    - I spent many years being biased _towards_ crypto.\n        - In order to counteract that, I'm planning on spending as many years being well informed on the arguments against the industry.\n        - My real opinion is more neutral. I look at it like gambling or day trading, neither of which I engage in, but I also don't care if my neighbor chooses to. Be safe and have fun!\n        - That said, in a just society, regulatory frameworks should exist to protect people who gamble or trade securities from being scammed, mislead, or exploited.\n    - The author, Molly White, is exceptionally good at presenting balanced and well-reasoned descriptions of current events and industry slip ups.\n- [Fermat's Library | The Teletel/Minitel System in France annotated/explained version.](https://fermatslibrary.com/s/the-teletel-minitel-system-in-france)\n    - France's pre-web barely-internet information services were ahead of their time and simultaneously offer a view into an alternate history of what could have been if that technology caught on like the web did.\n- [CLIPasso: Semantically-Aware Object Sketching](https://clipasso.github.io/clipasso/?utm_campaign=%22Securities%22%20by%20Lux%20Capital&utm_medium=email&utm_source=Revue%20newsletter)\n    - I'm not quite there with the maths in all the AI papers I read, but I still read them and try to understand what's going on at a casual level. I have the rest of my lifetime to get a grasp on the math parts.\n- [マリウス . Running an Open Source Home Area Network](https://xn--gckvb8fzb.com/running-an-open-source-home-area-network/)\n    - extremely detailed, extremely neckbeard (no offense intended) home networking setup. I simply don't have the patience to do anything more basic than running hard wired cables to a couple devices and plugging things into an unmanaged switch. Mad respect to the people that get creative with things like this.\n- [Elegant Six-Page Proof Reveals the Emergence of Random Structure | Quanta Magazine](https://www.quantamagazine.org/elegant-six-page-proof-reveals-the-emergence-of-random-structure-20220425/)\n    - Journalism about math is never boring.\n- [Nadia Asparouhova | Idea machines](https://nadia.xyz/idea-machines)\n    - remined me of the disney circular business model\n- [SOC2: The Screenshots Will Continue Until Security Improves · Fly](https://fly.io/blog/soc2-the-screenshots-will-continue-until-security-improves/)\n    - Security is such a deep topic, I could read about the procedural blood and guts like this all day. I'm glad to have done a stint with a security focused industry and for a company that treated it rigorously. But I don't miss being paranoid.\n    - [Starting Up Security](https://scrty.io/)\n    - [Internal Control Framework: A Practical Guide to the COSO Framework | Pathlock](https://pathlock.com/learn/internal-control-framework-a-practical-guide-to-the-coso-framework/)\n- [Robert-van-Engelen/tinylisp: Lisp in 99 lines of C and how to write one yourself. Includes 20 Lisp primitives, garbage collection and REPL. Includes tail-call optimized versions for speed and reduced memory use.](https://github.com/Robert-van-Engelen/tinylisp)\n    - wow\n- [ML code generation vs. coding by hand - what we think programming is going to look like | Wasp](https://wasp-lang.dev/blog/2022/06/24/ML-code-gen-vs-coding-by-hand-future)\n    - an area that I'm still in the \"thinking deep thoughts\" phase of\n- [stateful/vscode-awesome-ux: Showcase of how to employ best practices to provide a high-fidelity user experience inside of VS Code extensions.](https://github.com/stateful/vscode-awesome-ux)\n    - lots more can be done in vs code extensions than I had previously thought. Great seeing open source explorations like this.\n- [Euler equations - fluid dynamics](https://en.m.wikipedia.org/wiki/Euler_equations_(fluid_dynamics))\n    - more math-person envy on display\n- [The Troubled History of Batman (1989): Burton! Keaton! Nicholson! Batmania! - YouTube](https://www.youtube.com/watch?v=941vlJw5y8I)\n    - I like this channel.","src/content/writing/2022/links-august-2022.html.md",[382],"../../../assets/0411fe02-021e-4f3a-b45a-591907eea8a9.png","93df3af5e0aa1ed0",{"html":385,"metadata":386},"\u003Cp>I’ve committed to blogging more while also paying down my open tab debt. Once a month, I’ll use the Session Buddy extension to export my current tabs on my personal computer.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://nenadmarkus.com/p/picojs-intro/\">pico.js, a face-detection library in 200 lines of JavaScript\u003C/a>\n\u003Cul>\n\u003Cli>a few years old already, but things like this never cease to amaze me. When I was learning JavaScript, I would joke with my colleagues about far-fetched behavior like realtime face detection being done in JS, so to see it laid out so tersely makes me excited for the future.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://architecturenotes.co/\">Architecture Notes — System Design &#x26; Software Architectures Explained\u003C/a>\n\u003Cul>\n\u003Cli>the write-up here about Redis made it into my social feeds. I’m a sucker for diagrams and short paragraphs and database internals. I love systems, and I love Redis, despite having not used it for anything recently. Early on at Quick Left, I built a number of client projects that used Redis for caching or lightweight storage. I even made the mistake of trying to build an entire app with a Redis backend until it collapsed under it’s own schema-less weight.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://shoelace.style/\">Shoelace.style\u003C/a>\n\u003Cul>\n\u003Cli>I really, really don’t want web components to be vaporware. Shoelace seems like a deliberate step in the right direction: making web-native components that are compatible with React (because that’s where the developers are). Tools should embrace where developers are and help make them better at their jobs.\u003C/li>\n\u003Cli>The Next.js integration looks ugly today, but I’m willing to bet that it improves over time.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://webhooks.fyi/\">Webhooks.fyi\u003C/a>\n\u003Cul>\n\u003Cli>filed under: essential information. h/t to \u003Ca href=\"https://progrium.com\">Jeff Lindsay\u003C/a> for inventing webhooks in the first place.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"http://blog.pkh.me/p/33-deconstructing-be%CC%81zier-curves.html\">Deconstructing Bézier curves\u003C/a>\n\u003Cul>\n\u003Cli>tutorials about once-byzantine concepts are my jam. I could collect these infinitely.\u003C/li>\n\u003Cli>Two more links fell out of this one:\n\u003Cul>\n\u003Cli>\u003Ca href=\"http://blog.pkh.me/p/29-the-most-useful-math-formulas.html\">http://blog.pkh.me/p/29-the-most-useful-math-formulas.html\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/De_Casteljau%27s_algorithm\">https://en.m.wikipedia.org/wiki/De_Casteljau%27s_algorithm\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://stratechery.com/2022/instagram-tiktok-and-the-three-trends/\">Instagram, TikTok, and the Three Trends – Stratechery by Ben Thompson\u003C/a>\n\u003Cul>\n\u003Cli>too long to summarize, but tldr social media destroyed the traditional media and now the next generation of apps are reshaping things again; we’re all living through the consequences of it and won’t know what trends matter for another decade.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://cannedtxt.com/\">CannedTXT\u003C/a>\n\u003Cul>\n\u003Cli>widely shared, but a smart little source of “canned responses.” It’s tough to be terse, polite, and direct in writing without a lot of practice; this is a masterclass.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://druriley.com/100-rules-2020/\">100 Rules — Personal Philosophy - Dru Riley\u003C/a>\n\u003Cul>\n\u003Cli>aphorisms are another fun thing to collect. I’d never thought of keeping a running list of the good ones.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://matt-rickard.com/the-unreasonable-effectiveness-of-makefiles\">The Unreasonable Effectiveness of Makefiles\u003C/a>\n\u003Cul>\n\u003Cli>I’m on the fence about this hypothesis. At Credit Karma, I put Makefiles in lots of my projects because it seemed like a universal solution.\u003C/li>\n\u003Cli>I’ve been using linux since I was a teenager, so the idea of running \u003Ccode>make\u003C/code> in a project and just having it do the right thing appealed to me.\u003C/li>\n\u003Cli>In practice, I found it to be less than ideal. Make syntax is “yet another” technology to weave into a project that’s not already going to use it.\u003C/li>\n\u003Cli>Using it to invoke npm commands and interface to other build and test scripts was fine, but it didn’t remove any complexity. Rather, it added complexity in exchange for very little utility.\u003C/li>\n\u003Cli>The only correct take on \u003Ccode>make\u003C/code> is that there’s really only \u003Cem>one\u003C/em> Makefile. Every Makefile you encounter has been copypasta’d from the original.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.patterns.dev/\">Patterns.dev - Modern Web App Design Patterns\u003C/a>\n\u003Cul>\n\u003Cli>huge collection of design patterns. Materials like this would have been extremely effective when I was learning how to build apps. Reading Stoyan Stefanov’s JavaScript Patterns book was an eye-opening experience for me 10 years ago, so it’s heartening to see that tradition continued.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://software-engineering-books.com/\">Software Engineering Books\u003C/a>\n\u003Cul>\n\u003Cli>In a similar vein to the previous tab, here is a curated reading list. I’ve read a number of these already and the remainder are on the list.\u003C/li>\n\u003Cli>I’ve already finished The Personal MBA because it was the only book listed in two different categories. It was dense, which is the only compliment for a business book, which tend to be 2 paragraphs worth of ideas spread across 100 pages of filler.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://weh.wtf/34-blockchain-projects.html\">I Looked Into 34 Top Real-World Blockchain Projects So You Don’t Have To | Niko’s Blog\u003C/a>\n\u003Cul>\n\u003Cli>This is tongue-in-cheek because the “list” of 34 companies comes from an unknown media outlet and the original author is obviously pro crypto.\u003C/li>\n\u003Cli>The original piece could very well be a link farming or affiliate marketing situation, and if you pick a year-old post on a site like that, you’d be shocked if the majority of the links weren’t dead or redirects.\u003C/li>\n\u003Cli>But yeah, crypto has so far only been provably good at creating exchanges to trade crypto, which exist to get market makers (the shills) and retail investors (the marks) to trade crypto. QED.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.worksinprogress.co/issue/the-maintenance-race/\">The Maintenance Race\u003C/a>\n\u003Cul>\n\u003Cli>Long read by Stewart Brand. I recently finished reading his biography, Whole Earth, so Brand has been top of mind lately.\u003C/li>\n\u003Cli>My only notes from the biography is that he occasionally seemed like a jerk, but I’m glad they left that stuff in, because honestly who’s \u003Cem>not\u003C/em> a jerk every now and then.\u003C/li>\n\u003Cli>Anyway this is an interesting story and re-enforces an aphorism from Nassim Taleb that I’m fond of: “prepare for the worst, the best will work itself out”.\u003C/li>\n\u003Cli>\u003Ca href=\"https://thebrowser.com/\">The Browser\u003C/a> this is a paid newsletter that I don’t pay for but seemed interesting, Brand tweeted about it having run a blerb about the article.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://supabase.com/blog/2022/07/18/seen-by-in-postgresql\">Implementing “seen by” functionality with Postgres\u003C/a>\n\u003Cul>\n\u003Cli>smarties over at supabase demonstrating hyperloglog tables in postgres\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/codecrafters-io/build-your-own-x#build-your-own-3d-renderer\">codecrafters-io/build-your-own-x: Master programming by recreating your favorite technologies from scratch.\u003C/a>\n\u003Cul>\n\u003Cli>yet-another Rosetta Stone for building a wide variety of software projects\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://commoncog.com/g/burnout/\">Burnout Guide: Symptoms, Causes, and Prevention - Commoncog\u003C/a>\n\u003Cul>\n\u003Cli>haha an article about burnout that’s a bit too long to read given my current energy and commitment levels. “I knows it when I sees it”. Come back to this one later on down the road.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.mollywhite.net/cryptocurrency-market-caps-and-notional-value/\">Cryptocurrency “market caps” and notional value\u003C/a>\n\u003Cul>\n\u003Cli>I spent many years being biased \u003Cem>towards\u003C/em> crypto.\n\u003Cul>\n\u003Cli>In order to counteract that, I’m planning on spending as many years being well informed on the arguments against the industry.\u003C/li>\n\u003Cli>My real opinion is more neutral. I look at it like gambling or day trading, neither of which I engage in, but I also don’t care if my neighbor chooses to. Be safe and have fun!\u003C/li>\n\u003Cli>That said, in a just society, regulatory frameworks should exist to protect people who gamble or trade securities from being scammed, mislead, or exploited.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>The author, Molly White, is exceptionally good at presenting balanced and well-reasoned descriptions of current events and industry slip ups.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://fermatslibrary.com/s/the-teletel-minitel-system-in-france\">Fermat’s Library | The Teletel/Minitel System in France annotated/explained version.\u003C/a>\n\u003Cul>\n\u003Cli>France’s pre-web barely-internet information services were ahead of their time and simultaneously offer a view into an alternate history of what could have been if that technology caught on like the web did.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://clipasso.github.io/clipasso/?utm_campaign=%22Securities%22%20by%20Lux%20Capital&#x26;utm_medium=email&#x26;utm_source=Revue%20newsletter\">CLIPasso: Semantically-Aware Object Sketching\u003C/a>\n\u003Cul>\n\u003Cli>I’m not quite there with the maths in all the AI papers I read, but I still read them and try to understand what’s going on at a casual level. I have the rest of my lifetime to get a grasp on the math parts.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://xn--gckvb8fzb.com/running-an-open-source-home-area-network/\">マリウス . Running an Open Source Home Area Network\u003C/a>\n\u003Cul>\n\u003Cli>extremely detailed, extremely neckbeard (no offense intended) home networking setup. I simply don’t have the patience to do anything more basic than running hard wired cables to a couple devices and plugging things into an unmanaged switch. Mad respect to the people that get creative with things like this.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.quantamagazine.org/elegant-six-page-proof-reveals-the-emergence-of-random-structure-20220425/\">Elegant Six-Page Proof Reveals the Emergence of Random Structure | Quanta Magazine\u003C/a>\n\u003Cul>\n\u003Cli>Journalism about math is never boring.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://nadia.xyz/idea-machines\">Nadia Asparouhova | Idea machines\u003C/a>\n\u003Cul>\n\u003Cli>remined me of the disney circular business model\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://fly.io/blog/soc2-the-screenshots-will-continue-until-security-improves/\">SOC2: The Screenshots Will Continue Until Security Improves · Fly\u003C/a>\n\u003Cul>\n\u003Cli>Security is such a deep topic, I could read about the procedural blood and guts like this all day. I’m glad to have done a stint with a security focused industry and for a company that treated it rigorously. But I don’t miss being paranoid.\u003C/li>\n\u003Cli>\u003Ca href=\"https://scrty.io/\">Starting Up Security\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://pathlock.com/learn/internal-control-framework-a-practical-guide-to-the-coso-framework/\">Internal Control Framework: A Practical Guide to the COSO Framework | Pathlock\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/Robert-van-Engelen/tinylisp\">Robert-van-Engelen/tinylisp: Lisp in 99 lines of C and how to write one yourself. Includes 20 Lisp primitives, garbage collection and REPL. Includes tail-call optimized versions for speed and reduced memory use.\u003C/a>\n\u003Cul>\n\u003Cli>wow\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://wasp-lang.dev/blog/2022/06/24/ML-code-gen-vs-coding-by-hand-future\">ML code generation vs. coding by hand - what we think programming is going to look like | Wasp\u003C/a>\n\u003Cul>\n\u003Cli>an area that I’m still in the “thinking deep thoughts” phase of\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/stateful/vscode-awesome-ux\">stateful/vscode-awesome-ux: Showcase of how to employ best practices to provide a high-fidelity user experience inside of VS Code extensions.\u003C/a>\n\u003Cul>\n\u003Cli>lots more can be done in vs code extensions than I had previously thought. Great seeing open source explorations like this.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/Euler_equations_(fluid_dynamics)\">Euler equations - fluid dynamics\u003C/a>\n\u003Cul>\n\u003Cli>more math-person envy on display\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.youtube.com/watch?v=941vlJw5y8I\">The Troubled History of Batman (1989): Burton! Keaton! Nicholson! Batmania! - YouTube\u003C/a>\n\u003Cul>\n\u003Cli>I like this channel.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":387,"imagePaths":388,"frontmatter":389},[],[],{"title":375,"slug":372,"description":376,"cover":382,"heroAlt":375,"pubDate":377},"2024/links-february",{"id":390,"data":392,"body":396,"filePath":397,"digest":398,"rendered":399},{"title":393,"description":394,"pubDate":395},"Links, February 2024","my side of the internet","Feb 1 2024","* [GitHub - Fanghua-Yu/SUPIR: SUPIR aims at developing Practical Algorithms for Photo-Realistic Image Restoration In the Wild](https://github.com/Fanghua-Yu/SUPIR)\n* [The Ultimate Guide to PostgreSQL Data Change Tracking | Medium](https://exaspark.medium.com/the-ultimate-guide-to-postgresql-data-change-tracking-c3fa88779572)\n* [Robin Rendle — Designer and writer.](https://robinrendle.com/)\n* [How independent writers are turning to AI](https://www.theverge.com/c/23194235/ai-fiction-writing-amazon-kindle-sudowrite-jasper)\n* [A search engine in 80 lines of Python](https://www.alexmolas.com/2024/02/05/a-search-engine-in-80-lines.html)\n* [Cooking with Gas - 99% Invisible](https://99percentinvisible.org/episode/cooking-with-gas/)\n* [Postgres is Enough](https://gist.github.com/cpursley/c8fb81fe8a7e5df038158bdfe0f06dbb)\n* [One of Our Best Websites Died While No One Was Looking](https://slate.com/technology/2024/02/quora-what-happened-ai-decline.html)\n* [Rebecca Solnit: How to Comment on Social Media ‹ Literary Hub](https://lithub.com/rebecca-solnit-how-to-comment-on-social-media/)\n* [Highlight Text When a User Scrolls Down to That Piece of Text](https://frontendmasters.com/blog/highlight-text-when-a-user-scrolls-down-to-that-piece-of-text/)\n* [Auto complete plugin? · Issue #2399 · ueberdosis/tiptap](https://github.com/ueberdosis/tiptap/issues/2399)\n* [A Yjs provider that uses Supabase Realtime for synchronization. Feedback / suggestions welcome. : r/Supabase](https://www.reddit.com/r/Supabase/comments/10u96rr/comment/j7fecgk/?utm_source=share&utm_medium=mweb3x&utm_name=mweb3xcss&utm_term=1&utm_content=share_button)\n* [AlexDunmow/y-supabase: Supabase Provider for Yjs](https://github.com/AlexDunmow/y-supabase)\n* [supabase/pg_crdt: POC CRDT support in Postgres](https://github.com/supabase/pg_crdt)\n* [How to generate text: using different decoding methods for language generation with Transformers](https://huggingface.co/blog/how-to-generate)\n* [Thomson Viper FilmStream Camera - Wikipedia](https://en.m.wikipedia.org/wiki/Thomson_Viper_FilmStream_Camera)\n* [Fuck You, Show Me The Prompt.](https://hamel.dev/blog/posts/prompt/)","src/content/writing/2024/links-february.md","d3248f3dd5b84beb",{"html":400,"metadata":401},"\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/Fanghua-Yu/SUPIR\">GitHub - Fanghua-Yu/SUPIR: SUPIR aims at developing Practical Algorithms for Photo-Realistic Image Restoration In the Wild\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://exaspark.medium.com/the-ultimate-guide-to-postgresql-data-change-tracking-c3fa88779572\">The Ultimate Guide to PostgreSQL Data Change Tracking | Medium\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://robinrendle.com/\">Robin Rendle — Designer and writer.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.theverge.com/c/23194235/ai-fiction-writing-amazon-kindle-sudowrite-jasper\">How independent writers are turning to AI\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.alexmolas.com/2024/02/05/a-search-engine-in-80-lines.html\">A search engine in 80 lines of Python\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://99percentinvisible.org/episode/cooking-with-gas/\">Cooking with Gas - 99% Invisible\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://gist.github.com/cpursley/c8fb81fe8a7e5df038158bdfe0f06dbb\">Postgres is Enough\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://slate.com/technology/2024/02/quora-what-happened-ai-decline.html\">One of Our Best Websites Died While No One Was Looking\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://lithub.com/rebecca-solnit-how-to-comment-on-social-media/\">Rebecca Solnit: How to Comment on Social Media ‹ Literary Hub\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://frontendmasters.com/blog/highlight-text-when-a-user-scrolls-down-to-that-piece-of-text/\">Highlight Text When a User Scrolls Down to That Piece of Text\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/ueberdosis/tiptap/issues/2399\">Auto complete plugin? · Issue #2399 · ueberdosis/tiptap\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.reddit.com/r/Supabase/comments/10u96rr/comment/j7fecgk/?utm_source=share&#x26;utm_medium=mweb3x&#x26;utm_name=mweb3xcss&#x26;utm_term=1&#x26;utm_content=share_button\">A Yjs provider that uses Supabase Realtime for synchronization. Feedback / suggestions welcome. : r/Supabase\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/AlexDunmow/y-supabase\">AlexDunmow/y-supabase: Supabase Provider for Yjs\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/supabase/pg_crdt\">supabase/pg_crdt: POC CRDT support in Postgres\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/how-to-generate\">How to generate text: using different decoding methods for language generation with Transformers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/Thomson_Viper_FilmStream_Camera\">Thomson Viper FilmStream Camera - Wikipedia\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://hamel.dev/blog/posts/prompt/\">Fuck You, Show Me The Prompt.\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":402,"imagePaths":403,"frontmatter":404},[],[],{"title":393,"slug":390,"description":394,"pubDate":395},"2024/links-january",{"id":405,"data":407,"body":412,"filePath":413,"assetImports":414,"digest":416,"rendered":417},{"title":408,"description":312,"pubDate":409,"heroAlt":410,"cover":411},"Links, January 2024","Jan 31 2024","A skateboarding dog but make it cooler. Dalle-3 + SAM + Grounding DINO + SDXL Inpainting","__ASTRO_IMAGE_../../../assets/skate-dawg.png","Ok, I have been bad at this so far. It's already nearly the halfway point of February and I still haven't posted this (thank god for back-dating). But I have an excuse! Since mid-December I've shifted gears into a new round of company-building at SHV and have been feverishly building prototypes to help us \"see around the corner\" as it were.\n\nHere's what I got.\n## AI\n\n- [Run local models with pinokio.computer](https://docs.pinokio.computer/) &middot; good idea, great execution. I've been writing lots of python over the last 2 months and recently compared working with python dependencies is like eating off of the floor. Pinokio makes running gradio demos for popular models much easier than wading through the swamp of pyenv, venv, conda, torch and everything else.\n\t- [mirror/app.py at main · cocktailpeanut/mirror](https://github.com/cocktailpeanut/mirror/blob/main/app.py#L45-L153)\n- [PhyscalX/gradio-image-prompter](https://github.com/PhyscalX/gradio-image-prompter) &middot; Gradio has become impossible to ignore, but it is still too difficult to extend. In some ways, that's not the point, but as a frontend leaning developer it has a lot of idiosyncrasies that cannot be changed, merely tolerated. Seeing high quality components in the wild is encouraging and makes me hopeful for the future.\n- [Repl.it Friction Log](https://bensu.notion.site/Repl-it-137e3120605245698e6a414a5d7dd4c4) &middot; Adding AI assistance is very challenging. I've had an on/off relationship with Replit over the past year, most recently using it to create [Frasier Bingo](https://frasier-bingo.replit.app/) on my iPad, where I struggled to find their AI features and got little use out of them when I did. I think desktop web is better, but if I'm on a real computer then I have no reason to use Replit.\n- [Okapi BM25 - Wikipedia](https://en.m.wikipedia.org/wiki/Okapi_BM25) &middot; hey more AI searchy things to learn about.\n- [Paper page - LLM in a flash: Efficient Large Language Model Inference with Limited Memory](https://huggingface.co/papers/2312.11514)\n- [[2310.20360] Mathematical Introduction to Deep Learning: Methods, Implementations, and Theory](https://arxiv.org/abs/2310.20360)\n\t- [How I’m (re)learning math as an adult - Gabriel Mays](https://gmays.com/how-im-relearning-math-as-an-adult/)\n\t- These are on a theme that's dear to me: learning math as an adult outside of academic contexts. My history with math is troubled, and I've learned only-what-I-need-to in my professional life to get by, and, while I can clearly handle multi-dimensional reasoning, I long for the intuitive knowledge of even the basics of linear algebra and calculus that some of my colleagues over the years have possessed. That said, I've been extremely utilitarian in my approach and only have learned precisely what's need to get by as a developer. The second link here is good inspiration for taking a more measured and serious approach. There's always more to learn!\n- [2023 reflection: on conviction and building 20+ AI prototypes](https://whichlight.substack.com/p/2023-reflection-on-conviction-and)\n\t- Kawan's work and the energy he brings is very inspiring. \n- [Temporal Scene Generation with Stable Diffusion](https://huggingface.co/blog/Bilal326/stable-diffusion-project) &middot; The more I work with generative AI, the more convinced I am that my hunch that there was much deeper complexity below the surface of the iceberg than above.\n\n\n## Front End\n\n- [Tailwind css shine effect](https://www.julienthibeaut.xyz/blog/create-shine-effect-on-card-with-tailwind-css)\n\t- [Click Spark](https://ryanmulligan.dev/blog/click-spark/)\n\t- [Border gradient CodePen by Dennis Brotzky](https://codepen.io/brotzky/pen/JjzrzQm)\n\t- &middot; these are cheesy and perhaps overdone but I still like little effects like this. I don't have any muscle-memory for the technique so I've found myself on this page more than once. Bookmarking.\n- [5 CSS snippets every front-end developer should know in 2024](https://web.dev/articles/5-css-snippets-every-front-end-developer-should-know-in-2024) &middot; lots of cleverness to be done with `:has()` now that \"you can finally use it.\" Same for nesting.\n- [Understanding SVG Paths](https://www.nan.fyi/svg-paths) &middot; The arcana of SVG path syntax isn't difficult on its surface but I can never remember the details.\n- [2024: The Year of the Personal Website · Matthias Ott – User Experience Designer](https://matthiasott.com/notes/2024-the-year-of-the-personal-website) &middot; Yes.\n- [missing the point of webassembly](https://wingolog.org/archives/2024/01/08/missing-the-point-of-webassembly) &middot; I've been a spectator and fan of WASM since before it was a standard, but I largely agree with this take. There's an odd failure to materialize around what's possible in the new design space it opened up; it seems like the forces preventing anyone from authoring high quality web experiences cannot be countermanded (solely) by improving low-level primitives. But hey at least now we have a decent version of Photoshop that runs in the browser.\n* [Using alternative browser engines in the European Union - Support - Apple Developer](https://developer.apple.com/support/alternative-browser-engines/) &middot; Apple seems to be playing the malicious compliance card on this one, but it is promising that the door for alternate web runtimes on iPhones is being cracked open (in the worst possible big-government-y way, but still.) Let's hope that some version of this comes to the US someday.\n\n## Code\n\n* [Trade-offs between Different CRDTs](https://interjectedfuture.com/trade-offs-between-different-crdts/) &middot; like the WASM link above, I feel like CRDTs are a trend that's failed to accelerate as fast as I thought it would. Building for multiplayer is still as hard in 2024 as it was in 2021 or 2018. CRDTs are more widely available but the problem still has a \"minimum complexity\" to it that's hard to shake.\n* [Stitchy — Rust application // Lib.rs](https://lib.rs/crates/stitchy) &middot; stupid image tricks!\n* [ArchiveBox/ArchiveBox: Open source self-hosted web archiving. Takes URLs/browser history/bookmarks/Pocket/Pinboard/etc., saves HTML, JS, PDFs, media, and more...](https://github.com/ArchiveBox/ArchiveBox) &middot; I'm not a digital hoarder, but part of me deeply wants to save off a point-in-time copy of everything I link to or bookmark. The oddest quality of the web to come to terms with is how stunningly impermanent it is. The Internet Archive picks up some of the slack but there's more left on the table than there is archival bandwidth. A less busy and more-hoarderish version of myself could have fun with ArchiveBox.\n* [Portable EPUBs](https://willcrichton.net/notes/portable-epubs/) &middot; Last year I did a much less comprehensive dive into EPUB rendering and came up without any results. It just seemed like a mountain of work and the Apple Books handling of epubs was fine. Will Crichton made it considerably further and it pleases me greatly to learn more about this. I have a small hoard of epub files that I someday hope to be able to read and browser without having to suffer through Calibre (which is great software, but terrible on the eyes.)\n* [How Standard Ebooks serves millions of requests per month with a 2GB VPS; or, a paean to the classic web - Alex Cabal](https://alexcabal.com/posts/standard-ebooks-and-classic-web-tech) &middot; Speaking of accumulating digital ephemera, this post outlining the infrastructure at Standard Ebooks really hit the spot. I've downloaded a good chunk of their library over the years and now I know how they've been serving it. A very scrappy and well-run project.\n* [Hack The Box: Bookworm](https://blog.0x7d0.dev/writeups/hack-the-box/bookworm/) &middot; CTFs stress me out too much to be fun but man reading through a tour de force like this fills me with wonder.\n\n## Misc\n\n* [Mourning Google](https://www.tbray.org/ongoing/When/202x/2024/01/15/Google-2024)\n* [APOD: 2024 January 20 - Falcon Heavy Boostback Burn](https://apod.nasa.gov/apod/ap240120.html)\n* [The One with Christopher Nolan](https://johnaugust.com/2023/the-one-with-christopher-nolan)\n- [Unicode Fraction Creator](https://lights0123.com/fractions/) &middot; The web is so, so good for single use tools it's ridiculous. Sometimes you just need a fraction! Like when I wanted to specify my preferred hat size, 7⅞.","src/content/writing/2024/links-january.md",[415],"../../../assets/skate-dawg.png","941bd74dbd81e170",{"html":418,"metadata":419},"\u003Cp>Ok, I have been bad at this so far. It’s already nearly the halfway point of February and I still haven’t posted this (thank god for back-dating). But I have an excuse! Since mid-December I’ve shifted gears into a new round of company-building at SHV and have been feverishly building prototypes to help us “see around the corner” as it were.\u003C/p>\n\u003Cp>Here’s what I got.\u003C/p>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://docs.pinokio.computer/\">Run local models with pinokio.computer\u003C/a> · good idea, great execution. I’ve been writing lots of python over the last 2 months and recently compared working with python dependencies is like eating off of the floor. Pinokio makes running gradio demos for popular models much easier than wading through the swamp of pyenv, venv, conda, torch and everything else.\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/cocktailpeanut/mirror/blob/main/app.py#L45-L153\">mirror/app.py at main · cocktailpeanut/mirror\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/PhyscalX/gradio-image-prompter\">PhyscalX/gradio-image-prompter\u003C/a> · Gradio has become impossible to ignore, but it is still too difficult to extend. In some ways, that’s not the point, but as a frontend leaning developer it has a lot of idiosyncrasies that cannot be changed, merely tolerated. Seeing high quality components in the wild is encouraging and makes me hopeful for the future.\u003C/li>\n\u003Cli>\u003Ca href=\"https://bensu.notion.site/Repl-it-137e3120605245698e6a414a5d7dd4c4\">Repl.it Friction Log\u003C/a> · Adding AI assistance is very challenging. I’ve had an on/off relationship with Replit over the past year, most recently using it to create \u003Ca href=\"https://frasier-bingo.replit.app/\">Frasier Bingo\u003C/a> on my iPad, where I struggled to find their AI features and got little use out of them when I did. I think desktop web is better, but if I’m on a real computer then I have no reason to use Replit.\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/Okapi_BM25\">Okapi BM25 - Wikipedia\u003C/a> · hey more AI searchy things to learn about.\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/papers/2312.11514\">Paper page - LLM in a flash: Efficient Large Language Model Inference with Limited Memory\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://arxiv.org/abs/2310.20360\">[2310.20360] Mathematical Introduction to Deep Learning: Methods, Implementations, and Theory\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://gmays.com/how-im-relearning-math-as-an-adult/\">How I’m (re)learning math as an adult - Gabriel Mays\u003C/a>\u003C/li>\n\u003Cli>These are on a theme that’s dear to me: learning math as an adult outside of academic contexts. My history with math is troubled, and I’ve learned only-what-I-need-to in my professional life to get by, and, while I can clearly handle multi-dimensional reasoning, I long for the intuitive knowledge of even the basics of linear algebra and calculus that some of my colleagues over the years have possessed. That said, I’ve been extremely utilitarian in my approach and only have learned precisely what’s need to get by as a developer. The second link here is good inspiration for taking a more measured and serious approach. There’s always more to learn!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://whichlight.substack.com/p/2023-reflection-on-conviction-and\">2023 reflection: on conviction and building 20+ AI prototypes\u003C/a>\n\u003Cul>\n\u003Cli>Kawan’s work and the energy he brings is very inspiring.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/Bilal326/stable-diffusion-project\">Temporal Scene Generation with Stable Diffusion\u003C/a> · The more I work with generative AI, the more convinced I am that my hunch that there was much deeper complexity below the surface of the iceberg than above.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"front-end\">Front End\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.julienthibeaut.xyz/blog/create-shine-effect-on-card-with-tailwind-css\">Tailwind css shine effect\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://ryanmulligan.dev/blog/click-spark/\">Click Spark\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://codepen.io/brotzky/pen/JjzrzQm\">Border gradient CodePen by Dennis Brotzky\u003C/a>\u003C/li>\n\u003Cli>· these are cheesy and perhaps overdone but I still like little effects like this. I don’t have any muscle-memory for the technique so I’ve found myself on this page more than once. Bookmarking.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://web.dev/articles/5-css-snippets-every-front-end-developer-should-know-in-2024\">5 CSS snippets every front-end developer should know in 2024\u003C/a> · lots of cleverness to be done with \u003Ccode>:has()\u003C/code> now that “you can finally use it.” Same for nesting.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.nan.fyi/svg-paths\">Understanding SVG Paths\u003C/a> · The arcana of SVG path syntax isn’t difficult on its surface but I can never remember the details.\u003C/li>\n\u003Cli>\u003Ca href=\"https://matthiasott.com/notes/2024-the-year-of-the-personal-website\">2024: The Year of the Personal Website · Matthias Ott – User Experience Designer\u003C/a> · Yes.\u003C/li>\n\u003Cli>\u003Ca href=\"https://wingolog.org/archives/2024/01/08/missing-the-point-of-webassembly\">missing the point of webassembly\u003C/a> · I’ve been a spectator and fan of WASM since before it was a standard, but I largely agree with this take. There’s an odd failure to materialize around what’s possible in the new design space it opened up; it seems like the forces preventing anyone from authoring high quality web experiences cannot be countermanded (solely) by improving low-level primitives. But hey at least now we have a decent version of Photoshop that runs in the browser.\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://developer.apple.com/support/alternative-browser-engines/\">Using alternative browser engines in the European Union - Support - Apple Developer\u003C/a> · Apple seems to be playing the malicious compliance card on this one, but it is promising that the door for alternate web runtimes on iPhones is being cracked open (in the worst possible big-government-y way, but still.) Let’s hope that some version of this comes to the US someday.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"code\">Code\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://interjectedfuture.com/trade-offs-between-different-crdts/\">Trade-offs between Different CRDTs\u003C/a> · like the WASM link above, I feel like CRDTs are a trend that’s failed to accelerate as fast as I thought it would. Building for multiplayer is still as hard in 2024 as it was in 2021 or 2018. CRDTs are more widely available but the problem still has a “minimum complexity” to it that’s hard to shake.\u003C/li>\n\u003Cli>\u003Ca href=\"https://lib.rs/crates/stitchy\">Stitchy — Rust application // Lib.rs\u003C/a> · stupid image tricks!\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/ArchiveBox/ArchiveBox\">ArchiveBox/ArchiveBox: Open source self-hosted web archiving. Takes URLs/browser history/bookmarks/Pocket/Pinboard/etc., saves HTML, JS, PDFs, media, and more…\u003C/a> · I’m not a digital hoarder, but part of me deeply wants to save off a point-in-time copy of everything I link to or bookmark. The oddest quality of the web to come to terms with is how stunningly impermanent it is. The Internet Archive picks up some of the slack but there’s more left on the table than there is archival bandwidth. A less busy and more-hoarderish version of myself could have fun with ArchiveBox.\u003C/li>\n\u003Cli>\u003Ca href=\"https://willcrichton.net/notes/portable-epubs/\">Portable EPUBs\u003C/a> · Last year I did a much less comprehensive dive into EPUB rendering and came up without any results. It just seemed like a mountain of work and the Apple Books handling of epubs was fine. Will Crichton made it considerably further and it pleases me greatly to learn more about this. I have a small hoard of epub files that I someday hope to be able to read and browser without having to suffer through Calibre (which is great software, but terrible on the eyes.)\u003C/li>\n\u003Cli>\u003Ca href=\"https://alexcabal.com/posts/standard-ebooks-and-classic-web-tech\">How Standard Ebooks serves millions of requests per month with a 2GB VPS; or, a paean to the classic web - Alex Cabal\u003C/a> · Speaking of accumulating digital ephemera, this post outlining the infrastructure at Standard Ebooks really hit the spot. I’ve downloaded a good chunk of their library over the years and now I know how they’ve been serving it. A very scrappy and well-run project.\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.0x7d0.dev/writeups/hack-the-box/bookworm/\">Hack The Box: Bookworm\u003C/a> · CTFs stress me out too much to be fun but man reading through a tour de force like this fills me with wonder.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.tbray.org/ongoing/When/202x/2024/01/15/Google-2024\">Mourning Google\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://apod.nasa.gov/apod/ap240120.html\">APOD: 2024 January 20 - Falcon Heavy Boostback Burn\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://johnaugust.com/2023/the-one-with-christopher-nolan\">The One with Christopher Nolan\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://lights0123.com/fractions/\">Unicode Fraction Creator\u003C/a> · The web is so, so good for single use tools it’s ridiculous. Sometimes you just need a fraction! Like when I wanted to specify my preferred hat size, 7⅞.\u003C/li>\n\u003C/ul>",{"headings":420,"imagePaths":431,"frontmatter":432},[421,422,425,428],{"depth":27,"slug":301,"text":302},{"depth":27,"slug":423,"text":424},"front-end","Front End",{"depth":27,"slug":426,"text":427},"code","Code",{"depth":27,"slug":429,"text":430},"misc","Misc",[],{"title":408,"slug":405,"description":312,"cover":415,"heroAlt":410,"pubDate":409},"protect-your-history.html",{"id":433,"data":435,"body":439,"filePath":440,"digest":441,"rendered":442},{"title":436,"description":437,"pubDate":438},"Protect your DNS history with DNSCrypt","DNSCrypt is a great way to ensure that your browsing history isn't being spyed on. Learn how to set up DNSCrypt to keep your DNS traffic from prying eyes.","Apr 17 2017","## Protect your DNS history with DNSCrypt\n\nIn light of the recent rollback(s) of regulations meant to restrict how ISP's share and sell the data they gather about you, I started wondering what I could do to make my internet traffic a bit harder for them to monetize. How would I prevent my ISP from selling details about my shopping habits and personal preferences to the highest bidder?\n\n\u003Ci>[Or skip straight to how to do it.](#first-steps)\u003C/i>\n\n### Why DNS and why should you care?\n\nStandards for encrypting web traffic have become widely adopted since their introduction in the late 90s. It's not my first day, so I knew that content sent over HTTPS would be difficult (but not impossible) for a third party to do much with, and I already use HTTPS-everywhere and Brave to help keep things on the up-and-up. Unfortunately, even exclusively using HTTPS doesn't mean that 100% of your traffic is encrypted and secure.\n\nA crucially important part of how your computer or phone loads a website is completely unencrypted in practice. The Domain Name System, or DNS, is how your web browser knows how to find the domain \"google.com\" when you type `https://www.google.com` into your browser's address bar, and DNS isn't normally encrypted. Anyone who handles the traffic can take a peek if they're so inclined.\n\n> Ability plus incentive makes for easy temptation. DNS is an easy target if your ISP wanted to profit from a complete list of the websites you visited.\n\nEven worse, an ISP could resolve a DNS entry for a different website altogether or send you to a \"toll booth\" captive portal for whatever nefarious reasons they could think of.\n\nWhich means that even if I took every reasonable precaution and always made sure `https` was in the URL when buying John Tesh cd's on Amazon, watching John Tesh videos on Youtube, or posting updates to my John Tesh fanzine, Comcast would still be able to see the URLs of the pages and sell them to anyone who cared. That is unacceptable. My secret love of John Tesh is too precious for a greedy corporate entity to harvest for profits.\n\n\u003Ca href=\"../img/the-cyber.jpg\">\n  \u003Cimg src=\"/img/the-cyber.jpg\"\n    class=\"w-60-l w-50-m w-100 ml3-ns fr-ns mt1 mb2 pa1 br1 ba b--rainbows\" />\n\u003C/a>\n\nGood thing for me, a bunch of smart folks who are well versed in \"the cyber\" had already thought this one through enough to write RFC standards for the DNS protocol that can make it much harder for a third party to see the paper trail of domains and URLs left by a furious session of John Tesh related browsing. Even better, these standards have been implemented with open source and are available to use for free, without too much overhead.\n\nUnfortunately, encrypting your DNS isn't yet as ubiquitous or widely support as HTTPS, so there are still a few hoops to jump through if you want to start obfuscating this aspect of your web traffic.\n\nIt's also important to note that encrypting your DNS isn't a silver bullet with regards to online privacy. True privacy is a fleeting concept, or at least one that's impossible to make sane guarantees about. Like any encryption technology, it's only as strong as the implementation being used, and in recent years those have been known to be compromised with some degree of regularity. Even when you're encrypting your communications doesn't mean you should automatically trust the person on the other end of the line. Not to sound paranoid, but be careful about who you place blind trust in and always look before you leap.\n\n### Enter DNSCrypt\n\nDNSCrypt is a great collection of software tools that let you get up and running with encrypted DNS really quickly. Don't take my word of it. Head over to dnscrypt.org for comprehensive info about what it is and all the ways you can use it.\n\n> dnscrypt + httpseverywhere is 9/10s of a vpn imo\n\n\u003Cp class=\"w-100 tr\">\n— \u003Ca href=\"https://twitter.com/SlexAxton/status/853715217058025475\">Alex Sexton, notable person on the internet\u003C/a>\n\u003C/p>\n\nDNSCrypt is a way to run an encrypted dns server and clients for every platform to connect with it. There are already plenty of servers around the world that you can connect to out-of-the-box with a gui clients, so getting up and running is super easy. And there are plenty of command line tools, too. Everything is open source and the community seems active, with multiple projects to choose from for most layers of tooling.\n\nThe client apps work by changing your network settings to use a dns server running DNSCrypt, and lets you quickly switch back and forth between your previous \"normal\" dns and an encrypted configuration. It does this by running a local dns server on your computer, which handles one end of the encryption and decryption, with the public server you're connecting with on the other end. Since all the traffic is encrypted on your computer before it's sent to the server, an intermediary like your ISP can't see the domain being requested.\n\n### What's the catch? Why isn't this everywhere already?\n\nThe catch is that ultimately your dns request will be served from an unencrypted (but authenticated) channel because the global network of DNS servers does not implement the DNSCrypt protocol.\n\n\u003Ca id=\"first-steps\">\u003C/a>\n\n### First steps\n\nBetter instructions here: https://dnscrypt.org/\n\nInstall the [dnscrypt-client](https://github.com/alterstep/dnscrypt-osxclient) and connect to one of the public nodes. I chose https://nxt.ist. You can \"trust\" these because they issue keypairs or something(?) but, caveat emptor.\n\nBut roll with the thick client because it's convenient and you'll get to see what you're in for... which is pretty boring if you're not running `dig` or `nslookup` all the time to see where your DNS entries are coming from. But then again, it's pretty boring. But at least they're encrypted?\n\n### Paranoid mode: Roll your own DNSCrypt server\n\nI chose a droplet that came with Ubuntu 16.04 and Docker 1.17 pre-installed. Created a new keypair (always, always create a new keypair) and give it a good name, a static IPv4 address, and an IPv6 address if you hate yourself (or want to learn about docker's nightmare factory networking layer).\n\nSSH to the server and fire up the [DNSCrypt Server Docker Image](https://github.com/jedisct1/dnscrypt-server-docker) with the instructions from the README:\n\n```bash\ndocker run --name=dnscrypt-server -p 443:443/udp -p 443:443/tcp \\\n    jedisct1/unbound-dnscrypt-server init -N example.com\n\ndocker start dnscrypt\n```\n\nThe first command returns a public key. You'll need this. It's also in your docker logs if you forget it `docker logs dnscrypt-server | head`.\n\nNow you have a server running, note the IP and setup a client to connect to it.\n\n### Connecting clients with dnscrypt-proxy\n\nI tried 2 ways of connecting devices to my new dnscrypt server from my local network.\n\n\u003Cb>1 - Run the proxy client everywhere\u003C/b>\n\nRun dnscrypt-proxy on every device where you want encrypted dns, which makes a local dns server which sends encrypted requests to your server. This is the \"safest\" way of doing things because you're not trusting anyone else to do the encryption for you, making it a bit more difficult for someone to spy on your dns traffic.\n\nInstall it for mac with homebrew: `brew install dnscrypt-proxy`\n\nThen connect to your server using the IP and public key:\n\n```bash\nsudo dnscrypt-proxy --provider-key=YOUR_PUBLIC_KEY \\\n  --resolver-address=YOUR_IPv4_ADDRESS:443 \\\n  --provider-name=2.dnscrypt-cert.example.com\n```\n\nNow edit your DNS settings to point at your IP. This is actually really convenient if you're already using dnscrypt-client: in the \"Advanced\" tab, add your IP to the field labeled \"When not using DNSCrypt, use the following static DNS servers\". Now, when you turn off the DNSCrypt thick client, it will try to use the proxy you started from the command line.\n\nIt's a pain in the ass that you can't point to your own server on the client. There, I said it. Pull requests welcome, I guess?\n\n\u003Cb>2 - Run it from one place on your local network\u003C/b>\n\nRun dnscrypt-proxy somewhere on your local network, and tell devices to use that as their source of truth for dns. If you trust your local network (which, depending on how many IOT devices you have running or you don't control router/modem settings, might not be a good idea,) then you can avoid extra process overhead and it works for phones and tablets.\n\nBasically the same steps as above, but make sure that you start the dnscrypt-proxy client with `--local-address=0.0.0.0` so that it broadcasts to your network.\n\nAnd, uh, make sure your router doesn't liberally port forward or you'll live to regret it.\n\nI did this on my ubuntu media server and I ran into dnsmasq issues, because ubuntu is stupid and runs a dnsmasq process as part of it's network stack, but it's not the \"real\" dnsmasq so you can't configure it to broadcast (go figure).\n\nTo get everything working without just nuking the unconfigurable dnsmasq process, I had to run dnscrypt-proxy on another port, `127.0.0.1:40` and then install the \"real\" dnsmasq, `sudo apt-get install dnsmasq` and tell it to use dnscrypt-proxy as a nameserver. All this is from here, conveniently: https://wiki.debian.org/HowTo/dnsmasq\n\n```ini\nno-resolv\nserver 127.0.0.1\n```\n\nThen I switched all the dns settings on my phones and computers to point at the local ip of my media server for DNS, falling back to google's `8.8.8.8` and `8.8.4.4` to avoid being inconveninced if the process dies.\n\n### Conclusion\n\n\u003Cdiv class=\"fr-ns w-50-ns w-100 ml3-ns tc tl-ns bonzi-buddy\">\n  \u003Ca href=\"https://en.wikipedia.org/wiki/BonziBuddy\"\n    target=\"__blank\" class=\"none\">\n    \u003Cimg src=\"/img/bonzi-buddy.gif\" class=\"pa1\" />\n  \u003C/a>\n\u003C/div>\n\nEncrypting DNS is boring, but satisfying.\n\nHappy Hacking 🤓\n\n\u003Cdiv class=\"cf\">\u003C/div>","src/content/writing/protect-your-history.html.md","0850805ceca544ed",{"html":443,"metadata":444},"\u003Ch2 id=\"protect-your-dns-history-with-dnscrypt\">Protect your DNS history with DNSCrypt\u003C/h2>\n\u003Cp>In light of the recent rollback(s) of regulations meant to restrict how ISP’s share and sell the data they gather about you, I started wondering what I could do to make my internet traffic a bit harder for them to monetize. How would I prevent my ISP from selling details about my shopping habits and personal preferences to the highest bidder?\u003C/p>\n\u003Cp>\u003Ci>\u003Ca href=\"#first-steps\">Or skip straight to how to do it.\u003C/a>\u003C/i>\u003C/p>\n\u003Ch3 id=\"why-dns-and-why-should-you-care\">Why DNS and why should you care?\u003C/h3>\n\u003Cp>Standards for encrypting web traffic have become widely adopted since their introduction in the late 90s. It’s not my first day, so I knew that content sent over HTTPS would be difficult (but not impossible) for a third party to do much with, and I already use HTTPS-everywhere and Brave to help keep things on the up-and-up. Unfortunately, even exclusively using HTTPS doesn’t mean that 100% of your traffic is encrypted and secure.\u003C/p>\n\u003Cp>A crucially important part of how your computer or phone loads a website is completely unencrypted in practice. The Domain Name System, or DNS, is how your web browser knows how to find the domain “google.com” when you type \u003Ccode>https://www.google.com\u003C/code> into your browser’s address bar, and DNS isn’t normally encrypted. Anyone who handles the traffic can take a peek if they’re so inclined.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Ability plus incentive makes for easy temptation. DNS is an easy target if your ISP wanted to profit from a complete list of the websites you visited.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Even worse, an ISP could resolve a DNS entry for a different website altogether or send you to a “toll booth” captive portal for whatever nefarious reasons they could think of.\u003C/p>\n\u003Cp>Which means that even if I took every reasonable precaution and always made sure \u003Ccode>https\u003C/code> was in the URL when buying John Tesh cd’s on Amazon, watching John Tesh videos on Youtube, or posting updates to my John Tesh fanzine, Comcast would still be able to see the URLs of the pages and sell them to anyone who cared. That is unacceptable. My secret love of John Tesh is too precious for a greedy corporate entity to harvest for profits.\u003C/p>\n\u003Ca href=\"../img/the-cyber.jpg\">\n  \u003Cimg src=\"/img/the-cyber.jpg\" class=\"w-60-l w-50-m w-100 ml3-ns fr-ns mt1 mb2 pa1 br1 ba b--rainbows\">\n\u003C/a>\n\u003Cp>Good thing for me, a bunch of smart folks who are well versed in “the cyber” had already thought this one through enough to write RFC standards for the DNS protocol that can make it much harder for a third party to see the paper trail of domains and URLs left by a furious session of John Tesh related browsing. Even better, these standards have been implemented with open source and are available to use for free, without too much overhead.\u003C/p>\n\u003Cp>Unfortunately, encrypting your DNS isn’t yet as ubiquitous or widely support as HTTPS, so there are still a few hoops to jump through if you want to start obfuscating this aspect of your web traffic.\u003C/p>\n\u003Cp>It’s also important to note that encrypting your DNS isn’t a silver bullet with regards to online privacy. True privacy is a fleeting concept, or at least one that’s impossible to make sane guarantees about. Like any encryption technology, it’s only as strong as the implementation being used, and in recent years those have been known to be compromised with some degree of regularity. Even when you’re encrypting your communications doesn’t mean you should automatically trust the person on the other end of the line. Not to sound paranoid, but be careful about who you place blind trust in and always look before you leap.\u003C/p>\n\u003Ch3 id=\"enter-dnscrypt\">Enter DNSCrypt\u003C/h3>\n\u003Cp>DNSCrypt is a great collection of software tools that let you get up and running with encrypted DNS really quickly. Don’t take my word of it. Head over to dnscrypt.org for comprehensive info about what it is and all the ways you can use it.\u003C/p>\n\u003Cblockquote>\n\u003Cp>dnscrypt + httpseverywhere is 9/10s of a vpn imo\u003C/p>\n\u003C/blockquote>\n\u003Cp class=\"w-100 tr\">\n— \u003Ca href=\"https://twitter.com/SlexAxton/status/853715217058025475\">Alex Sexton, notable person on the internet\u003C/a>\n\u003C/p>\n\u003Cp>DNSCrypt is a way to run an encrypted dns server and clients for every platform to connect with it. There are already plenty of servers around the world that you can connect to out-of-the-box with a gui clients, so getting up and running is super easy. And there are plenty of command line tools, too. Everything is open source and the community seems active, with multiple projects to choose from for most layers of tooling.\u003C/p>\n\u003Cp>The client apps work by changing your network settings to use a dns server running DNSCrypt, and lets you quickly switch back and forth between your previous “normal” dns and an encrypted configuration. It does this by running a local dns server on your computer, which handles one end of the encryption and decryption, with the public server you’re connecting with on the other end. Since all the traffic is encrypted on your computer before it’s sent to the server, an intermediary like your ISP can’t see the domain being requested.\u003C/p>\n\u003Ch3 id=\"whats-the-catch-why-isnt-this-everywhere-already\">What’s the catch? Why isn’t this everywhere already?\u003C/h3>\n\u003Cp>The catch is that ultimately your dns request will be served from an unencrypted (but authenticated) channel because the global network of DNS servers does not implement the DNSCrypt protocol.\u003C/p>\n\u003Cp>\u003Ca id=\"first-steps\">\u003C/a>\u003C/p>\n\u003Ch3 id=\"first-steps\">First steps\u003C/h3>\n\u003Cp>Better instructions here: \u003Ca href=\"https://dnscrypt.org/\">https://dnscrypt.org/\u003C/a>\u003C/p>\n\u003Cp>Install the \u003Ca href=\"https://github.com/alterstep/dnscrypt-osxclient\">dnscrypt-client\u003C/a> and connect to one of the public nodes. I chose \u003Ca href=\"https://nxt.ist\">https://nxt.ist\u003C/a>. You can “trust” these because they issue keypairs or something(?) but, caveat emptor.\u003C/p>\n\u003Cp>But roll with the thick client because it’s convenient and you’ll get to see what you’re in for… which is pretty boring if you’re not running \u003Ccode>dig\u003C/code> or \u003Ccode>nslookup\u003C/code> all the time to see where your DNS entries are coming from. But then again, it’s pretty boring. But at least they’re encrypted?\u003C/p>\n\u003Ch3 id=\"paranoid-mode-roll-your-own-dnscrypt-server\">Paranoid mode: Roll your own DNSCrypt server\u003C/h3>\n\u003Cp>I chose a droplet that came with Ubuntu 16.04 and Docker 1.17 pre-installed. Created a new keypair (always, always create a new keypair) and give it a good name, a static IPv4 address, and an IPv6 address if you hate yourself (or want to learn about docker’s nightmare factory networking layer).\u003C/p>\n\u003Cp>SSH to the server and fire up the \u003Ca href=\"https://github.com/jedisct1/dnscrypt-server-docker\">DNSCrypt Server Docker Image\u003C/a> with the instructions from the README:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">docker\u003C/span>\u003Cspan style=\"color:#98C379\"> run\u003C/span>\u003Cspan style=\"color:#D19A66\"> --name=dnscrypt-server\u003C/span>\u003Cspan style=\"color:#D19A66\"> -p\u003C/span>\u003Cspan style=\"color:#98C379\"> 443:443/udp\u003C/span>\u003Cspan style=\"color:#D19A66\"> -p\u003C/span>\u003Cspan style=\"color:#98C379\"> 443:443/tcp\u003C/span>\u003Cspan style=\"color:#56B6C2\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">    jedisct1/unbound-dnscrypt-server\u003C/span>\u003Cspan style=\"color:#98C379\"> init\u003C/span>\u003Cspan style=\"color:#D19A66\"> -N\u003C/span>\u003Cspan style=\"color:#98C379\"> example.com\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">docker\u003C/span>\u003Cspan style=\"color:#98C379\"> start\u003C/span>\u003Cspan style=\"color:#98C379\"> dnscrypt\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The first command returns a public key. You’ll need this. It’s also in your docker logs if you forget it \u003Ccode>docker logs dnscrypt-server | head\u003C/code>.\u003C/p>\n\u003Cp>Now you have a server running, note the IP and setup a client to connect to it.\u003C/p>\n\u003Ch3 id=\"connecting-clients-with-dnscrypt-proxy\">Connecting clients with dnscrypt-proxy\u003C/h3>\n\u003Cp>I tried 2 ways of connecting devices to my new dnscrypt server from my local network.\u003C/p>\n\u003Cp>\u003Cb>1 - Run the proxy client everywhere\u003C/b>\u003C/p>\n\u003Cp>Run dnscrypt-proxy on every device where you want encrypted dns, which makes a local dns server which sends encrypted requests to your server. This is the “safest” way of doing things because you’re not trusting anyone else to do the encryption for you, making it a bit more difficult for someone to spy on your dns traffic.\u003C/p>\n\u003Cp>Install it for mac with homebrew: \u003Ccode>brew install dnscrypt-proxy\u003C/code>\u003C/p>\n\u003Cp>Then connect to your server using the IP and public key:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">sudo\u003C/span>\u003Cspan style=\"color:#98C379\"> dnscrypt-proxy\u003C/span>\u003Cspan style=\"color:#D19A66\"> --provider-key=YOUR_PUBLIC_KEY\u003C/span>\u003Cspan style=\"color:#56B6C2\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">  --resolver-address=YOUR_IPv4_ADDRESS:443\u003C/span>\u003Cspan style=\"color:#56B6C2\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">  --provider-name=2.dnscrypt-cert.example.com\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Now edit your DNS settings to point at your IP. This is actually really convenient if you’re already using dnscrypt-client: in the “Advanced” tab, add your IP to the field labeled “When not using DNSCrypt, use the following static DNS servers”. Now, when you turn off the DNSCrypt thick client, it will try to use the proxy you started from the command line.\u003C/p>\n\u003Cp>It’s a pain in the ass that you can’t point to your own server on the client. There, I said it. Pull requests welcome, I guess?\u003C/p>\n\u003Cp>\u003Cb>2 - Run it from one place on your local network\u003C/b>\u003C/p>\n\u003Cp>Run dnscrypt-proxy somewhere on your local network, and tell devices to use that as their source of truth for dns. If you trust your local network (which, depending on how many IOT devices you have running or you don’t control router/modem settings, might not be a good idea,) then you can avoid extra process overhead and it works for phones and tablets.\u003C/p>\n\u003Cp>Basically the same steps as above, but make sure that you start the dnscrypt-proxy client with \u003Ccode>--local-address=0.0.0.0\u003C/code> so that it broadcasts to your network.\u003C/p>\n\u003Cp>And, uh, make sure your router doesn’t liberally port forward or you’ll live to regret it.\u003C/p>\n\u003Cp>I did this on my ubuntu media server and I ran into dnsmasq issues, because ubuntu is stupid and runs a dnsmasq process as part of it’s network stack, but it’s not the “real” dnsmasq so you can’t configure it to broadcast (go figure).\u003C/p>\n\u003Cp>To get everything working without just nuking the unconfigurable dnsmasq process, I had to run dnscrypt-proxy on another port, \u003Ccode>127.0.0.1:40\u003C/code> and then install the “real” dnsmasq, \u003Ccode>sudo apt-get install dnsmasq\u003C/code> and tell it to use dnscrypt-proxy as a nameserver. All this is from here, conveniently: \u003Ca href=\"https://wiki.debian.org/HowTo/dnsmasq\">https://wiki.debian.org/HowTo/dnsmasq\u003C/a>\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"ini\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">no-resolv\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">server 127.0.0.1\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Then I switched all the dns settings on my phones and computers to point at the local ip of my media server for DNS, falling back to google’s \u003Ccode>8.8.8.8\u003C/code> and \u003Ccode>8.8.4.4\u003C/code> to avoid being inconveninced if the process dies.\u003C/p>\n\u003Ch3 id=\"conclusion\">Conclusion\u003C/h3>\n\u003Cdiv class=\"fr-ns w-50-ns w-100 ml3-ns tc tl-ns bonzi-buddy\">\n  \u003Ca href=\"https://en.wikipedia.org/wiki/BonziBuddy\" target=\"__blank\" class=\"none\">\n    \u003Cimg src=\"/img/bonzi-buddy.gif\" class=\"pa1\">\n  \u003C/a>\n\u003C/div>\n\u003Cp>Encrypting DNS is boring, but satisfying.\u003C/p>\n\u003Cp>Happy Hacking 🤓\u003C/p>\n\u003Cdiv class=\"cf\">\u003C/div>",{"headings":445,"imagePaths":469,"frontmatter":470},[446,448,451,454,457,460,463,466],{"depth":27,"slug":447,"text":436},"protect-your-dns-history-with-dnscrypt",{"depth":79,"slug":449,"text":450},"why-dns-and-why-should-you-care","Why DNS and why should you care?",{"depth":79,"slug":452,"text":453},"enter-dnscrypt","Enter DNSCrypt",{"depth":79,"slug":455,"text":456},"whats-the-catch-why-isnt-this-everywhere-already","What’s the catch? Why isn’t this everywhere already?",{"depth":79,"slug":458,"text":459},"first-steps","First steps",{"depth":79,"slug":461,"text":462},"paranoid-mode-roll-your-own-dnscrypt-server","Paranoid mode: Roll your own DNSCrypt server",{"depth":79,"slug":464,"text":465},"connecting-clients-with-dnscrypt-proxy","Connecting clients with dnscrypt-proxy",{"depth":79,"slug":467,"text":468},"conclusion","Conclusion",[],{"title":436,"slug":433,"description":437,"pubDate":438},"2023/links-april-2023.html",{"id":471,"data":473,"body":479,"filePath":480,"assetImports":481,"digest":483,"rendered":484},{"title":474,"description":475,"pubDate":476,"heroAlt":477,"cover":478},"Links, April 2023","Free range tabs","Apr 30 2023","Landscape photo of big sur, ocean, night, light trails, moon,","__ASTRO_IMAGE_../../../assets/8f023992-44fa-4751-97fc-1c1ab0fd8691.png","Free range tabs edition. I was quite busy at the end of this month [running in Big Sur](/writing/big-sur-marathon-2023) so I only had a passing glance at the tab dump. Forgive me for not categorizing or writing any pithy summaries. Remember, all tabs are mortal!\n\n* [Talk: The Expanding Dark Forest and Generative AI](https://maggieappleton.com/forest-talk)\n* [The weird world of Windows file paths | Fileside](https://www.fileside.app/blog/2023-03-17_windows-file-paths/)\n* [The State of Serverless GPUs](https://www.inferless.com/serverless-gpu-market)\n* [How To Make Good Small Games](https://farawaytimes.blogspot.com/2023/02/how-to-make-good-small-games.html)\n* [Making a Linux home server sleep on idle and wake on demand — the simple way](https://dgross.ca/blog/linux-home-server-auto-sleep/)\n* [Load Balancing](https://samwho.dev/load-balancing/)\n* [yoavbls/pretty-ts-errors: 🔵 Make TypeScript errors prettier and human-readable in VSCode 🎀](https://github.com/yoavbls/pretty-ts-errors)\n* [New sandbox escape PoC exploit available for VM2 library, patch now](https://www.bleepingcomputer.com/news/security/new-sandbox-escape-poc-exploit-available-for-vm2-library-patch-now/)\n* [Building LLM applications for production](https://huyenchip.com/2023/04/11/llm-engineering.html)\n* [iSIM vs eSIM vs SIM: The constantly shrinking ways carriers ID your phone | Ars Technica](https://arstechnica.com/gadgets/2023/04/isim-vs-esim-vs-sim-the-constantly-shrinking-ways-carriers-id-your-phone/)\n* [Fermat's Library | The Education of a Computer annotated/explained version.](https://fermatslibrary.com/s/the-education-of-a-computer#email-newsletter)\n* [Herbie Hancock, Maiden Voyage](https://www.jarretthousenorth.com/2022/06/18/herbie-hancock-maiden-voyage/)\n* [Postgres: The Graph Database You Didn't Know You Had](https://www.dylanpaulus.com/posts/postgres-is-a-graph-database/)\n* [join - html energy](http://html.energy/join.html)\n* [Not even wrong: predicting tech — Benedict Evans](https://www.ben-evans.com/benedictevans/2020/5/16/not-even-wrong)\n* [Looking Back at Postgres](https://arxiv.org/pdf/1901.01973.pdf)\n* [Something Pretty Right: A History of Visual Basic | Retool](https://retool.com/visual-basic/)\n* [Semi-automating a Substack newsletter with an Observable notebook](https://simonwillison.net/2023/Apr/4/substack-observable/)\n* [Pessimism vs Optimism](https://justinjackson.ca/pessimistic)\n* [Cyberpunk 2077 - by Adrian Hon - Have You Played?](https://adrianhon.substack.com/p/cyberpunk-2077)\n* [Unpredictable Black Boxes are Terrible Interfaces](https://magrawala.substack.com/p/unpredictable-black-boxes-are-terrible)\n* [Malleable software in the age of LLMs](https://www.geoffreylitt.com/2023/03/25/llm-end-user-programming.html)","src/content/writing/2023/links-april-2023.html.md",[482],"../../../assets/8f023992-44fa-4751-97fc-1c1ab0fd8691.png","b7e7b52326366ea2",{"html":485,"metadata":486},"\u003Cp>Free range tabs edition. I was quite busy at the end of this month \u003Ca href=\"/writing/big-sur-marathon-2023\">running in Big Sur\u003C/a> so I only had a passing glance at the tab dump. Forgive me for not categorizing or writing any pithy summaries. Remember, all tabs are mortal!\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://maggieappleton.com/forest-talk\">Talk: The Expanding Dark Forest and Generative AI\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.fileside.app/blog/2023-03-17_windows-file-paths/\">The weird world of Windows file paths | Fileside\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.inferless.com/serverless-gpu-market\">The State of Serverless GPUs\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://farawaytimes.blogspot.com/2023/02/how-to-make-good-small-games.html\">How To Make Good Small Games\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://dgross.ca/blog/linux-home-server-auto-sleep/\">Making a Linux home server sleep on idle and wake on demand — the simple way\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://samwho.dev/load-balancing/\">Load Balancing\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/yoavbls/pretty-ts-errors\">yoavbls/pretty-ts-errors: 🔵 Make TypeScript errors prettier and human-readable in VSCode 🎀\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.bleepingcomputer.com/news/security/new-sandbox-escape-poc-exploit-available-for-vm2-library-patch-now/\">New sandbox escape PoC exploit available for VM2 library, patch now\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://huyenchip.com/2023/04/11/llm-engineering.html\">Building LLM applications for production\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://arstechnica.com/gadgets/2023/04/isim-vs-esim-vs-sim-the-constantly-shrinking-ways-carriers-id-your-phone/\">iSIM vs eSIM vs SIM: The constantly shrinking ways carriers ID your phone | Ars Technica\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://fermatslibrary.com/s/the-education-of-a-computer#email-newsletter\">Fermat’s Library | The Education of a Computer annotated/explained version.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.jarretthousenorth.com/2022/06/18/herbie-hancock-maiden-voyage/\">Herbie Hancock, Maiden Voyage\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.dylanpaulus.com/posts/postgres-is-a-graph-database/\">Postgres: The Graph Database You Didn’t Know You Had\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://html.energy/join.html\">join - html energy\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.ben-evans.com/benedictevans/2020/5/16/not-even-wrong\">Not even wrong: predicting tech — Benedict Evans\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://arxiv.org/pdf/1901.01973.pdf\">Looking Back at Postgres\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://retool.com/visual-basic/\">Something Pretty Right: A History of Visual Basic | Retool\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://simonwillison.net/2023/Apr/4/substack-observable/\">Semi-automating a Substack newsletter with an Observable notebook\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://justinjackson.ca/pessimistic\">Pessimism vs Optimism\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://adrianhon.substack.com/p/cyberpunk-2077\">Cyberpunk 2077 - by Adrian Hon - Have You Played?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://magrawala.substack.com/p/unpredictable-black-boxes-are-terrible\">Unpredictable Black Boxes are Terrible Interfaces\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.geoffreylitt.com/2023/03/25/llm-end-user-programming.html\">Malleable software in the age of LLMs\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":487,"imagePaths":488,"frontmatter":489},[],[],{"title":474,"slug":471,"description":475,"cover":482,"heroAlt":477,"pubDate":476},"2024/web-perf-blah-blah-blah",{"id":490,"data":492,"body":498,"filePath":499,"assetImports":500,"digest":502,"rendered":503},{"title":493,"description":494,"pubDate":495,"heroAlt":496,"cover":497},"Web Performance Blah Blah Blah","what I tell people about web performance in 2024","Nov 5 2024","gotta go real fast","__ASTRO_IMAGE_../../../assets/j2LPaGXU8DZj5i5vQReSc.jpeg","Recently an engineer I'm working with hit me up with a broad question about web performance:\n\n> I'm trying to see if I can make site loading times faster, do you have any good profiling tools besides the browser? \u003Cbr> -- Specifically I want to make frontpage as fast as possible \u003Cbr> I want to CDN cache the whole page (so I added a vercel header -- is that the best way to go about it?)\"\n\nThis is a very reasonable question. Everything should be as fast as possible, and you've got work to do until it is. Web performance has been a recurring theme topic in my career and I have some earned wisdom on the topic.\n\n### 1. Use tools to measure performance\n\ntldr, know what you're trying to measure and collect the right data.\n\n- The performance tab in Chrome dev tools is still the best tool for diagnosing and debugging performance issues.\n- Performance is not a single number.\n\t- Users will have slow devices, bad networks, memory pressure, etc. Assume the worst.\n\t- **Performance is a statistical distribution of response times across a population of users with different devices and networks.**\n\t- Remember that \"fast for me\" != \"fast for everyone\"\n\t\t- _BUT_\n\t\t- Making it fast on your device and your connection is the best place to start.\n\t\t- If it's slow for you then it's definitely slow for everyone else.\n- So there are limits to what you can do with local tools.\n\t- Using a remote performance test like [WebPageTest](https://www.webpagetest.org/) can help identify problems that you might miss with local testing.\n\t- External tests offer a point-in-time measurement which might be different than what real-world users see.\n- **Measuring performance from real users on your real infrastructure is the only way to understand the gaps in your performance architecture**, and the only true feedback mechanism to tell you if you're fixing them over time.\n- _HOWEVER_\n\t- This is a deep rabbit-hole. Measuring on the client is not free and too much telemetry can make performance worse.\n\n### 2. Cache when possible, but not too much\n\ntldr, cache static requests aggressively, be very careful with dynamic content\n\n- Physical distance between your servers and users is a large source of latency in any web request.\n\t- Goal is to make the request travel as short a distance as possible.\n- So what is CDN caching?\n\t1. Your server responds to an incoming request.\n\t2. A proxy sits between your server and the outside world, listening for a special header and caches the response. \n\t\t- The cached response is (usually) propagated across a globally distributed network of servers so the next request can be served from the nearest server.\n\t3. When the next request comes in, it gets served the cached response instead of hitting your server. \n- This is great for content that is **exactly the same every time**: your server does less work and your clients get the fastest possible response.\n- _BUT_\n\t- **You should never CDN cache authenticated pages**\n\t- There is a huge risk of showing your users someone else's account data 💀\n- Make sure you understand how your CDN is configured and how to flush it.\n\t- Common symptom will be the complaint \"I can't see my changes,\" and reply, \"Are you seeing cached content?\"\n\n### 3. Find out what's slow and eliminate bottlenecks\n\ntldr, know your performance floor.\n\n- How fast is your infra when you're doing zero work?\n- Lots of architectures can go fast. Most of the things I work on follow the \"BFF\" pattern.\n- \"Backend-for-the-frontend\" is when your web server makes calls to a separate API server for database access and business logic.\n\t- Server A handles html generation, content negotiation, and session handling.\n\t- Server B talks to the database and handles the application logic of your API.\n- Server A's _minimum_ response time is governed by the _slowest_ response from Server B.\n- To increase performance your best option is to reduce Server A's time spent waiting on Server B as much as possible. That means:\n\t- request only the data needed to generate a response\n\t- send the fewest requests possible\n\t- always send requests in parallel, avoid waterfalls\n- When the non-rendering, non-request handling parts of your workflow is fast, you can focus on the frontend.\n\t- then reduce the frontend payload as much as possible. That means:\n\t\t-\tcompressing and caching all assets, with content hash fingerprints.\n\t\t- shipping little to no JS, only the CSS you need to render the elements on the page, and optimizing and caching  images and videos.\n\n### 4. Blame the framework, last\n\ntldr, you're probably slower than the framework\n\n- Look, React is fine.\n\t- anecdotally, ~100ms is a pretty typical \"cost of business\" to fetch data + do a react render + stream the results\n\t\t- you can make this a little faster, but if you have sub-100ms p95 then you're doing great tbh.\n\t- usually there's lots of headroom even just in sending slimmer payloads from the API server to the client.\n- _HOWEVER_\n\t- if you have optimized to the point where React is holding you back from silky smooth frame rates and instant loading, congratulations! or if you start with that as an explicit goal, React probably _will_ hold you back.\n- _BUT_\n\t- if you are trying to move quickly with the best developer ergonomics and a decade+ of mass adoption, React is fine.You will not be fired for choosing it.\n- _REMEMBER_\n\t- This is an exhaustive topic.\n\t- The web platform provides many, many ways to build the same application experiences.\n\t- Every interaction can be optimized and tuned to an absurd degree, so you have to pick your battles.\n\t- The ideal web site is fast, accessible, and works on every device. Don't lose track of that.","src/content/writing/2024/web-perf-blah-blah-blah.md",[501],"../../../assets/j2LPaGXU8DZj5i5vQReSc.jpeg","6296926b4e1d0be8",{"html":504,"metadata":505},"\u003Cp>Recently an engineer I’m working with hit me up with a broad question about web performance:\u003C/p>\n\u003Cblockquote>\n\u003Cp>I’m trying to see if I can make site loading times faster, do you have any good profiling tools besides the browser? \u003Cbr> — Specifically I want to make frontpage as fast as possible \u003Cbr> I want to CDN cache the whole page (so I added a vercel header — is that the best way to go about it?)”\u003C/p>\n\u003C/blockquote>\n\u003Cp>This is a very reasonable question. Everything should be as fast as possible, and you’ve got work to do until it is. Web performance has been a recurring theme topic in my career and I have some earned wisdom on the topic.\u003C/p>\n\u003Ch3 id=\"1-use-tools-to-measure-performance\">1. Use tools to measure performance\u003C/h3>\n\u003Cp>tldr, know what you’re trying to measure and collect the right data.\u003C/p>\n\u003Cul>\n\u003Cli>The performance tab in Chrome dev tools is still the best tool for diagnosing and debugging performance issues.\u003C/li>\n\u003Cli>Performance is not a single number.\n\u003Cul>\n\u003Cli>Users will have slow devices, bad networks, memory pressure, etc. Assume the worst.\u003C/li>\n\u003Cli>\u003Cstrong>Performance is a statistical distribution of response times across a population of users with different devices and networks.\u003C/strong>\u003C/li>\n\u003Cli>Remember that “fast for me” != “fast for everyone”\n\u003Cul>\n\u003Cli>\u003Cem>BUT\u003C/em>\u003C/li>\n\u003Cli>Making it fast on your device and your connection is the best place to start.\u003C/li>\n\u003Cli>If it’s slow for you then it’s definitely slow for everyone else.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>So there are limits to what you can do with local tools.\n\u003Cul>\n\u003Cli>Using a remote performance test like \u003Ca href=\"https://www.webpagetest.org/\">WebPageTest\u003C/a> can help identify problems that you might miss with local testing.\u003C/li>\n\u003Cli>External tests offer a point-in-time measurement which might be different than what real-world users see.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Measuring performance from real users on your real infrastructure is the only way to understand the gaps in your performance architecture\u003C/strong>, and the only true feedback mechanism to tell you if you’re fixing them over time.\u003C/li>\n\u003Cli>\u003Cem>HOWEVER\u003C/em>\n\u003Cul>\n\u003Cli>This is a deep rabbit-hole. Measuring on the client is not free and too much telemetry can make performance worse.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-cache-when-possible-but-not-too-much\">2. Cache when possible, but not too much\u003C/h3>\n\u003Cp>tldr, cache static requests aggressively, be very careful with dynamic content\u003C/p>\n\u003Cul>\n\u003Cli>Physical distance between your servers and users is a large source of latency in any web request.\n\u003Cul>\n\u003Cli>Goal is to make the request travel as short a distance as possible.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>So what is CDN caching?\n\u003Col>\n\u003Cli>Your server responds to an incoming request.\u003C/li>\n\u003Cli>A proxy sits between your server and the outside world, listening for a special header and caches the response.\n\u003Cul>\n\u003Cli>The cached response is (usually) propagated across a globally distributed network of servers so the next request can be served from the nearest server.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>When the next request comes in, it gets served the cached response instead of hitting your server.\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003Cli>This is great for content that is \u003Cstrong>exactly the same every time\u003C/strong>: your server does less work and your clients get the fastest possible response.\u003C/li>\n\u003Cli>\u003Cem>BUT\u003C/em>\n\u003Cul>\n\u003Cli>\u003Cstrong>You should never CDN cache authenticated pages\u003C/strong>\u003C/li>\n\u003Cli>There is a huge risk of showing your users someone else’s account data 💀\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Make sure you understand how your CDN is configured and how to flush it.\n\u003Cul>\n\u003Cli>Common symptom will be the complaint “I can’t see my changes,” and reply, “Are you seeing cached content?“\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-find-out-whats-slow-and-eliminate-bottlenecks\">3. Find out what’s slow and eliminate bottlenecks\u003C/h3>\n\u003Cp>tldr, know your performance floor.\u003C/p>\n\u003Cul>\n\u003Cli>How fast is your infra when you’re doing zero work?\u003C/li>\n\u003Cli>Lots of architectures can go fast. Most of the things I work on follow the “BFF” pattern.\u003C/li>\n\u003Cli>“Backend-for-the-frontend” is when your web server makes calls to a separate API server for database access and business logic.\n\u003Cul>\n\u003Cli>Server A handles html generation, content negotiation, and session handling.\u003C/li>\n\u003Cli>Server B talks to the database and handles the application logic of your API.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Server A’s \u003Cem>minimum\u003C/em> response time is governed by the \u003Cem>slowest\u003C/em> response from Server B.\u003C/li>\n\u003Cli>To increase performance your best option is to reduce Server A’s time spent waiting on Server B as much as possible. That means:\n\u003Cul>\n\u003Cli>request only the data needed to generate a response\u003C/li>\n\u003Cli>send the fewest requests possible\u003C/li>\n\u003Cli>always send requests in parallel, avoid waterfalls\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>When the non-rendering, non-request handling parts of your workflow is fast, you can focus on the frontend.\n\u003Cul>\n\u003Cli>then reduce the frontend payload as much as possible. That means:\n\u003Cul>\n\u003Cli>compressing and caching all assets, with content hash fingerprints.\u003C/li>\n\u003Cli>shipping little to no JS, only the CSS you need to render the elements on the page, and optimizing and caching  images and videos.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-blame-the-framework-last\">4. Blame the framework, last\u003C/h3>\n\u003Cp>tldr, you’re probably slower than the framework\u003C/p>\n\u003Cul>\n\u003Cli>Look, React is fine.\n\u003Cul>\n\u003Cli>anecdotally, ~100ms is a pretty typical “cost of business” to fetch data + do a react render + stream the results\n\u003Cul>\n\u003Cli>you can make this a little faster, but if you have sub-100ms p95 then you’re doing great tbh.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>usually there’s lots of headroom even just in sending slimmer payloads from the API server to the client.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cem>HOWEVER\u003C/em>\n\u003Cul>\n\u003Cli>if you have optimized to the point where React is holding you back from silky smooth frame rates and instant loading, congratulations! or if you start with that as an explicit goal, React probably \u003Cem>will\u003C/em> hold you back.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cem>BUT\u003C/em>\n\u003Cul>\n\u003Cli>if you are trying to move quickly with the best developer ergonomics and a decade+ of mass adoption, React is fine.You will not be fired for choosing it.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cem>REMEMBER\u003C/em>\n\u003Cul>\n\u003Cli>This is an exhaustive topic.\u003C/li>\n\u003Cli>The web platform provides many, many ways to build the same application experiences.\u003C/li>\n\u003Cli>Every interaction can be optimized and tuned to an absurd degree, so you have to pick your battles.\u003C/li>\n\u003Cli>The ideal web site is fast, accessible, and works on every device. Don’t lose track of that.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":506,"imagePaths":519,"frontmatter":520},[507,510,513,516],{"depth":79,"slug":508,"text":509},"1-use-tools-to-measure-performance","1. Use tools to measure performance",{"depth":79,"slug":511,"text":512},"2-cache-when-possible-but-not-too-much","2. Cache when possible, but not too much",{"depth":79,"slug":514,"text":515},"3-find-out-whats-slow-and-eliminate-bottlenecks","3. Find out what’s slow and eliminate bottlenecks",{"depth":79,"slug":517,"text":518},"4-blame-the-framework-last","4. Blame the framework, last",[],{"title":493,"slug":490,"description":494,"pubDate":495,"cover":501,"heroAlt":496},"2023/links-august-2023",{"id":521,"data":523,"body":529,"filePath":530,"assetImports":531,"digest":533,"rendered":534},{"title":524,"description":525,"pubDate":526,"heroAlt":527,"cover":528},"Links, August 2023","shaking out the tabs from the bottom of the bag","August 31 2023","\"to the west the cloudbanks stood above the mountains like the dark warp of the very firmament and the star-sprent reaches of the galaxies hung in a vast aura above the riders' heads\" Cormac McCarthy × Stable Diffusion XL1.0","__ASTRO_IMAGE_../../../assets/967222.jpeg","## Tech\n- [How Google made the world go viral - The Verge](https://www.theverge.com/23846048/google-search-memes-images-pagerank-altavista-seo-keywords?utm_source=substack&utm_medium=email)\n- [Building and operating a pretty big storage system called S3](https://www.allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html)\n- [Why Open Source Matters](https://redmonk.com/sogrady/2023/08/03/why-opensource-matters/)\n- [Providing payment transparency with Indie Protocol's subgraph](https://indies.substack.com/p/providing-payment-transparency-with)\n- [Adactio: Journal—Opportunity](https://adactio.com/journal/20363)\n- [nato1968.indd](http://homepages.cs.ncl.ac.uk/brian.randell/NATO/nato1968.PDF)\n- [Hardware Security Modules Done Right](https://loup-vaillant.fr/articles/hsm-done-right)\n- [Systems, Mistakes, and the Sea](https://robinrendle.com/essays/systems-mistakes-and-the-sea/) - a beutiful website\n- [FFmpeg Explorer!](https://ffmpeg.lav.io/)\n\n## AI\n- [Fine-Tuning Llama-2: A Comprehensive Case Study for Tailoring Models to Unique Applications](https://www.anyscale.com/blog/fine-tuning-llama-2-a-comprehensive-case-study-for-tailoring-models-to-unique-applications)\n- [The Annotated S4](https://srush.github.io/annotated-s4/)\n- [steven2358/awesome-generative-ai: A curated list of modern Generative Artificial Intelligence projects and services](https://github.com/steven2358/awesome-generative-ai)\n- [hegelai/prompttools](https://github.com/hegelai/prompttools) - another one\n- [steer json generation with logits](https://github.com/normal-computing/outlines/blob/main/outlines/models/hf_transformers.py#L263-L266)\n- [On-sidk HNSW index for Postgres](https://neon.tech/blog/pg_embedding-on-disk-hnsw-index)\n- [Break-A-Scene: Extracting Multiple Concepts from a Single Image](https://huggingface.co/papers/2305.16311)\n\n## Fontend\n- [Flying Toasters Screensaver | After Dark in CSS](https://www.bryanbraun.com/after-dark-css/all/flying-toasters.html) - I remember buying the After Dark screensavers in the 90s. I liked this one and the dog that dug up holes on your desktop.\n- [Why Does Email Development Have to Suck?](https://dodov.dev/blog/why-does-email-development-have-to-suck)\n- [Axiomatic CSS and Lobotomized Owls – A List Apart](https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/)\n  - which was featured in this list [Educational Sensational Inspirational Foundational](https://esif.dev/)\n- [Fontsource](https://fontsource.org/)\n- [\u003C/> htmx ~ Hypermedia On Whatever you'd Like](https://htmx.org/essays/hypermedia-on-whatever-youd-like/)\n- [Web Interface Guidelines](https://github.com/raunofreiberg/interfaces)\n- [User Interface Gallery](https://ui.gallery/) - I love this. Great url too.\n- [Use web components for what they’re good at](https://nolanlawson.com/2023/08/23/use-web-components-for-what-theyre-good-at/)\n- [microsoft/fast](https://github.com/Microsoft/fast) - Web Component framework from Microsoft\n- [Introduction to USD — Universal Scene Description 23.08 documentation](https://openusd.org/release/intro.html)\n\n## This is neat\n- [Rewriting Wipeout](https://phoboslab.org/log/2023/08/rewriting-wipeout)\n  - and [Commander Keen's Adaptive Tile Refresh](https://fabiensanglard.net/ega/)\n    - and [Loki: A Unified Multiphysics Simulation Framework for Production (pdf)](http://alexey.stomakhin.com/research/siggraph2022_loki.pdf)\n- [Taylor Beseda /experiments/omnivore](https://tbeseda.com/experiments/omnivore)\n  - [Welcome to Omnivore | Omnivore Docs](https://docs.omnivore.app/)\n- [Sidewalk Garden - Zach Klein](https://zachklein.com/Sidewalk+Garden)\n- [Carhartt WIP Essentials Bag](https://us.carhartt-wip.com/products/essentials-bag-small-highland-1829) - I don't need another bag, I don't need another bag, I don't...\n- [Robin Sloan - The feeling of something waiting there for you](https://www.robinsloan.com/newsletters/feeling-of-something-waiting-there-for-you/)\n- [The best portfolio site I've seen in a long time. Wow.](https://rauno.me/craft)","src/content/writing/2023/links-august-2023.md",[532],"../../../assets/967222.jpeg","e067649bd70523a5",{"html":535,"metadata":536},"\u003Ch2 id=\"tech\">Tech\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.theverge.com/23846048/google-search-memes-images-pagerank-altavista-seo-keywords?utm_source=substack&#x26;utm_medium=email\">How Google made the world go viral - The Verge\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html\">Building and operating a pretty big storage system called S3\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://redmonk.com/sogrady/2023/08/03/why-opensource-matters/\">Why Open Source Matters\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://indies.substack.com/p/providing-payment-transparency-with\">Providing payment transparency with Indie Protocol’s subgraph\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://adactio.com/journal/20363\">Adactio: Journal—Opportunity\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://homepages.cs.ncl.ac.uk/brian.randell/NATO/nato1968.PDF\">nato1968.indd\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://loup-vaillant.fr/articles/hsm-done-right\">Hardware Security Modules Done Right\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://robinrendle.com/essays/systems-mistakes-and-the-sea/\">Systems, Mistakes, and the Sea\u003C/a> - a beutiful website\u003C/li>\n\u003Cli>\u003Ca href=\"https://ffmpeg.lav.io/\">FFmpeg Explorer!\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.anyscale.com/blog/fine-tuning-llama-2-a-comprehensive-case-study-for-tailoring-models-to-unique-applications\">Fine-Tuning Llama-2: A Comprehensive Case Study for Tailoring Models to Unique Applications\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://srush.github.io/annotated-s4/\">The Annotated S4\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/steven2358/awesome-generative-ai\">steven2358/awesome-generative-ai: A curated list of modern Generative Artificial Intelligence projects and services\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/hegelai/prompttools\">hegelai/prompttools\u003C/a> - another one\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/normal-computing/outlines/blob/main/outlines/models/hf_transformers.py#L263-L266\">steer json generation with logits\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://neon.tech/blog/pg_embedding-on-disk-hnsw-index\">On-sidk HNSW index for Postgres\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/papers/2305.16311\">Break-A-Scene: Extracting Multiple Concepts from a Single Image\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"fontend\">Fontend\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.bryanbraun.com/after-dark-css/all/flying-toasters.html\">Flying Toasters Screensaver | After Dark in CSS\u003C/a> - I remember buying the After Dark screensavers in the 90s. I liked this one and the dog that dug up holes on your desktop.\u003C/li>\n\u003Cli>\u003Ca href=\"https://dodov.dev/blog/why-does-email-development-have-to-suck\">Why Does Email Development Have to Suck?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/\">Axiomatic CSS and Lobotomized Owls – A List Apart\u003C/a>\n\u003Cul>\n\u003Cli>which was featured in this list \u003Ca href=\"https://esif.dev/\">Educational Sensational Inspirational Foundational\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://fontsource.org/\">Fontsource\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://htmx.org/essays/hypermedia-on-whatever-youd-like/\">&#x3C;/> htmx ~ Hypermedia On Whatever you’d Like\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/raunofreiberg/interfaces\">Web Interface Guidelines\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://ui.gallery/\">User Interface Gallery\u003C/a> - I love this. Great url too.\u003C/li>\n\u003Cli>\u003Ca href=\"https://nolanlawson.com/2023/08/23/use-web-components-for-what-theyre-good-at/\">Use web components for what they’re good at\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/Microsoft/fast\">microsoft/fast\u003C/a> - Web Component framework from Microsoft\u003C/li>\n\u003Cli>\u003Ca href=\"https://openusd.org/release/intro.html\">Introduction to USD — Universal Scene Description 23.08 documentation\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"this-is-neat\">This is neat\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://phoboslab.org/log/2023/08/rewriting-wipeout\">Rewriting Wipeout\u003C/a>\n\u003Cul>\n\u003Cli>and \u003Ca href=\"https://fabiensanglard.net/ega/\">Commander Keen’s Adaptive Tile Refresh\u003C/a>\n\u003Cul>\n\u003Cli>and \u003Ca href=\"http://alexey.stomakhin.com/research/siggraph2022_loki.pdf\">Loki: A Unified Multiphysics Simulation Framework for Production (pdf)\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://tbeseda.com/experiments/omnivore\">Taylor Beseda /experiments/omnivore\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://docs.omnivore.app/\">Welcome to Omnivore | Omnivore Docs\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://zachklein.com/Sidewalk+Garden\">Sidewalk Garden - Zach Klein\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://us.carhartt-wip.com/products/essentials-bag-small-highland-1829\">Carhartt WIP Essentials Bag\u003C/a> - I don’t need another bag, I don’t need another bag, I don’t…\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.robinsloan.com/newsletters/feeling-of-something-waiting-there-for-you/\">Robin Sloan - The feeling of something waiting there for you\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://rauno.me/craft\">The best portfolio site I’ve seen in a long time. Wow.\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":537,"imagePaths":548,"frontmatter":549},[538,541,542,545],{"depth":27,"slug":539,"text":540},"tech","Tech",{"depth":27,"slug":301,"text":302},{"depth":27,"slug":543,"text":544},"fontend","Fontend",{"depth":27,"slug":546,"text":547},"this-is-neat","This is neat",[],{"title":524,"slug":521,"description":525,"cover":532,"heroAlt":527,"pubDate":526},"2023/links-feb-2023",{"id":550,"data":552,"body":558,"filePath":559,"assetImports":560,"digest":562,"rendered":563},{"title":553,"description":554,"pubDate":555,"heroAlt":556,"cover":557},"Links, February 2023","The link posting will continue until morale improves!","Feb 28 2023","carbon flowviz paint - Stable Diffusion v1.5","__ASTRO_IMAGE_../../../assets/b3629593-a641-497a-b289-7a8c06466605.png","Winter. Low light. Short days. Cool weather. And finally, a month so short that it seems to be anticipating Spring waiting around the corner.\n\nFor me, this winter has been characterized by [lots of low-effort running](https://www.strava.com/athletes/3256286) to train for my upcoming _first_ marathon at Big Sur in April.\n\nI have also been collecting tabs.\n\n### AI\n- [Introducing the AI Mirror Test, which very smart people keep failing](https://www.theverge.com/23604075/ai-chatbots-bing-chatgpt-intelligent-sentient-mirror-test) - We're in the third month of frenzy following the release of ChatGPT and the hot takes simply will not stop coming. I've been working in-and-around the LLM / transformers / diffusers space since 2020, so finding journalism that resonates with me has been challenging, this piece being a clear exception. Bottom line: it is waaaay easy to oversell or invent capabilities of, or explanations of \"how\", a model like ChatGPT produces completions. There's definitely something cool and spooky going on here, but it's probably not what you think it is! Developing intuition for how these models behave and how to manipulate their output is challenging. They seem to have net-new qualities but are still very raw, so writing soberly about them seems to be very difficult.\n- [Copilot Internals](https://thakkarparth007.github.io/copilot-explorer/posts/copilot-internals.html) - Impressive piece of reverse engineering! Co-pilot is great and it's nice to think of it as an assemblage of pieces on top of an LLM rather than as something magic or abstruse.\n- [Illustrating Reinforcement Learning from Human Feedback (RLHF)](https://huggingface.co/blog/rlhf) - Staying on the theme of explicating the complex, this is how you grow a _very_ sophisticated model out of a merely sophisticated one.\n- [Storing OpenAI embeddings in Postgres with pgvector](https://supabase.com/blog/openai-embeddings-postgres-vector) - The team at Supabase rocks. I've been a customer of theirs for 2 years and I feel like it's more than paid off with the features that they've added since I started using them. This is a perfect example, where in the same week that I needed do this very task, they release a blog post telling me exactly how to do it. Pretty on point. Gotta appreciate a freebie like that when it comes your way!\n- [PodSearch Reborn](https://www.david-smith.org/blog/2023/02/02/podsearch-reborn/) - Very clever to index podcasts with OpenAI Whisper to make a searchable audio database. \n- [Diffusion-based Generation, Optimization, and Planning in 3D Scenes](https://arxiv.org/abs/2301.06015) - The last 5 months since the release of Stable Diffusion have been very exciting. There are papers like this one being published every week, and [new techniques](https://huggingface.co/spaces/kadirnar/stable-diffusion-2-infinite-zoom-out) to [generate](https://huggingface.co/spaces/akhaliq/Analog-Diffusion) [images](https://huggingface.co/lllyasviel/ControlNet), 3D scenes, and animation are coming online as an outcome. It's breathless and no one has time to read and digest everything. It will be great to look back in 5 - 10 years and see where the high water mark left its line.\n\n\n### Code\n\n- [Dark mode one-liner](https://twitter.com/flaviocopes/status/1627609246014619649) - I _gasped_ when I tried this and saw the results. Granted this might not work everywhere, but if you want a dark mode (or light mode if you're dark-first) without having to do, well, anything, then buddy this tweet's for you.\n- [Making the world’s fastest website, and other mistakes](https://dev.to/tigt/making-the-worlds-fastest-website-and-other-mistakes-56na) - This echoes a lot of my experience working at Credit Karma and being responsible for website performance. I used all of the tricks mentioned here: measuring bare infrastructure and being a bit shocked at how slow sending 0 bytes could be; eliminating as much 3rd party JS as possible and quarantining the rest in an iframe; inlining important CSS; swapping out React for Preact in places; and event using an [islands architecture](https://jasonformat.com/islands-architecture/) to render parts of the page on the server with zero client-side scripting.\n- [Bringing Javascript to WebAssembly for Shopify Functions](https://shopify.engineering/javascript-in-webassembly-for-shopify-functions) - This idea was kicked around on my team in 2021 but we didn't execute on it, but I'm glad someone else did because this is, in many ways, so obvious. Sandboxing code is very tricky and it's one of the core qualities of WASM, so getting a way to run untrusted JS in safely and reliably is very useful and cool.\n- [Speeding up the JavaScript ecosystem - eslint](https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-3/) - Another style of deep dive on super in-the-weeds optimizations found in eslint. Some really good strategies at play here, especially looking for subtle gotcha's in modern syntax that's de-optimized with outdated transpiling. I bet you could find this everywhere if you went looking for it.\n- [Error: cause](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause) - TIL that you can pass a contextual data specifying a `cause` to an Error in JavaScript. This is fairly new. I remember wanting to do this years ago and not being able to. Love it when intellisense hints at an field that's new-to-you.\n\n### Software\n\n- [A better way to build software](https://sarharibhakti.substack.com/p/a-better-way-to-build-software) - Karri Kivela, CEO of Linear, talks about the importance of design for success, reducing friction & providing defaults for momentum, measuring engineering productivity & shipping velocity, and the challenges of remote work.\n- [Carving the Scheduler Out of Our Orchestrator](https://fly.io/blog/carving-the-scheduler-out-of-our-orchestrator/) - Over the years I've been increasingly impressed with the high-quality content coming out from the team at Fly.io. They first got my attention in 2019 with their open source work around V8 isolates, and I've been following them ever since. They're solving common infrastructure problems in modern, novel ways. Like Vercel but without the JS-eats-the-world endgame. Anyway I love by-the-numbers engineering pieces like this, and orchestrators / schedulers are classic \"hard\" problems that are fun to think about but tough to get right.\n- [Developer with ADHD? You're not alone.](https://stackoverflow.blog/2023/02/19/developer-with-adhd-youre-not-alone/) - I wasn't diagnosed with ADHD until my early 30s, but the diagnosis snapped a lot of aspects of my personality, career, and relationships into sharp relief. Not surprising to learn that there's a large number of programmers who share a similar diagnoses, I only took the steps to see someone about it after a friend had shared about their story on twitter. But it makes sense, the structure and feedback of programming are intensely rewarding and can be self-taught, perfect fit for the dopamine seekers in the world.\n- [Algorithmic Trading: A Practitioner’s Guide](https://henrikwarne.com/2023/02/12/algorithmic-trading-a-practitioners-guide/) - wow, please print a copy of this and send it back to me circa 2016-2017. I read several books on the topic and wrote a bit of automation but ultimately put it aside as a hobby.\n- [Xerox scanners/photocopiers randomly alter numbers in scanned documents](http://www.dkriesel.com/en/blog/2013/0802_xerox-workcentres_are_switching_written_numbers_when_scanning) - yes, you read that correctly. Software in Xerox copy machines could, under certain conditions, scramble numbers in scanned documents. This was a bug in the wild for several **years** before it was fixed!\n\n\n### Opinion Section\n\n- [Don't be a doomer](https://noahpinion.substack.com/p/dont-be-a-doomer) - Point: modernity and human psychology make it easier and more rewarding to be a pessimist, especially as a reactionary reward-seeking mechanism. Things are pretty good even though they can still get a hell of a lot better. Both can be true at the same time!\n- [Social Media is a Major Cause of the Mental Illness Epidemic in Teen Girls. Here’s the Evidence.](https://jonathanhaidt.substack.com/p/social-media-mental-illness-epidemic) Counter-point: there are big harms that we're self-inflicting and maybe we should cut it out? or at least not deny the mounting piles of evidence? Jonathan Haidt is an author I came across last year while actively seeking out books recommended by people I don't agree with, and his Moral Foundations theory really resonated with me a way to frame contemporary history and political division. I don't agree with everything he has to say, but he's a good and thought-provoking writer.\n\n\n### Misc.\n\n- [Mt Tamalpais Webcam](https://alertca.live/cam-console/2192) - I've been in the habit of regularly checking the Mt Tam webcams for a few years now, ever since I moved closer to the center of Mill Valley. That is until a few months ago, when the two cameras went offline. I looked again today and they're back online and have added more, better cameras. There is even a full panorama now! It's cool that there's a continuous live feed from the top of the the mountain which I live at the foot of.\n- [personalsit.es](https://personalsit.es/) - Everyone should have a personal website! I love seeing the clever things that people get up to. Really under-appreciated genre.","src/content/writing/2023/links-feb-2023.md",[561],"../../../assets/b3629593-a641-497a-b289-7a8c06466605.png","18167f3e805261af",{"html":564,"metadata":565},"\u003Cp>Winter. Low light. Short days. Cool weather. And finally, a month so short that it seems to be anticipating Spring waiting around the corner.\u003C/p>\n\u003Cp>For me, this winter has been characterized by \u003Ca href=\"https://www.strava.com/athletes/3256286\">lots of low-effort running\u003C/a> to train for my upcoming \u003Cem>first\u003C/em> marathon at Big Sur in April.\u003C/p>\n\u003Cp>I have also been collecting tabs.\u003C/p>\n\u003Ch3 id=\"ai\">AI\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.theverge.com/23604075/ai-chatbots-bing-chatgpt-intelligent-sentient-mirror-test\">Introducing the AI Mirror Test, which very smart people keep failing\u003C/a> - We’re in the third month of frenzy following the release of ChatGPT and the hot takes simply will not stop coming. I’ve been working in-and-around the LLM / transformers / diffusers space since 2020, so finding journalism that resonates with me has been challenging, this piece being a clear exception. Bottom line: it is waaaay easy to oversell or invent capabilities of, or explanations of “how”, a model like ChatGPT produces completions. There’s definitely something cool and spooky going on here, but it’s probably not what you think it is! Developing intuition for how these models behave and how to manipulate their output is challenging. They seem to have net-new qualities but are still very raw, so writing soberly about them seems to be very difficult.\u003C/li>\n\u003Cli>\u003Ca href=\"https://thakkarparth007.github.io/copilot-explorer/posts/copilot-internals.html\">Copilot Internals\u003C/a> - Impressive piece of reverse engineering! Co-pilot is great and it’s nice to think of it as an assemblage of pieces on top of an LLM rather than as something magic or abstruse.\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/rlhf\">Illustrating Reinforcement Learning from Human Feedback (RLHF)\u003C/a> - Staying on the theme of explicating the complex, this is how you grow a \u003Cem>very\u003C/em> sophisticated model out of a merely sophisticated one.\u003C/li>\n\u003Cli>\u003Ca href=\"https://supabase.com/blog/openai-embeddings-postgres-vector\">Storing OpenAI embeddings in Postgres with pgvector\u003C/a> - The team at Supabase rocks. I’ve been a customer of theirs for 2 years and I feel like it’s more than paid off with the features that they’ve added since I started using them. This is a perfect example, where in the same week that I needed do this very task, they release a blog post telling me exactly how to do it. Pretty on point. Gotta appreciate a freebie like that when it comes your way!\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.david-smith.org/blog/2023/02/02/podsearch-reborn/\">PodSearch Reborn\u003C/a> - Very clever to index podcasts with OpenAI Whisper to make a searchable audio database.\u003C/li>\n\u003Cli>\u003Ca href=\"https://arxiv.org/abs/2301.06015\">Diffusion-based Generation, Optimization, and Planning in 3D Scenes\u003C/a> - The last 5 months since the release of Stable Diffusion have been very exciting. There are papers like this one being published every week, and \u003Ca href=\"https://huggingface.co/spaces/kadirnar/stable-diffusion-2-infinite-zoom-out\">new techniques\u003C/a> to \u003Ca href=\"https://huggingface.co/spaces/akhaliq/Analog-Diffusion\">generate\u003C/a> \u003Ca href=\"https://huggingface.co/lllyasviel/ControlNet\">images\u003C/a>, 3D scenes, and animation are coming online as an outcome. It’s breathless and no one has time to read and digest everything. It will be great to look back in 5 - 10 years and see where the high water mark left its line.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"code\">Code\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://twitter.com/flaviocopes/status/1627609246014619649\">Dark mode one-liner\u003C/a> - I \u003Cem>gasped\u003C/em> when I tried this and saw the results. Granted this might not work everywhere, but if you want a dark mode (or light mode if you’re dark-first) without having to do, well, anything, then buddy this tweet’s for you.\u003C/li>\n\u003Cli>\u003Ca href=\"https://dev.to/tigt/making-the-worlds-fastest-website-and-other-mistakes-56na\">Making the world’s fastest website, and other mistakes\u003C/a> - This echoes a lot of my experience working at Credit Karma and being responsible for website performance. I used all of the tricks mentioned here: measuring bare infrastructure and being a bit shocked at how slow sending 0 bytes could be; eliminating as much 3rd party JS as possible and quarantining the rest in an iframe; inlining important CSS; swapping out React for Preact in places; and event using an \u003Ca href=\"https://jasonformat.com/islands-architecture/\">islands architecture\u003C/a> to render parts of the page on the server with zero client-side scripting.\u003C/li>\n\u003Cli>\u003Ca href=\"https://shopify.engineering/javascript-in-webassembly-for-shopify-functions\">Bringing Javascript to WebAssembly for Shopify Functions\u003C/a> - This idea was kicked around on my team in 2021 but we didn’t execute on it, but I’m glad someone else did because this is, in many ways, so obvious. Sandboxing code is very tricky and it’s one of the core qualities of WASM, so getting a way to run untrusted JS in safely and reliably is very useful and cool.\u003C/li>\n\u003Cli>\u003Ca href=\"https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-3/\">Speeding up the JavaScript ecosystem - eslint\u003C/a> - Another style of deep dive on super in-the-weeds optimizations found in eslint. Some really good strategies at play here, especially looking for subtle gotcha’s in modern syntax that’s de-optimized with outdated transpiling. I bet you could find this everywhere if you went looking for it.\u003C/li>\n\u003Cli>\u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\">Error: cause\u003C/a> - TIL that you can pass a contextual data specifying a \u003Ccode>cause\u003C/code> to an Error in JavaScript. This is fairly new. I remember wanting to do this years ago and not being able to. Love it when intellisense hints at an field that’s new-to-you.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"software\">Software\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://sarharibhakti.substack.com/p/a-better-way-to-build-software\">A better way to build software\u003C/a> - Karri Kivela, CEO of Linear, talks about the importance of design for success, reducing friction &#x26; providing defaults for momentum, measuring engineering productivity &#x26; shipping velocity, and the challenges of remote work.\u003C/li>\n\u003Cli>\u003Ca href=\"https://fly.io/blog/carving-the-scheduler-out-of-our-orchestrator/\">Carving the Scheduler Out of Our Orchestrator\u003C/a> - Over the years I’ve been increasingly impressed with the high-quality content coming out from the team at Fly.io. They first got my attention in 2019 with their open source work around V8 isolates, and I’ve been following them ever since. They’re solving common infrastructure problems in modern, novel ways. Like Vercel but without the JS-eats-the-world endgame. Anyway I love by-the-numbers engineering pieces like this, and orchestrators / schedulers are classic “hard” problems that are fun to think about but tough to get right.\u003C/li>\n\u003Cli>\u003Ca href=\"https://stackoverflow.blog/2023/02/19/developer-with-adhd-youre-not-alone/\">Developer with ADHD? You’re not alone.\u003C/a> - I wasn’t diagnosed with ADHD until my early 30s, but the diagnosis snapped a lot of aspects of my personality, career, and relationships into sharp relief. Not surprising to learn that there’s a large number of programmers who share a similar diagnoses, I only took the steps to see someone about it after a friend had shared about their story on twitter. But it makes sense, the structure and feedback of programming are intensely rewarding and can be self-taught, perfect fit for the dopamine seekers in the world.\u003C/li>\n\u003Cli>\u003Ca href=\"https://henrikwarne.com/2023/02/12/algorithmic-trading-a-practitioners-guide/\">Algorithmic Trading: A Practitioner’s Guide\u003C/a> - wow, please print a copy of this and send it back to me circa 2016-2017. I read several books on the topic and wrote a bit of automation but ultimately put it aside as a hobby.\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.dkriesel.com/en/blog/2013/0802_xerox-workcentres_are_switching_written_numbers_when_scanning\">Xerox scanners/photocopiers randomly alter numbers in scanned documents\u003C/a> - yes, you read that correctly. Software in Xerox copy machines could, under certain conditions, scramble numbers in scanned documents. This was a bug in the wild for several \u003Cstrong>years\u003C/strong> before it was fixed!\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"opinion-section\">Opinion Section\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://noahpinion.substack.com/p/dont-be-a-doomer\">Don’t be a doomer\u003C/a> - Point: modernity and human psychology make it easier and more rewarding to be a pessimist, especially as a reactionary reward-seeking mechanism. Things are pretty good even though they can still get a hell of a lot better. Both can be true at the same time!\u003C/li>\n\u003Cli>\u003Ca href=\"https://jonathanhaidt.substack.com/p/social-media-mental-illness-epidemic\">Social Media is a Major Cause of the Mental Illness Epidemic in Teen Girls. Here’s the Evidence.\u003C/a> Counter-point: there are big harms that we’re self-inflicting and maybe we should cut it out? or at least not deny the mounting piles of evidence? Jonathan Haidt is an author I came across last year while actively seeking out books recommended by people I don’t agree with, and his Moral Foundations theory really resonated with me a way to frame contemporary history and political division. I don’t agree with everything he has to say, but he’s a good and thought-provoking writer.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"misc\">Misc.\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://alertca.live/cam-console/2192\">Mt Tamalpais Webcam\u003C/a> - I’ve been in the habit of regularly checking the Mt Tam webcams for a few years now, ever since I moved closer to the center of Mill Valley. That is until a few months ago, when the two cameras went offline. I looked again today and they’re back online and have added more, better cameras. There is even a full panorama now! It’s cool that there’s a continuous live feed from the top of the the mountain which I live at the foot of.\u003C/li>\n\u003Cli>\u003Ca href=\"https://personalsit.es/\">personalsit.es\u003C/a> - Everyone should have a personal website! I love seeing the clever things that people get up to. Really under-appreciated genre.\u003C/li>\n\u003C/ul>",{"headings":566,"imagePaths":577,"frontmatter":578},[567,568,569,572,575],{"depth":79,"slug":301,"text":302},{"depth":79,"slug":426,"text":427},{"depth":79,"slug":570,"text":571},"software","Software",{"depth":79,"slug":573,"text":574},"opinion-section","Opinion Section",{"depth":79,"slug":429,"text":576},"Misc.",[],{"title":553,"slug":550,"description":554,"cover":561,"heroAlt":556,"pubDate":555},"2023/links-december-2023",{"id":579,"data":581,"body":587,"filePath":588,"assetImports":589,"digest":591,"rendered":592},{"title":582,"description":583,"pubDate":584,"heroAlt":585,"cover":586},"Links, December 2023","Every month I turn my open browser tabs into a blog post.","December 31 2023","“lofi garden” Steps: 1, Sampler: DPM++ 2M Karras, CFG scale: 1, Seed: 1435965077, Size: 1024x512, Model hash: 2e58e3704b, Model: sdxlTurbo_fullVersion, Version: v1.7.0 Time taken: 0.6 sec.","__ASTRO_IMAGE_../../../assets/lofi_garden.png","Final link dump of the year. I made it, I swear. Now that I'm duty bound to keep up the posting and build a little archive for myself, I'm going to try to keep the habit up into 2024. Enjoy!\n\n## AI\n\n* [LLM Visualization](https://bbycroft.net/llm) &middot; this is very cool. Massive parallelism is fundamentally difficult to visualize, as evidenced by the massive increase in scope between the 'nano' and 'gpt-3' architectures on display here.\n* [Little Book of Deep Learning](https://fleuret.org/francois/lbdl.html) &middot; recommended by some of the AI researchers I work with and it's an excellent resource.\n* [Quickstart Guide to SDXL Turbo - Civitai Education](https://education.civitai.com/quickstart-guide-to-sdxl-turbo/)\n\t* [stabilityai/sdxl-turbo · Hugging Face](https://huggingface.co/stabilityai/sdxl-turbo)\n  * Models getting faster without dropping quality is a big deal. Having spent the better part of the past year with image gen models, I have come to think of them as very weird, very compressed databases for images: You put in a query, it starts with random noise and bumps each pixel until it gets closer to the target image. Do this enough times and with a specific enough prompt and you can make anything. When you can get results in less than a second on a consumer graphics card, it absolutely feels like a database.\n* [Bash One-Liners for LLMs](https://justine.lol/oneliners/) &middot; 2023 has been a banner year for LLMs, evidenced by tools like this being readily available and easy to run.\n* [Universal and Transferable Adversarial Attacks on Aligned Language Models](https://llm-attacks.org) &middot; Continuing on the theme that this tech is new in some ways but exactly the same as old tech in others, the various vulnerabilities of LLMs are a fascinating topic and importatnt area to study. \n* [Stuff we figured out about AI in 2023](https://simonwillison.net/2023/Dec/31/ai-in-2023/) &middot; A late entry in this list, Simon Willison was a prolific contributor to the AI space this year through his blog and social media presence. \n\n## Tech\n\n* [Pipe Dreams - The Life and Times of Yahoo Pipes](https://retool.com/pipes) &middot; I am a huge fan of Yahoo Pipes. Back in the early days of Quick Left, my co-founder Collin and I got into all sorts of shenanigans with pipes.\n* [blakewatson.com – omg.lol: an oasis on the internet](https://blakewatson.com/journal/omg-lol-an-oasis-on-the-internet/) &middot; you know the way fun ideas can make you feel out-of-the-loop? I have not tried omg.lol and probably am not the target audience, since I'm already trying to \"do a website\" here and I do not need another one.\n\t* The email forwarding thing is cool, too. I've been using `destroy.email` as a vanity domain for myself for many years, and it makes me curious about how omg.lol is running under the hood.\n* [A forty-year career. | Irrational Exuberance](https://lethain.com/forty-year-career/) &middot; Will Larson is one of my favorite writers and thinkers in the software industry. He approaches everything so practically and thoroughly, and this is no exception. As I've gotten further in my career, I've been actively trying to shift towards strategic, long-term thinking while simultaneously delivering on short term goals.\n\t* It was linked from another post of his, [Advancing the Industry](https://lethain.com/advancing-the-industry/), which is also a banger. He has been relentlessly publishing on his [website](https://lethain.com/) the past few months and I find myself bookmarking every post in Feedbin.\n* [Why and how we do work trials at Linear](https://linear.app/blog/why-and-how-we-do-work-trials-at-linear) &middot; We did something similar at Quick Left but didn't call it work trials or write a blog post about, nor did we really know what we were doing. But that said, if you want to grow a team and have the patience to hire like this, you should try it. Working with someone over a few days is much better way to get a read on their personality and preferences than grilling them for a few hours in a traditional interview.\n* [Andy Matuschak - Self-Teaching, Spaced Repetition, Why Books Don’t Work](https://www.dwarkeshpatel.com/p/andy-matuschak) &middot; Sometimes you come across a podcast and it sounds just interesting enough to bite. I run a lot, so throwing on an hour or two of something (at 1.3-1.5x speed) is not a huge commitment. I was absolutely hooked within the first five minutes of this episode. I was casually familiar with Andy Matuschak's work before, but now I am an acolyte.\n* [How We Clone a Running VM in 2 Seconds](https://codesandbox.io/blog/how-we-clone-a-running-vm-in-2-seconds) &middot; bookmarking this for the next time I need to build rapid-spinup infrastructure.\n* [Rethinking Serverless with FLAME](https://fly.io/blog/rethinking-serverless-with-flame/)\n* [Doom Guys Reminisce](https://arstechnica.com/gaming/2023/12/dooms-creators-reminisce-about-as-close-to-a-perfect-game-as-anything-we-made/) &middot; Doom's 30th anniversary was this year. Like most other computer users in the early 90s, DOOM completely changed what I thought of computer games.\n* [hrvach/deskhop: Fast Desktop Switching Device](https://github.com/hrvach/deskhop) &middot; bookmark\n* [Eric Kissane - Root & Branch](https://erinkissane.com/root-and-branch) &middot; Well designed personal site and important social / internet research.\n* [Lapsus$ member hacks GTA VI while in custody](https://www.bbc.com/news/technology-67663128)\n\t* This story was widely reported but I couldn't find any details about how, specifically, he managed to perpetrate the hack with only a phone, a hotel television, and an Amazon FireTV stick.\n\t* My guess: he jailbreaks (lol) the FireTV to get a shell, then telnets to a jump host with more juice/tools than the tv stick, and then does his thing to infiltrate Rockstar from there. Presumably he'd already compromised Rockstar and re-infiltrating was simply a matter of course.\n* [4-year campaign backdoored iPhones using possibly the most advanced exploit ever | Ars Technica](https://arstechnica.com/security/2023/12/exploit-used-in-mass-iphone-infection-campaign-targeted-secret-hardware-feature/) &middot; This is nuts. I can only imagine you get to this level of sophistication through years of concentrated effort to reverse engineer the hardware, or get otherwise stone-silent former Apple employees to spill their guts. Good to remember that every device can be hacked, almost like in the movies. Real life Mr Robot shit.\n* [iMessage, explained - JJTech](https://jjtech.dev/reverse-engineering/imessage-explained/) &middot; While we're security-adjacent, there's been quite a lot written about the recent attempts to skirt Apple's iMessage walled garden. This is a good read.\n* [Is software getting worse?](https://stackoverflow.blog/2023/12/25/is-software-getting-worse/) Nope.\n* [Stirling-Tools/Stirling-PDF: locally hosted web application that allows you to perform various operations on PDF files](https://github.com/Stirling-Tools/Stirling-PDF) &middot; pdf tricks!\n\n\n## Front End\n\n* [Honey, I shrunk the telemetry](https://blog.bitdrift.io/post/honey-i-shrunk-the-telemetry)\n\t* Story Time: when I first heard of Bit Drift, I racked my brain trying to think of why their founder Matt Klein seemed so familiar to me. Was it because I used Envoy? I didn't recall knowing any of the other core team members. It was a mystery.\n\t* Finally it hit me: I met Matt very briefly in 1999 or 2000 when he was a college student at Duke University. He was with a group of my brother's friends that briefly stayed at my house while they were on their way to some other spring/winter vacation destination in Florida.\n\t* The reason why he stood out in my memory was simple: Matt introduced me to Linux. He clearly noticed that I had a bedroom full of computers all networked together and connected to a big stereo and several monitors. I was roughly aspiring to Neo's desk in his real-life apartment.\n\t* Matt showed me how to download distros from university servers (I remember getting Redhat and Slackware). From that moment I was hooked. It gave me a whole new way to use my computers! He also showed me [Linux From Scratch](https://www.linuxfromscratch.org/museum/lfs-museum/1.1/LFS-HOWTO-1.1-HTML/), which I printed out and proceed to compile the a kernel from source and install everything to get to a gnome desktop. I remember showing my dad but he didn't really get it.\n\t* Anyway, Client Telemetry is a big problem! All of the serverside solutions tend towards bloated client implementations that drain batteries and kill performance. Bit Drift's ring buffer memory and control plane architecture are both points of interest, as well as their choice to target native clients.\n* [Nuclear Anchored Sidenotes](https://meyerweb.com/eric/thoughts/2023/09/12/nuclear-anchored-sidenotes/) &middot; great exploration of an experimental API \n* [Defining styles | StyleX](https://stylexjs.com/docs/learn/styling-ui/defining-styles/) &middot; In 2023 I wrote more CSS than I would have guessed. While I like and appreciate [Tailwind CSS](/wiki/computers/web-development/front-end/zen-of-tailwind) I don't think it's the final word in styling. The main criticism that hits it is that carrying around tons of very long or complex class strings in a large project is as terrible as a dragon's hoard of unorganized CSS.\n  * I don't think StyleX has a future outside of Facebook, but seeing the compiler-driven, close-to-the-code approach while ditching all the strings is a step in the right direction.\n* [Examples of Great URL Design - Jim Nielsen’s Blog](https://blog.jim-nielsen.com/2023/examples-of-great-urls/) &middot; No matter how many projects I do, I always come away feeling like I could have made better or different URL choices. Ask me about UUIDs sometime 🤡\n* [Modern CSS Reset / Global Styles](https://www.joshwcomeau.com/css/custom-css-reset/) &middot; Funny story, I had been writing the CSS for this website by hand since moved from Next to Astro, and I hadn't used a proper global reset from the outset. CSS is weird when you don't reset things! I've been using resets in some fashion my entire career without reallt appreciating their value.\n* [The NBA, Ranked](https://nbarankings.theringer.com/) &middot; Good website!\n* [The await event horizon in JavaScript](https://frontside.com/blog/2023-12-11-await-event-horizon/) &middot; This is deeper than I've every bothered to go into JavaScripts concurrency problems.\n* [Pagefind — Static low-bandwidth search at scale](https://pagefind.app/) &middot; New-to-me but not new, and as I've been jamming a bit on search lately, this is in the to-investigate pile.\n* [Introducing the new Wasmer JS SDK](https://wasmer.io/posts/introducing-the-wasmer-js-sdk) &middot; More proof that web browsers are continuing to grow as a compile target for other platforms and runtimes. Having interop with other languages via WASM expands the types of tools that can be built. WASM hasn't caught on in a major sense, but I feel like we're going to look back in a few years and see browsers as a much richer and more capable platform than what we have today.\n\n## Misc\n\n* [52 things I learned in 2023.](https://medium.com/magnetic/52-things-i-learned-in-2023-a3bbb9f9323d) &middot; End of year lists are always popular and make the rounds this time of year. I am choosing to share this one because I had the tab open.\n* [Ishkur's Guide to Electronic Music](https://music.ishkur.com/) via [jwz](https://www.dnalounge.com/backstage/log/2023/12/16.html)\n* [The iA Writer Template for Screenwriters](https://ia.net/topics/ia-writer-fountain-template) &middot; Back in college, I spent a lot of time in Final Draft and still carry the battle scars. iA Writer, on the other hand, has been making joyful software that I'vehappily been using for more than a decade, so I was stoked when I heard about their screenwriting template. It's inspired me to look back on my old work and maybe write a little bit of new stuff.\n* [Poor Charlie’s Almanack: The Essential Wit and Wisdom of Charles T. Munger](https://www.stripe.press/poor-charlies-almanack/) &middot; This should be required reading for everyone. I wish I had gotten on to this way earlier in my career, having only found out about it 4-5 years ago. Charlie was a great American and a singular thinker. We are blessed to have such a volume.\n* [Aphantasia - Wikipedia](https://en.m.wikipedia.org/wiki/Aphantasia) &middot; The diversity of human experience blows my mind, and I can picture that quite vividly in a variety of different ways, which itself is not universal. Some people lack the ability to project mental images at all. Brains are tricky!\n* [November blend of links](https://thejollyteapot.com/november-2023-blend) &middot; A very nice website that is also a link dump.\n* [JOHN HODGMAN — Judge John Hodgman Settled Law](https://www.johnhodgman.com/post/131161007023/judge-john-hodgman-settled-law) &middot; These are all great and true, especially the Tom Waits rule. You cannot make your friends like everything you like!\n* [Boardwatch Magazine 1994-12 : Boardwatch Magazine : Free Download, Borrow, and Streaming : Internet Archive](https://archive.org/details/Boardwatch1994-12/page/n7/mode/2up) &middot; also from jwz. I am a sucker for old tech magazines, and I had never seen Boardwatch before. Hours of fun to be had flipping through the archive here.","src/content/writing/2023/links-december-2023.md",[590],"../../../assets/lofi_garden.png","445e38c53bd47217",{"html":593,"metadata":594},"\u003Cp>Final link dump of the year. I made it, I swear. Now that I’m duty bound to keep up the posting and build a little archive for myself, I’m going to try to keep the habit up into 2024. Enjoy!\u003C/p>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://bbycroft.net/llm\">LLM Visualization\u003C/a> · this is very cool. Massive parallelism is fundamentally difficult to visualize, as evidenced by the massive increase in scope between the ‘nano’ and ‘gpt-3’ architectures on display here.\u003C/li>\n\u003Cli>\u003Ca href=\"https://fleuret.org/francois/lbdl.html\">Little Book of Deep Learning\u003C/a> · recommended by some of the AI researchers I work with and it’s an excellent resource.\u003C/li>\n\u003Cli>\u003Ca href=\"https://education.civitai.com/quickstart-guide-to-sdxl-turbo/\">Quickstart Guide to SDXL Turbo - Civitai Education\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://huggingface.co/stabilityai/sdxl-turbo\">stabilityai/sdxl-turbo · Hugging Face\u003C/a>\u003C/li>\n\u003Cli>Models getting faster without dropping quality is a big deal. Having spent the better part of the past year with image gen models, I have come to think of them as very weird, very compressed databases for images: You put in a query, it starts with random noise and bumps each pixel until it gets closer to the target image. Do this enough times and with a specific enough prompt and you can make anything. When you can get results in less than a second on a consumer graphics card, it absolutely feels like a database.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://justine.lol/oneliners/\">Bash One-Liners for LLMs\u003C/a> · 2023 has been a banner year for LLMs, evidenced by tools like this being readily available and easy to run.\u003C/li>\n\u003Cli>\u003Ca href=\"https://llm-attacks.org\">Universal and Transferable Adversarial Attacks on Aligned Language Models\u003C/a> · Continuing on the theme that this tech is new in some ways but exactly the same as old tech in others, the various vulnerabilities of LLMs are a fascinating topic and importatnt area to study.\u003C/li>\n\u003Cli>\u003Ca href=\"https://simonwillison.net/2023/Dec/31/ai-in-2023/\">Stuff we figured out about AI in 2023\u003C/a> · A late entry in this list, Simon Willison was a prolific contributor to the AI space this year through his blog and social media presence.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech\">Tech\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://retool.com/pipes\">Pipe Dreams - The Life and Times of Yahoo Pipes\u003C/a> · I am a huge fan of Yahoo Pipes. Back in the early days of Quick Left, my co-founder Collin and I got into all sorts of shenanigans with pipes.\u003C/li>\n\u003Cli>\u003Ca href=\"https://blakewatson.com/journal/omg-lol-an-oasis-on-the-internet/\">blakewatson.com – omg.lol: an oasis on the internet\u003C/a> · you know the way fun ideas can make you feel out-of-the-loop? I have not tried omg.lol and probably am not the target audience, since I’m already trying to “do a website” here and I do not need another one.\n\u003Cul>\n\u003Cli>The email forwarding thing is cool, too. I’ve been using \u003Ccode>destroy.email\u003C/code> as a vanity domain for myself for many years, and it makes me curious about how omg.lol is running under the hood.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://lethain.com/forty-year-career/\">A forty-year career. | Irrational Exuberance\u003C/a> · Will Larson is one of my favorite writers and thinkers in the software industry. He approaches everything so practically and thoroughly, and this is no exception. As I’ve gotten further in my career, I’ve been actively trying to shift towards strategic, long-term thinking while simultaneously delivering on short term goals.\n\u003Cul>\n\u003Cli>It was linked from another post of his, \u003Ca href=\"https://lethain.com/advancing-the-industry/\">Advancing the Industry\u003C/a>, which is also a banger. He has been relentlessly publishing on his \u003Ca href=\"https://lethain.com/\">website\u003C/a> the past few months and I find myself bookmarking every post in Feedbin.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://linear.app/blog/why-and-how-we-do-work-trials-at-linear\">Why and how we do work trials at Linear\u003C/a> · We did something similar at Quick Left but didn’t call it work trials or write a blog post about, nor did we really know what we were doing. But that said, if you want to grow a team and have the patience to hire like this, you should try it. Working with someone over a few days is much better way to get a read on their personality and preferences than grilling them for a few hours in a traditional interview.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.dwarkeshpatel.com/p/andy-matuschak\">Andy Matuschak - Self-Teaching, Spaced Repetition, Why Books Don’t Work\u003C/a> · Sometimes you come across a podcast and it sounds just interesting enough to bite. I run a lot, so throwing on an hour or two of something (at 1.3-1.5x speed) is not a huge commitment. I was absolutely hooked within the first five minutes of this episode. I was casually familiar with Andy Matuschak’s work before, but now I am an acolyte.\u003C/li>\n\u003Cli>\u003Ca href=\"https://codesandbox.io/blog/how-we-clone-a-running-vm-in-2-seconds\">How We Clone a Running VM in 2 Seconds\u003C/a> · bookmarking this for the next time I need to build rapid-spinup infrastructure.\u003C/li>\n\u003Cli>\u003Ca href=\"https://fly.io/blog/rethinking-serverless-with-flame/\">Rethinking Serverless with FLAME\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://arstechnica.com/gaming/2023/12/dooms-creators-reminisce-about-as-close-to-a-perfect-game-as-anything-we-made/\">Doom Guys Reminisce\u003C/a> · Doom’s 30th anniversary was this year. Like most other computer users in the early 90s, DOOM completely changed what I thought of computer games.\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/hrvach/deskhop\">hrvach/deskhop: Fast Desktop Switching Device\u003C/a> · bookmark\u003C/li>\n\u003Cli>\u003Ca href=\"https://erinkissane.com/root-and-branch\">Eric Kissane - Root &#x26; Branch\u003C/a> · Well designed personal site and important social / internet research.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.bbc.com/news/technology-67663128\">Lapsus$ member hacks GTA VI while in custody\u003C/a>\n\u003Cul>\n\u003Cli>This story was widely reported but I couldn’t find any details about how, specifically, he managed to perpetrate the hack with only a phone, a hotel television, and an Amazon FireTV stick.\u003C/li>\n\u003Cli>My guess: he jailbreaks (lol) the FireTV to get a shell, then telnets to a jump host with more juice/tools than the tv stick, and then does his thing to infiltrate Rockstar from there. Presumably he’d already compromised Rockstar and re-infiltrating was simply a matter of course.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://arstechnica.com/security/2023/12/exploit-used-in-mass-iphone-infection-campaign-targeted-secret-hardware-feature/\">4-year campaign backdoored iPhones using possibly the most advanced exploit ever | Ars Technica\u003C/a> · This is nuts. I can only imagine you get to this level of sophistication through years of concentrated effort to reverse engineer the hardware, or get otherwise stone-silent former Apple employees to spill their guts. Good to remember that every device can be hacked, almost like in the movies. Real life Mr Robot shit.\u003C/li>\n\u003Cli>\u003Ca href=\"https://jjtech.dev/reverse-engineering/imessage-explained/\">iMessage, explained - JJTech\u003C/a> · While we’re security-adjacent, there’s been quite a lot written about the recent attempts to skirt Apple’s iMessage walled garden. This is a good read.\u003C/li>\n\u003Cli>\u003Ca href=\"https://stackoverflow.blog/2023/12/25/is-software-getting-worse/\">Is software getting worse?\u003C/a> Nope.\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/Stirling-Tools/Stirling-PDF\">Stirling-Tools/Stirling-PDF: locally hosted web application that allows you to perform various operations on PDF files\u003C/a> · pdf tricks!\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"front-end\">Front End\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://blog.bitdrift.io/post/honey-i-shrunk-the-telemetry\">Honey, I shrunk the telemetry\u003C/a>\n\u003Cul>\n\u003Cli>Story Time: when I first heard of Bit Drift, I racked my brain trying to think of why their founder Matt Klein seemed so familiar to me. Was it because I used Envoy? I didn’t recall knowing any of the other core team members. It was a mystery.\u003C/li>\n\u003Cli>Finally it hit me: I met Matt very briefly in 1999 or 2000 when he was a college student at Duke University. He was with a group of my brother’s friends that briefly stayed at my house while they were on their way to some other spring/winter vacation destination in Florida.\u003C/li>\n\u003Cli>The reason why he stood out in my memory was simple: Matt introduced me to Linux. He clearly noticed that I had a bedroom full of computers all networked together and connected to a big stereo and several monitors. I was roughly aspiring to Neo’s desk in his real-life apartment.\u003C/li>\n\u003Cli>Matt showed me how to download distros from university servers (I remember getting Redhat and Slackware). From that moment I was hooked. It gave me a whole new way to use my computers! He also showed me \u003Ca href=\"https://www.linuxfromscratch.org/museum/lfs-museum/1.1/LFS-HOWTO-1.1-HTML/\">Linux From Scratch\u003C/a>, which I printed out and proceed to compile the a kernel from source and install everything to get to a gnome desktop. I remember showing my dad but he didn’t really get it.\u003C/li>\n\u003Cli>Anyway, Client Telemetry is a big problem! All of the serverside solutions tend towards bloated client implementations that drain batteries and kill performance. Bit Drift’s ring buffer memory and control plane architecture are both points of interest, as well as their choice to target native clients.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://meyerweb.com/eric/thoughts/2023/09/12/nuclear-anchored-sidenotes/\">Nuclear Anchored Sidenotes\u003C/a> · great exploration of an experimental API\u003C/li>\n\u003Cli>\u003Ca href=\"https://stylexjs.com/docs/learn/styling-ui/defining-styles/\">Defining styles | StyleX\u003C/a> · In 2023 I wrote more CSS than I would have guessed. While I like and appreciate \u003Ca href=\"/wiki/computers/web-development/front-end/zen-of-tailwind\">Tailwind CSS\u003C/a> I don’t think it’s the final word in styling. The main criticism that hits it is that carrying around tons of very long or complex class strings in a large project is as terrible as a dragon’s hoard of unorganized CSS.\n\u003Cul>\n\u003Cli>I don’t think StyleX has a future outside of Facebook, but seeing the compiler-driven, close-to-the-code approach while ditching all the strings is a step in the right direction.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.jim-nielsen.com/2023/examples-of-great-urls/\">Examples of Great URL Design - Jim Nielsen’s Blog\u003C/a> · No matter how many projects I do, I always come away feeling like I could have made better or different URL choices. Ask me about UUIDs sometime 🤡\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.joshwcomeau.com/css/custom-css-reset/\">Modern CSS Reset / Global Styles\u003C/a> · Funny story, I had been writing the CSS for this website by hand since moved from Next to Astro, and I hadn’t used a proper global reset from the outset. CSS is weird when you don’t reset things! I’ve been using resets in some fashion my entire career without reallt appreciating their value.\u003C/li>\n\u003Cli>\u003Ca href=\"https://nbarankings.theringer.com/\">The NBA, Ranked\u003C/a> · Good website!\u003C/li>\n\u003Cli>\u003Ca href=\"https://frontside.com/blog/2023-12-11-await-event-horizon/\">The await event horizon in JavaScript\u003C/a> · This is deeper than I’ve every bothered to go into JavaScripts concurrency problems.\u003C/li>\n\u003Cli>\u003Ca href=\"https://pagefind.app/\">Pagefind — Static low-bandwidth search at scale\u003C/a> · New-to-me but not new, and as I’ve been jamming a bit on search lately, this is in the to-investigate pile.\u003C/li>\n\u003Cli>\u003Ca href=\"https://wasmer.io/posts/introducing-the-wasmer-js-sdk\">Introducing the new Wasmer JS SDK\u003C/a> · More proof that web browsers are continuing to grow as a compile target for other platforms and runtimes. Having interop with other languages via WASM expands the types of tools that can be built. WASM hasn’t caught on in a major sense, but I feel like we’re going to look back in a few years and see browsers as a much richer and more capable platform than what we have today.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://medium.com/magnetic/52-things-i-learned-in-2023-a3bbb9f9323d\">52 things I learned in 2023.\u003C/a> · End of year lists are always popular and make the rounds this time of year. I am choosing to share this one because I had the tab open.\u003C/li>\n\u003Cli>\u003Ca href=\"https://music.ishkur.com/\">Ishkur’s Guide to Electronic Music\u003C/a> via \u003Ca href=\"https://www.dnalounge.com/backstage/log/2023/12/16.html\">jwz\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://ia.net/topics/ia-writer-fountain-template\">The iA Writer Template for Screenwriters\u003C/a> · Back in college, I spent a lot of time in Final Draft and still carry the battle scars. iA Writer, on the other hand, has been making joyful software that I’vehappily been using for more than a decade, so I was stoked when I heard about their screenwriting template. It’s inspired me to look back on my old work and maybe write a little bit of new stuff.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.stripe.press/poor-charlies-almanack/\">Poor Charlie’s Almanack: The Essential Wit and Wisdom of Charles T. Munger\u003C/a> · This should be required reading for everyone. I wish I had gotten on to this way earlier in my career, having only found out about it 4-5 years ago. Charlie was a great American and a singular thinker. We are blessed to have such a volume.\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/Aphantasia\">Aphantasia - Wikipedia\u003C/a> · The diversity of human experience blows my mind, and I can picture that quite vividly in a variety of different ways, which itself is not universal. Some people lack the ability to project mental images at all. Brains are tricky!\u003C/li>\n\u003Cli>\u003Ca href=\"https://thejollyteapot.com/november-2023-blend\">November blend of links\u003C/a> · A very nice website that is also a link dump.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.johnhodgman.com/post/131161007023/judge-john-hodgman-settled-law\">JOHN HODGMAN — Judge John Hodgman Settled Law\u003C/a> · These are all great and true, especially the Tom Waits rule. You cannot make your friends like everything you like!\u003C/li>\n\u003Cli>\u003Ca href=\"https://archive.org/details/Boardwatch1994-12/page/n7/mode/2up\">Boardwatch Magazine 1994-12 : Boardwatch Magazine : Free Download, Borrow, and Streaming : Internet Archive\u003C/a> · also from jwz. I am a sucker for old tech magazines, and I had never seen Boardwatch before. Hours of fun to be had flipping through the archive here.\u003C/li>\n\u003C/ul>",{"headings":595,"imagePaths":600,"frontmatter":601},[596,597,598,599],{"depth":27,"slug":301,"text":302},{"depth":27,"slug":539,"text":540},{"depth":27,"slug":423,"text":424},{"depth":27,"slug":429,"text":430},[],{"title":582,"slug":579,"description":583,"cover":590,"heroAlt":585,"pubDate":584},"2023/links-january-2023",{"id":602,"data":604,"body":609,"filePath":610,"assetImports":611,"digest":613,"rendered":614},{"title":605,"description":312,"pubDate":606,"heroAlt":607,"cover":608},"Links, January 2023","Jan 31 2023","unrelenting landscape - Stable Diffusion v1.5","__ASTRO_IMAGE_../../../assets/572e05d7-c02a-4e21-b7b9-d52984b79a5a.png","I'm making good on tab purging this year. Now featuring favorites pulled from my RSS reader!\n\nEvery month (or whenever I get to it) I use the [SessionBuddy](https://chrome.google.com/webstore/detail/session-buddy/edacconmaakjimmfgnblocblbcdcpbko) extension to export a list of all of my open tabs, so that I can trap them in a mirror and hurl them out into space.\n\n### Media Diet\n  - [Feedbin](https://feedbin.com/) – I have begun slowly ease back into RSS after more than a decade away.\n\n    RSS was both good and bad for me in the past. I enjoyed it thoroughly back in the day, but I remember Google Reader was starting to feel like an overflowing inbox rather than a stroll in the park. Feeds, chronological or otherwise, came to dominate my internet consumption since Google Reader shut down. I never replaced it with anything. It was a mixture of dead blogs and hyperactive feeds from publishers. [Chris Coyier made a list of all of his feeds, which is a neat idea](https://chriscoyier.net/2023/01/05/a-big-pile-of-personal-developer-designer-blogs-in-an-opml-file/). I'm not looking to get all of them, but I should look through them and see if anything strikes me.\n  - [tools for finding information on the internet | Roman Hauksson](https://roman.computer/finding_information/) – Finding things online is underrated. This is a great list of tools, some of which I know and use, like [metaphor.systems](https://metaphor.systems) and [anna's archive](https://annas-archive.org)\n  - [RSS Club - daverupert.com](https://daverupert.com/rss-club/) - very cool idea (shh!)\n\n### AI\n  - [Wolfram|Alpha as the Way to Bring Computational Knowledge Superpowers to ChatGPT—Stephen Wolfram Writings](https://writings.stephenwolfram.com/2023/01/wolframalpha-as-the-way-to-bring-computational-knowledge-superpowers-to-chatgpt/)\n    - [GPT+WolframAlpha+Whisper - a Hugging Face Space by JavaFXpert](https://huggingface.co/spaces/JavaFXpert/Chat-GPT-LangChain)\n    - Systems for orchestrating feedback loops and re-entrant style processing on top of one-shot models are starting to pop up, and this is a clever example of how LLMs can be scripted and patched into other tools to produce novel results. Watch this space.\n  - [isekaidev/stable.art: Photoshop plugin for Stable Diffusion with Automatic1111 as backend (locally or with Google Colab)](https://github.com/isekaidev/stable.art) – There's \"fast\" and then there's \"the first 6 months of the Stable Diffusion era\" fast. Too many papers, models, and demos to even look at. This one sticks out for being one of many in the category of enriching \"old media\" tools with AI models. \n  - [Streaming OpenAI completions with the Vercel Edge Runtime](https://www.beskar.co/blog/streaming-openai-completions-vercel-edge) — Really belongs to the \"code\" heading but the AI-adjacency lands it here. Truly some black magic going on here, this must have been a real pain to figure out how to piece together. The Web API-only compute tier continues to evolve in novel ways.\n  - [Stratechery - AI and the Big Five](https://stratechery.com/2023/ai-and-the-big-five/) – Long read that amounts to \"the story up until now.\" Essential reading.\n\n### Social Web\n  - [A Brief History & Ethos of the Digital Garden](https://maggieappleton.com/garden-history) – I absolutely love this idea. It is a very inspiring vision for what the personal web can and should be. Blogging is not the only modality of self-publishing! It's a good one but not the only game in town. I want to make good on the challenge here and start a few digital gardens here.\n  - [Adding Webmentions to Your Site](https://rknight.me/adding-webmentions-to-your-site/)\n  - [cloudflare/wildebeest: Wildebeest is an ActivityPub and Mastodon-compatible server](https://github.com/cloudflare/wildebeest)\n  - [microfeed/microfeed: a lightweight cms self-hosted on cloudflare, for podcasts, blogs, photos, videos, documents, and curated urls.](https://github.com/microfeed/microfeed)\n\n### Tech Nostalgia\n  - [Apple Lisa: Still More to Uncover](https://computerhistory.org/blog/apple-lisa-still-more-to-uncover/) – I have never used a Lisa but I've been fascinated with this era of computing since I was 13 and saw the made for tv movie Pirates of Silicon Valley (1999) about young Steve Jobs and Bill Gates. Part of it touches on the Lisa and so I've always had a vision of it in the back of my head that more or less lines up with what it really was. I really need to make it to the computer history museum someday!\n  - [Mac 30th Anniversary Icons](https://rknightuk.github.io/mac-30-font-svg/) – This was widely shared and very well done, even the \"garbage can\" Mac tower gets a treatment.\n\n### Opinion Section\n  - [Editorial: Scarcity, regulation, and the abundance society](https://www.frontiersin.org/articles/10.3389/frma.2022.1104460/full)\n  - [Software and its Discontents, January 2023, Part 1](https://laughingmeme.org//2023/01/16/software-and-its-discontents-part-1.html)\n  - [Some reasons to work on productivity and velocity](https://danluu.com/productivity-velocity/)\n  - [Five Mildly Anti-Buddhist Essays - by Sasha Chapin](https://sashachapin.substack.com/p/five-mildly-anti-buddhist-essays)\n  - [The Artist Whose Book Covers Distilled the Nineteen-Eighties | The New Yorker](https://www.newyorker.com/books/page-turner/the-artist-whose-book-covers-distilled-the-nineteen-eighties)\n  - [Actually, Japan has changed a lot - by Noah Smith](https://noahpinion.substack.com/p/actually-japan-has-changed-a-lot)\n  - [Pluralistic: Tiktok’s enshittification (21 Jan 2023) – Pluralistic: Daily links from Cory Doctorow](https://pluralistic.net/2023/01/21/potemkin-ai/)\n\n### Code\n  - [Reducing Go Execution Tracer Overhead With Frame Pointer Unwinding](https://blog.felixge.de/reducing-gos-execution-tracer-overhead-with-frame-pointer-unwinding/)\n  - [The Magic of Small Databases](https://tomcritchlow.com/2023/01/27/small-databases/)\n  - [A Better Way to Work With Number and Date Inputs in JavaScript](https://www.builder.io/blog/numbers-and-dates)\n  - [google/cdc-file-transfer: Tools for synching and streaming files from Windows to Linux](https://github.com/google/cdc-file-transfer)\n  - [Building Resilient Organizations](https://forgeorganizing.org/article/building-resilient-organizations)\n  - [Streaming OpenAI completions with the Vercel Edge Runtime](https://www.beskar.co/blog/streaming-openai-completions-vercel-edge)","src/content/writing/2023/links-january-2023.md",[612],"../../../assets/572e05d7-c02a-4e21-b7b9-d52984b79a5a.png","d21ca59420755395",{"html":615,"metadata":616},"\u003Cp>I’m making good on tab purging this year. Now featuring favorites pulled from my RSS reader!\u003C/p>\n\u003Cp>Every month (or whenever I get to it) I use the \u003Ca href=\"https://chrome.google.com/webstore/detail/session-buddy/edacconmaakjimmfgnblocblbcdcpbko\">SessionBuddy\u003C/a> extension to export a list of all of my open tabs, so that I can trap them in a mirror and hurl them out into space.\u003C/p>\n\u003Ch3 id=\"media-diet\">Media Diet\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://feedbin.com/\">Feedbin\u003C/a> – I have begun slowly ease back into RSS after more than a decade away.\u003C/p>\n\u003Cp>RSS was both good and bad for me in the past. I enjoyed it thoroughly back in the day, but I remember Google Reader was starting to feel like an overflowing inbox rather than a stroll in the park. Feeds, chronological or otherwise, came to dominate my internet consumption since Google Reader shut down. I never replaced it with anything. It was a mixture of dead blogs and hyperactive feeds from publishers. \u003Ca href=\"https://chriscoyier.net/2023/01/05/a-big-pile-of-personal-developer-designer-blogs-in-an-opml-file/\">Chris Coyier made a list of all of his feeds, which is a neat idea\u003C/a>. I’m not looking to get all of them, but I should look through them and see if anything strikes me.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://roman.computer/finding_information/\">tools for finding information on the internet | Roman Hauksson\u003C/a> – Finding things online is underrated. This is a great list of tools, some of which I know and use, like \u003Ca href=\"https://metaphor.systems\">metaphor.systems\u003C/a> and \u003Ca href=\"https://annas-archive.org\">anna’s archive\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://daverupert.com/rss-club/\">RSS Club - daverupert.com\u003C/a> - very cool idea (shh!)\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"ai\">AI\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://writings.stephenwolfram.com/2023/01/wolframalpha-as-the-way-to-bring-computational-knowledge-superpowers-to-chatgpt/\">Wolfram|Alpha as the Way to Bring Computational Knowledge Superpowers to ChatGPT—Stephen Wolfram Writings\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://huggingface.co/spaces/JavaFXpert/Chat-GPT-LangChain\">GPT+WolframAlpha+Whisper - a Hugging Face Space by JavaFXpert\u003C/a>\u003C/li>\n\u003Cli>Systems for orchestrating feedback loops and re-entrant style processing on top of one-shot models are starting to pop up, and this is a clever example of how LLMs can be scripted and patched into other tools to produce novel results. Watch this space.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/isekaidev/stable.art\">isekaidev/stable.art: Photoshop plugin for Stable Diffusion with Automatic1111 as backend (locally or with Google Colab)\u003C/a> – There’s “fast” and then there’s “the first 6 months of the Stable Diffusion era” fast. Too many papers, models, and demos to even look at. This one sticks out for being one of many in the category of enriching “old media” tools with AI models.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.beskar.co/blog/streaming-openai-completions-vercel-edge\">Streaming OpenAI completions with the Vercel Edge Runtime\u003C/a> — Really belongs to the “code” heading but the AI-adjacency lands it here. Truly some black magic going on here, this must have been a real pain to figure out how to piece together. The Web API-only compute tier continues to evolve in novel ways.\u003C/li>\n\u003Cli>\u003Ca href=\"https://stratechery.com/2023/ai-and-the-big-five/\">Stratechery - AI and the Big Five\u003C/a> – Long read that amounts to “the story up until now.” Essential reading.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"social-web\">Social Web\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://maggieappleton.com/garden-history\">A Brief History &#x26; Ethos of the Digital Garden\u003C/a> – I absolutely love this idea. It is a very inspiring vision for what the personal web can and should be. Blogging is not the only modality of self-publishing! It’s a good one but not the only game in town. I want to make good on the challenge here and start a few digital gardens here.\u003C/li>\n\u003Cli>\u003Ca href=\"https://rknight.me/adding-webmentions-to-your-site/\">Adding Webmentions to Your Site\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/cloudflare/wildebeest\">cloudflare/wildebeest: Wildebeest is an ActivityPub and Mastodon-compatible server\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/microfeed/microfeed\">microfeed/microfeed: a lightweight cms self-hosted on cloudflare, for podcasts, blogs, photos, videos, documents, and curated urls.\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"tech-nostalgia\">Tech Nostalgia\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://computerhistory.org/blog/apple-lisa-still-more-to-uncover/\">Apple Lisa: Still More to Uncover\u003C/a> – I have never used a Lisa but I’ve been fascinated with this era of computing since I was 13 and saw the made for tv movie Pirates of Silicon Valley (1999) about young Steve Jobs and Bill Gates. Part of it touches on the Lisa and so I’ve always had a vision of it in the back of my head that more or less lines up with what it really was. I really need to make it to the computer history museum someday!\u003C/li>\n\u003Cli>\u003Ca href=\"https://rknightuk.github.io/mac-30-font-svg/\">Mac 30th Anniversary Icons\u003C/a> – This was widely shared and very well done, even the “garbage can” Mac tower gets a treatment.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"opinion-section\">Opinion Section\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.frontiersin.org/articles/10.3389/frma.2022.1104460/full\">Editorial: Scarcity, regulation, and the abundance society\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://laughingmeme.org//2023/01/16/software-and-its-discontents-part-1.html\">Software and its Discontents, January 2023, Part 1\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://danluu.com/productivity-velocity/\">Some reasons to work on productivity and velocity\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://sashachapin.substack.com/p/five-mildly-anti-buddhist-essays\">Five Mildly Anti-Buddhist Essays - by Sasha Chapin\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.newyorker.com/books/page-turner/the-artist-whose-book-covers-distilled-the-nineteen-eighties\">The Artist Whose Book Covers Distilled the Nineteen-Eighties | The New Yorker\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://noahpinion.substack.com/p/actually-japan-has-changed-a-lot\">Actually, Japan has changed a lot - by Noah Smith\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://pluralistic.net/2023/01/21/potemkin-ai/\">Pluralistic: Tiktok’s enshittification (21 Jan 2023) – Pluralistic: Daily links from Cory Doctorow\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"code\">Code\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://blog.felixge.de/reducing-gos-execution-tracer-overhead-with-frame-pointer-unwinding/\">Reducing Go Execution Tracer Overhead With Frame Pointer Unwinding\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://tomcritchlow.com/2023/01/27/small-databases/\">The Magic of Small Databases\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.builder.io/blog/numbers-and-dates\">A Better Way to Work With Number and Date Inputs in JavaScript\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/google/cdc-file-transfer\">google/cdc-file-transfer: Tools for synching and streaming files from Windows to Linux\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://forgeorganizing.org/article/building-resilient-organizations\">Building Resilient Organizations\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.beskar.co/blog/streaming-openai-completions-vercel-edge\">Streaming OpenAI completions with the Vercel Edge Runtime\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":617,"imagePaths":630,"frontmatter":631},[618,621,622,625,628,629],{"depth":79,"slug":619,"text":620},"media-diet","Media Diet",{"depth":79,"slug":301,"text":302},{"depth":79,"slug":623,"text":624},"social-web","Social Web",{"depth":79,"slug":626,"text":627},"tech-nostalgia","Tech Nostalgia",{"depth":79,"slug":573,"text":574},{"depth":79,"slug":426,"text":427},[],{"title":605,"slug":602,"description":312,"cover":612,"heroAlt":607,"pubDate":606},"2023/links-july-2023",{"id":632,"data":634,"body":640,"filePath":641,"assetImports":642,"digest":644,"rendered":645},{"title":635,"description":636,"pubDate":637,"heroAlt":638,"cover":639},"Links, July 2023","too many tabs, not enough time","July 31 2023","thinking about running in the mountains this month","__ASTRO_IMAGE_../../../assets/1690248820042-photorealistic-coastal-mountain-range-magic-hour.jpg","## AI\n\n* [SDXL – A settings guide by Replicate](https://sdxl.replicate.dev/) - most important AI link this month, how to generate cats real good\n* [Large language models, explained with a minimum of math and jargon](https://www.understandingai.org/p/large-language-models-explained-with)\n* [AI Research Blog - The Transformer Blueprint: A Holistic Guide to the Transformer Neural Network Architecture](https://deeprevision.github.io/posts/001-transformer/)\n* [How to Use AI to Do Stuff: An Opinionated Guide](https://www.oneusefulthing.org/p/how-to-use-ai-to-do-stuff-an-opinionated)\n* [The Next Token of Progress: 4 Unlocks on the Generative AI Horizon | Andreessen Horowitz](https://a16z.com/2023/06/23/the-next-token-of-progress-4-unlocks-on-the-generative-ai-horizon/)\n* [So you want to build your own open source ChatGPT-style chatbot... - Mozilla Hacks - the Web developer blog](https://hacks.mozilla.org/2023/07/so-you-want-to-build-your-own-open-source-chatbot/)\n\n## Front-End\n\n* [Creating a flexible design token taxonomy for Intuit’s Design System | by Nate Baldwin | Jun, 2023 | Medium](https://medium.com/@NateBaldwin/creating-a-flexible-design-token-taxonomy-for-intuits-design-system-81c8ff55c59b)\n* [Writing CSS In 2023: Is It Any Different Than A Few Years Ago? — Smashing Magazine](https://www.smashingmagazine.com/2023/07/writing-css-2023/) - There really has been a watershed moment in the past few years, and CSS features have been popping up left and right.\n* [New Viewport Units](https://ishadeed.com/article/new-viewport-units/)\n* [Position Driven Styles](https://kizu.dev/position-driven-styles/)\n* [TypeScript and the dawn of gradual types](https://github.com/readme/featured/typescript-gradual-types)\n* [ffmprovisr](https://amiaopensource.github.io/ffmprovisr/) and [Activities and Exercises - ffmpeg-artschool](https://amiaopensource.github.io/ffmpeg-artschool/activities.html) - once upon a time I dreamed of doing things with film and video. In retrospect it was a brief couple of years, but one of the things that I did not learn in film school was how to manipulate _digital_ video outside of editing software. Luckily, I got to work on a project in the early days of [Quick Left](/cv.html#quick-left) that touched ffmpeg, and I've been a casual user of it ever since. Both of these links are interesting. The first is what you always want to have when using a dauntingly complex CLI like `ffmpeg`. The second link is mad science.  \n\n## Cozy Web\n\n* [Programmable Notes](https://maggieappleton.com/programmatic-notes)\n* [Work with the garage door up](https://notes.andymatuschak.org/Work_with_the_garage_door_up)\n* [How to write good prompts: using spaced repetition to create understanding](https://andymatuschak.org/prompts/)\n* [Multi-layered calendars « julian.digital](https://julian.digital/2023/07/06/multi-layered-calendars/)\n* [Sierra Creative Interpreter – Scripts](https://www.benshoof.org/blog/sci-scripts)\n* [Joins 13 Ways](https://justinjaffray.com/joins-13-ways/?a=b)\n* [The feeling of something waiting there for you](https://www.robinsloan.com/newsletters/feeling-of-something-waiting-there-for-you/) and;\n\t* [Lit up like a sparkler](https://www.robinsloan.com/newsletters/lit-up-like-a-sparkler/) - This is the first time that a tab is intentionally leaking from one month to the next. This set of links is just too good.\n\n## Books\n\n* [How Samuel R. Delany Reimagined Sci-Fi, Sex, and the City | The New Yorker](https://www.newyorker.com/magazine/2023/07/10/samuel-r-delany-profile) - I caved and upgraded my Apple account to bundle several separate accounts into a single bill, with the added benefit of Apple News+. I didn't realize that came with a large selections of free magazines like The New Yorker. I was a subscriber for several years but the print issues pile up quickly. This is a profile of a new-to-me author, Samuel R. Delany. I picked up Dhalgren and am reading it now.\n* ['The Overflowing Brain' by Torkel Klingberg](https://tertulia-moderna.blogspot.com/2010/12/overflowing-brain-by-torkel-klingberg.html)\n* [Digression 1 - PRECISION: How America Made Machines Make Machines - First Draft | Books in Progress](https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-1-precision-how-america-made-machines-make-machines/1)\n\n## Tech Misc.\n\n* [Building personal and organizational prestige | Irrational Exuberance](https://lethain.com/building-prestige/)\n* [Sentry Engineering](https://sentry.engineering/)\n* [Framework-defined infrastructure](https://vercel.com/blog/framework-defined-infrastructure)\n* [How Snowflake builds product - by Lenny Rachitsky](https://www.lennysnewsletter.com/p/how-snowflake-builds-product)\n* [Team Topologies](https://martinfowler.com/bliki/TeamTopologies.html)\n* [Regex engine internals as a library - Andrew Gallant's Blog](https://blog.burntsushi.net/regex-internals/)\n* [Fast · Patrick Collison](https://patrickcollison.com/fast)\n* [Welcome to The Net: every webpage from the 1995 movie The Net - Trivia Happy](https://triviahappy.com/articles/welcome-to-the-net-every-webpage-from-the-1995-movie-the-net)\n* [The Internet Tidal Wave](https://lettersofnote.com/2011/07/22/the-internet-tidal-wave/)","src/content/writing/2023/links-july-2023.md",[643],"../../../assets/1690248820042-photorealistic-coastal-mountain-range-magic-hour.jpg","b1b3d5c9a9375e7c",{"html":646,"metadata":647},"\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://sdxl.replicate.dev/\">SDXL – A settings guide by Replicate\u003C/a> - most important AI link this month, how to generate cats real good\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.understandingai.org/p/large-language-models-explained-with\">Large language models, explained with a minimum of math and jargon\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://deeprevision.github.io/posts/001-transformer/\">AI Research Blog - The Transformer Blueprint: A Holistic Guide to the Transformer Neural Network Architecture\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.oneusefulthing.org/p/how-to-use-ai-to-do-stuff-an-opinionated\">How to Use AI to Do Stuff: An Opinionated Guide\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://a16z.com/2023/06/23/the-next-token-of-progress-4-unlocks-on-the-generative-ai-horizon/\">The Next Token of Progress: 4 Unlocks on the Generative AI Horizon | Andreessen Horowitz\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://hacks.mozilla.org/2023/07/so-you-want-to-build-your-own-open-source-chatbot/\">So you want to build your own open source ChatGPT-style chatbot… - Mozilla Hacks - the Web developer blog\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"front-end\">Front-End\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://medium.com/@NateBaldwin/creating-a-flexible-design-token-taxonomy-for-intuits-design-system-81c8ff55c59b\">Creating a flexible design token taxonomy for Intuit’s Design System | by Nate Baldwin | Jun, 2023 | Medium\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.smashingmagazine.com/2023/07/writing-css-2023/\">Writing CSS In 2023: Is It Any Different Than A Few Years Ago? — Smashing Magazine\u003C/a> - There really has been a watershed moment in the past few years, and CSS features have been popping up left and right.\u003C/li>\n\u003Cli>\u003Ca href=\"https://ishadeed.com/article/new-viewport-units/\">New Viewport Units\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://kizu.dev/position-driven-styles/\">Position Driven Styles\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/readme/featured/typescript-gradual-types\">TypeScript and the dawn of gradual types\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://amiaopensource.github.io/ffmprovisr/\">ffmprovisr\u003C/a> and \u003Ca href=\"https://amiaopensource.github.io/ffmpeg-artschool/activities.html\">Activities and Exercises - ffmpeg-artschool\u003C/a> - once upon a time I dreamed of doing things with film and video. In retrospect it was a brief couple of years, but one of the things that I did not learn in film school was how to manipulate \u003Cem>digital\u003C/em> video outside of editing software. Luckily, I got to work on a project in the early days of \u003Ca href=\"/cv.html#quick-left\">Quick Left\u003C/a> that touched ffmpeg, and I’ve been a casual user of it ever since. Both of these links are interesting. The first is what you always want to have when using a dauntingly complex CLI like \u003Ccode>ffmpeg\u003C/code>. The second link is mad science.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"cozy-web\">Cozy Web\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://maggieappleton.com/programmatic-notes\">Programmable Notes\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://notes.andymatuschak.org/Work_with_the_garage_door_up\">Work with the garage door up\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://andymatuschak.org/prompts/\">How to write good prompts: using spaced repetition to create understanding\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://julian.digital/2023/07/06/multi-layered-calendars/\">Multi-layered calendars « julian.digital\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.benshoof.org/blog/sci-scripts\">Sierra Creative Interpreter – Scripts\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://justinjaffray.com/joins-13-ways/?a=b\">Joins 13 Ways\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.robinsloan.com/newsletters/feeling-of-something-waiting-there-for-you/\">The feeling of something waiting there for you\u003C/a> and;\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.robinsloan.com/newsletters/lit-up-like-a-sparkler/\">Lit up like a sparkler\u003C/a> - This is the first time that a tab is intentionally leaking from one month to the next. This set of links is just too good.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"books\">Books\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.newyorker.com/magazine/2023/07/10/samuel-r-delany-profile\">How Samuel R. Delany Reimagined Sci-Fi, Sex, and the City | The New Yorker\u003C/a> - I caved and upgraded my Apple account to bundle several separate accounts into a single bill, with the added benefit of Apple News+. I didn’t realize that came with a large selections of free magazines like The New Yorker. I was a subscriber for several years but the print issues pile up quickly. This is a profile of a new-to-me author, Samuel R. Delany. I picked up Dhalgren and am reading it now.\u003C/li>\n\u003Cli>\u003Ca href=\"https://tertulia-moderna.blogspot.com/2010/12/overflowing-brain-by-torkel-klingberg.html\">‘The Overflowing Brain’ by Torkel Klingberg\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-1-precision-how-america-made-machines-make-machines/1\">Digression 1 - PRECISION: How America Made Machines Make Machines - First Draft | Books in Progress\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech-misc\">Tech Misc.\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://lethain.com/building-prestige/\">Building personal and organizational prestige | Irrational Exuberance\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://sentry.engineering/\">Sentry Engineering\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://vercel.com/blog/framework-defined-infrastructure\">Framework-defined infrastructure\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.lennysnewsletter.com/p/how-snowflake-builds-product\">How Snowflake builds product - by Lenny Rachitsky\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://martinfowler.com/bliki/TeamTopologies.html\">Team Topologies\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.burntsushi.net/regex-internals/\">Regex engine internals as a library - Andrew Gallant’s Blog\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://patrickcollison.com/fast\">Fast · Patrick Collison\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://triviahappy.com/articles/welcome-to-the-net-every-webpage-from-the-1995-movie-the-net\">Welcome to The Net: every webpage from the 1995 movie The Net - Trivia Happy\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://lettersofnote.com/2011/07/22/the-internet-tidal-wave/\">The Internet Tidal Wave\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":648,"imagePaths":661,"frontmatter":662},[649,650,652,655,658],{"depth":27,"slug":301,"text":302},{"depth":27,"slug":423,"text":651},"Front-End",{"depth":27,"slug":653,"text":654},"cozy-web","Cozy Web",{"depth":27,"slug":656,"text":657},"books","Books",{"depth":27,"slug":659,"text":660},"tech-misc","Tech Misc.",[],{"title":635,"slug":632,"description":636,"cover":643,"heroAlt":638,"pubDate":637},"2023/links-jun-2023",{"id":663,"data":665,"body":671,"filePath":672,"assetImports":673,"digest":675,"rendered":676},{"title":666,"description":667,"pubDate":668,"heroAlt":669,"cover":670},"Links, June 2023","like a playlist but for my open tabs","June 30 2023","( A cityscape with a river running through it, highrises and buildings on either side. In the foreground there is a park with people relaxing and children playing. The sky is a deep blue. ) High Detail, Tungsten Color Film. trending on artstation hq deviantart. by artist laurie greasley. — Stable Diffusion v1.5","__ASTRO_IMAGE_../../../assets/2e6dfddd-8124-405f-a98f-09c7c06ca044.png","June 2023.\n\nThe summer solstice in the Northern hemisphere came and went. I was busy:\n* I started turning up the dial on my running volume in preparation for the Headlands 50k in August.\n* We took a road trip down to Los Angeles to see my favorite band, King Gizzard and the Lizard Wizard, play their biggest gig yet at the Hollywood Bowl.\n* We also spent a day at DisneyLand (but not California Adventure), which was my first time in a Disney park since the early 2000s and my first visit to the original location.\n\n_Gee, a couple things happened in tech this month:_\n\n* Reddit decided that it did not want all the free labor from 3rd party app developers and moderators, and that a thumb in the eye would be better for both parties.\n* The AI hype wave has crested? As normal media moves on and all the \"big news\" around the possibilities of LLMs sobers up after 6+ months of drunken chatter. \n* Twitter is still broken and about to break a whole lot more, with Facebook throwing it's hat in the ring in the upcoming months.\n* Apple announced that the headset is indeed real (admittedly, I was skeptical) and has a name but not a launch date. It promises... something interesting. For next year. Something different than what Facebook tried for the better part of a decade? Maybe. At least the industrial design will be high quality, that part is already clear.\n\nWith all that as context, I humbly submit this batch of links.\n\n## Code\n* [Who will understand consciousness?: Software engineers will be first to grok consciousness](https://bower.sh/who-will-understand-consciousness) - This is the closest thing to an AI post in the list and it resonated with me a lot. I've been reading [A Thousand Brains](https://worldcat.org/en/title/1275359186) by Jeff Hawkins recently and this post feels related.\n* [The Secret Sauce behind 100K context window in LLMs: all tricks in one place](https://blog.gopenai.com/how-to-speed-up-llms-and-use-100k-context-window-all-tricks-in-one-place-ffd40577b4c) - While the breathless tech press might have slowed down, the technical explainer posts have kept up! This is about the various techniques used to expand context windows, or how to send more text in and get more text back from LLMs.\n* [cohost! - \"how (not) to write a pipeline\"](https://cohost.org/tef/post/1764930-how-not-to-write-a) - Writing software is hard because you can easily describe a whole system with a few terms and think you know what you would have to build to make it work. But then, a fractal-like explosion of features and sub-features and errors and edge-cases to handle gets in the way of it ever being as simple as you first thought it would be. It's like having a box, knowing it's outer dimensions, and then having an uncountable number of equally sized boxes fall out of it. \n* [Unexpected downsides of UUID keys in PostgreSQL - CYBERTEC](https://www.cybertec-postgresql.com/en/unexpected-downsides-of-uuid-keys-in-postgresql/)\n  * I had defaulted to using UUIDs over incremental numeric IDs a few years ago but now this has me questioning the reasoning behind it. Absolutely this is something that I cargo-culted along the way.\n  * [jetpack-io/typeid: Type-safe, K-sortable, globally unique identifier inspired by Stripe IDs](https://github.com/jetpack-io/typeid)- Relatedly, this seems somewhat better? At least it overcomes some of the ergonomic annoyances of UUIDs.\n* [juliangarnier/anime: JavaScript animation engine](https://github.com/juliangarnier/anime/) - This is slick; Great docs and demos.\n* [SwiftUI stole the best parts of React…and my heart](https://www.mux.com/blog/swiftui-against-react) - I've used SwiftUI a few times in the last 2 years. I'm not an iOS developer but I found it to be an easier entry point for what I'd like to build than SDKs of years past.\n* [I turned JS into a compiled language (for fun and Wasm) — surma.dev](https://surma.dev/things/compile-js/index.html)\n  * [Bringing Javascript to WebAssembly for Shopify Functions (2023)](https://shopify.engineering/javascript-in-webassembly-for-shopify-functions)\n  * These are two links that were in the \"this should exist\" folder in 2021/22 that have now materialized. As the web platform continues to evolve, there are lots of gaps that one could imagine being filled by a small, isolated, interoperable runtime that supports everyone's (least) favorite language.\n* [Scaling the Linear Sync Engine - Linear Blog](https://linear.app/blog/scaling-the-linear-sync-engine) - Websockets are hard. Syncing is hard. Linear is very good. Good scaling story here.\n\n## Tech Journalism\n* [How Google Reader died — and why the web misses it more than ever - The Verge](https://www.theverge.com/23778253/google-reader-death-2013-rss-social) - Ok so I will admit that I mainly use these posts like a playlist for bookmarks. I haven't been \"good\" at bookmarks since 2009, and despite paying for a decade of Pinboard, I rarely use it for it's intended purpose. Google Reader was in heavy rotation for me back then, along with the \"social\" bookmarking site delicio.us. I've [written before](/writing/links-march-2023#rss) about RSS coming back into my media diet as mainstream social media continues to wane in usefulness. Nostalgia for Google Reader is misplaced. It was just a website, and now we have better websites.\n* [Tech's Reckoning](https://wheresyoured.at/p/techs-reckoning) - Wherein Ed Z correctly identifies the trend toward absurd headcount growth, but missed the opportunity to point out how nakedly stupid \"hypergrowth\" is in absence of a coherent business model to support it.\n* [The Damaging Results of The Mandated Return to Office is Worse Than We Thought | Entrepreneur](https://www.entrepreneur.com/growing-a-business/the-damaging-results-of-the-mandated-return-to-office-is/454043) - Nuance is one of the harder things for most people to grasp, when two contradictory ideas can be equally true. Certain functions benefit massively from in person interactions and don't translate well to remote teams. Other work is much better and healthier when optimized for remote workers. There's not silver bullet, each requires effort and imposes different constraints.\n* [Remote Communication Concepts — The Holloway Guide to Remote Work](https://www.holloway.com/g/remote-work/sections/remote-communication-concepts) - The other half of the previous argument.\n* [First Impressions of Vision Pro and VisionOS](https://daringfireball.net/2023/06/first_impressions_of_vision_pro_and_visionos)\n* [News from WWDC23: WebKit Features in Safari 17 beta](https://webkit.org/blog/14205/news-from-wwdc23-webkit-features-in-safari-17-beta/)\n\n## Misc\n* [Lit up like a sparkler](https://www.robinsloan.com/newsletters/lit-up-like-a-sparkler/) - Of the many newsletters I get over the course of the month, this was a nice entry from author Robin Sloan. Eclectic selection of curiosities and links.\n* [archives.design](https://archives.design/) - Bunch of neat \"further reading\" in here. Glad to live in an era where it's very difficult to run out of something interesting to read.\n* [North Bay Python](https://2023.northbaypython.org/) - A conference in the North Bay! I may very well attend. Single track conferences can be hit or miss, but I have always preferred a small community organized conference to a corporate-mega-conf.","src/content/writing/2023/links-june-2023.md",[674],"../../../assets/2e6dfddd-8124-405f-a98f-09c7c06ca044.png","f63f403e9efb1ab0",{"html":677,"metadata":678},"\u003Cp>June 2023.\u003C/p>\n\u003Cp>The summer solstice in the Northern hemisphere came and went. I was busy:\u003C/p>\n\u003Cul>\n\u003Cli>I started turning up the dial on my running volume in preparation for the Headlands 50k in August.\u003C/li>\n\u003Cli>We took a road trip down to Los Angeles to see my favorite band, King Gizzard and the Lizard Wizard, play their biggest gig yet at the Hollywood Bowl.\u003C/li>\n\u003Cli>We also spent a day at DisneyLand (but not California Adventure), which was my first time in a Disney park since the early 2000s and my first visit to the original location.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>Gee, a couple things happened in tech this month:\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>Reddit decided that it did not want all the free labor from 3rd party app developers and moderators, and that a thumb in the eye would be better for both parties.\u003C/li>\n\u003Cli>The AI hype wave has crested? As normal media moves on and all the “big news” around the possibilities of LLMs sobers up after 6+ months of drunken chatter.\u003C/li>\n\u003Cli>Twitter is still broken and about to break a whole lot more, with Facebook throwing it’s hat in the ring in the upcoming months.\u003C/li>\n\u003Cli>Apple announced that the headset is indeed real (admittedly, I was skeptical) and has a name but not a launch date. It promises… something interesting. For next year. Something different than what Facebook tried for the better part of a decade? Maybe. At least the industrial design will be high quality, that part is already clear.\u003C/li>\n\u003C/ul>\n\u003Cp>With all that as context, I humbly submit this batch of links.\u003C/p>\n\u003Ch2 id=\"code\">Code\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://bower.sh/who-will-understand-consciousness\">Who will understand consciousness?: Software engineers will be first to grok consciousness\u003C/a> - This is the closest thing to an AI post in the list and it resonated with me a lot. I’ve been reading \u003Ca href=\"https://worldcat.org/en/title/1275359186\">A Thousand Brains\u003C/a> by Jeff Hawkins recently and this post feels related.\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.gopenai.com/how-to-speed-up-llms-and-use-100k-context-window-all-tricks-in-one-place-ffd40577b4c\">The Secret Sauce behind 100K context window in LLMs: all tricks in one place\u003C/a> - While the breathless tech press might have slowed down, the technical explainer posts have kept up! This is about the various techniques used to expand context windows, or how to send more text in and get more text back from LLMs.\u003C/li>\n\u003Cli>\u003Ca href=\"https://cohost.org/tef/post/1764930-how-not-to-write-a\">cohost! - “how (not) to write a pipeline”\u003C/a> - Writing software is hard because you can easily describe a whole system with a few terms and think you know what you would have to build to make it work. But then, a fractal-like explosion of features and sub-features and errors and edge-cases to handle gets in the way of it ever being as simple as you first thought it would be. It’s like having a box, knowing it’s outer dimensions, and then having an uncountable number of equally sized boxes fall out of it.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.cybertec-postgresql.com/en/unexpected-downsides-of-uuid-keys-in-postgresql/\">Unexpected downsides of UUID keys in PostgreSQL - CYBERTEC\u003C/a>\n\u003Cul>\n\u003Cli>I had defaulted to using UUIDs over incremental numeric IDs a few years ago but now this has me questioning the reasoning behind it. Absolutely this is something that I cargo-culted along the way.\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/jetpack-io/typeid\">jetpack-io/typeid: Type-safe, K-sortable, globally unique identifier inspired by Stripe IDs\u003C/a>- Relatedly, this seems somewhat better? At least it overcomes some of the ergonomic annoyances of UUIDs.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/juliangarnier/anime/\">juliangarnier/anime: JavaScript animation engine\u003C/a> - This is slick; Great docs and demos.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.mux.com/blog/swiftui-against-react\">SwiftUI stole the best parts of React…and my heart\u003C/a> - I’ve used SwiftUI a few times in the last 2 years. I’m not an iOS developer but I found it to be an easier entry point for what I’d like to build than SDKs of years past.\u003C/li>\n\u003Cli>\u003Ca href=\"https://surma.dev/things/compile-js/index.html\">I turned JS into a compiled language (for fun and Wasm) — surma.dev\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://shopify.engineering/javascript-in-webassembly-for-shopify-functions\">Bringing Javascript to WebAssembly for Shopify Functions (2023)\u003C/a>\u003C/li>\n\u003Cli>These are two links that were in the “this should exist” folder in 2021/22 that have now materialized. As the web platform continues to evolve, there are lots of gaps that one could imagine being filled by a small, isolated, interoperable runtime that supports everyone’s (least) favorite language.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://linear.app/blog/scaling-the-linear-sync-engine\">Scaling the Linear Sync Engine - Linear Blog\u003C/a> - Websockets are hard. Syncing is hard. Linear is very good. Good scaling story here.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech-journalism\">Tech Journalism\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.theverge.com/23778253/google-reader-death-2013-rss-social\">How Google Reader died — and why the web misses it more than ever - The Verge\u003C/a> - Ok so I will admit that I mainly use these posts like a playlist for bookmarks. I haven’t been “good” at bookmarks since 2009, and despite paying for a decade of Pinboard, I rarely use it for it’s intended purpose. Google Reader was in heavy rotation for me back then, along with the “social” bookmarking site delicio.us. I’ve \u003Ca href=\"/writing/links-march-2023#rss\">written before\u003C/a> about RSS coming back into my media diet as mainstream social media continues to wane in usefulness. Nostalgia for Google Reader is misplaced. It was just a website, and now we have better websites.\u003C/li>\n\u003Cli>\u003Ca href=\"https://wheresyoured.at/p/techs-reckoning\">Tech’s Reckoning\u003C/a> - Wherein Ed Z correctly identifies the trend toward absurd headcount growth, but missed the opportunity to point out how nakedly stupid “hypergrowth” is in absence of a coherent business model to support it.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.entrepreneur.com/growing-a-business/the-damaging-results-of-the-mandated-return-to-office-is/454043\">The Damaging Results of The Mandated Return to Office is Worse Than We Thought | Entrepreneur\u003C/a> - Nuance is one of the harder things for most people to grasp, when two contradictory ideas can be equally true. Certain functions benefit massively from in person interactions and don’t translate well to remote teams. Other work is much better and healthier when optimized for remote workers. There’s not silver bullet, each requires effort and imposes different constraints.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.holloway.com/g/remote-work/sections/remote-communication-concepts\">Remote Communication Concepts — The Holloway Guide to Remote Work\u003C/a> - The other half of the previous argument.\u003C/li>\n\u003Cli>\u003Ca href=\"https://daringfireball.net/2023/06/first_impressions_of_vision_pro_and_visionos\">First Impressions of Vision Pro and VisionOS\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://webkit.org/blog/14205/news-from-wwdc23-webkit-features-in-safari-17-beta/\">News from WWDC23: WebKit Features in Safari 17 beta\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.robinsloan.com/newsletters/lit-up-like-a-sparkler/\">Lit up like a sparkler\u003C/a> - Of the many newsletters I get over the course of the month, this was a nice entry from author Robin Sloan. Eclectic selection of curiosities and links.\u003C/li>\n\u003Cli>\u003Ca href=\"https://archives.design/\">archives.design\u003C/a> - Bunch of neat “further reading” in here. Glad to live in an era where it’s very difficult to run out of something interesting to read.\u003C/li>\n\u003Cli>\u003Ca href=\"https://2023.northbaypython.org/\">North Bay Python\u003C/a> - A conference in the North Bay! I may very well attend. Single track conferences can be hit or miss, but I have always preferred a small community organized conference to a corporate-mega-conf.\u003C/li>\n\u003C/ul>",{"headings":679,"imagePaths":685,"frontmatter":686},[680,681,684],{"depth":27,"slug":426,"text":427},{"depth":27,"slug":682,"text":683},"tech-journalism","Tech Journalism",{"depth":27,"slug":429,"text":430},[],{"title":666,"slug":663,"description":667,"cover":674,"heroAlt":669,"pubDate":668},"2023/links-march-2023",{"id":687,"data":689,"body":695,"filePath":696,"assetImports":697,"digest":699,"rendered":700},{"title":690,"description":691,"pubDate":692,"heroAlt":693,"cover":694},"Links, March 2023","The AI Overlords have approved of these links","Mar 31 2023","( an old couple on a hill watching the sunset ) traditional painting style muted colors by Vincent van Gogh Tilt Shift, Cinestill 800T 35mm. best of flickr. by artist laurie greasley. - Stable Diffusion v1.5","__ASTRO_IMAGE_../../../assets/746fd781-3cbe-4e87-9a8c-4481848b5658.webp","Yes, I had all of these tabs open.\n\n## AI\n\n[gpt-4.pdf](https://cdn.openai.com/papers/gpt-4.pdf) - I'll start with the headline. I could stop here and that would be enough links for the entire month. I really could. So much is being written every day about AI that you need an LLM to generate a summary if you want to keep up.\n\n#### Opinion Section\n\n[ChatGPT gets its Wolfram superpowers](https://writings.stephenwolfram.com/2023/03/chatgpt-gets-its-wolfram-superpowers/) - And just like that, a large subset of criticism levied at LLMs (\"they don't tell the _truth_!\" and \"their knowledge can't be up-to-date!\") gets washed away by integration with a _strongly correct_ existing system.\n\n[Cheating is All You Need](https://about.sourcegraph.com/blog/cheating-is-all-you-need) - I strongly agree with the sentiment in the title. One thing that's always drawn me to programming is how easy it is to \"cheat\" by finding working code and modifying it until it does what you want. Now that LLMs are collasping the slope of the learning curve, tools that help you \"cheat\" your way to a working program will soon be common place. The goal of programming is unchanged!\n\n[Large language models are having their Stable Diffusion moment](https://simonwillison.net/2023/Mar/11/llama/) - Exciting developments in generative AI - ControlNet leads the pack, while LLaMA model allows GPT-3 class models to run on personal hardware. Potential for harm, but let's steer it towards positive applications.\n\n[The Waluigi Effect (mega-post) - LessWrong](https://www.lesswrong.com/posts/D7PumeYTDPfBTp3i7/the-waluigi-effect-mega-post) - An example from last month's link about (somewhat) 'failing the mirror test', but interesting reading none the less. Large language models like GPT-3/4 can give wrong answers due to training on internet misconceptions, lies, and memes. The Waluigi Effect explains how LLMs interpret prompts. Flattery may not work and simulacra theory shows RLHF won't eliminate deceptive waluigis.\n\n#### OSS\n\n[dan-kwiat/openai-edge](https://github.com/dan-kwiat/openai-edge) - Vercel's edge supports streaming, but the OpenAI client does not (yet).\n\n[microsoft/visual-chatgpt](https://github.com/microsoft/visual-chatgpt) - Multi-modal LLMs are going to be undeniably useful. I'm still in awe that image-gen and text-gen are co-evolving because there's so much obvious potential to combine them in interesting ways. It's hard to imagine a future where having a single model that can handle many modalities won't come in handy.\n\n[microsoft/X-Decoder](https://github.com/microsoft/X-Decoder) and [unum-cloud/uform](https://github.com/unum-cloud/uform) On that same note, progress towards collapsing the world into a single, interchangable latent space of patterns continues apace.\n\n\n\n#### Stable Diffusion\n- [MagicPrompt StableDiffusion](https://huggingface.co/Gustavosta/MagicPrompt-Stable-Diffusion?text=Portrait+of)\n- [ControlNet in 🧨 Diffusers](https://huggingface.co/blog/controlnet)\n- [HuggingFace Publishes LoRA Scripts For Efficient Stable Diffusion Fine-Tuning - MarkTechPost](https://www.marktechpost.com/2023/02/18/huggingface-publishes-lora-scripts-for-efficient-stable-diffusion-fine-tuning/)\n- [Zero-shot image-to-text generation with BLIP-2](https://huggingface.co/blog/blip-2)\n\n#### Lil' tools\n\n- [AnyPageGPT - Chrome Web Store](https://chrome.google.com/webstore/detail/anypagegpt/keelaohbekengdipnogignilgbabhhec)\n- [ChatGPT search engine - Chrome Web Store](https://chrome.google.com/webstore/detail/chatgpt-search-engine/copaigionceiijiolkfnbgpcnkeclhhd/related)\n- [Use this command to get suggestions on how to do things on the command line.](https://gist.github.com/spullara/0fc3e88150f66179017b9aa1758d49d2)\n\n\n## Computer Chronicles\n* [Something Pretty Right: A History of Visual Basic | Retool](https://retool.com/visual-basic/)\n* [50 Years Later, We’re Still Living in the Xerox Alto’s World - IEEE Spectrum](https://spectrum.ieee.org/xerox-alto)\n* [Architects, Anti-Patterns, and Organizational Fuckery](https://charity.wtf/2023/03/09/architects-anti-patterns-and-organizational-fuckery/)\n* [Systems design explains the world: volume 1 - apenwarr](https://apenwarr.ca/log/20201227)\n* [Looking Back at Postgres [pdf]](https://arxiv.org/pdf/1901.01973.pdf)\n\n## Tech\n* [You're Missing the Point of Promises](https://blog.domenic.me/youre-missing-the-point-of-promises/)\n* [The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)\n* [Sentry’s Frontend Tests: Migrating from Enzyme to React Testing Library](https://blog.sentry.io/2023/02/23/sentrys-frontend-tests-migrating-from-enzyme-to-react-testing-library/)\n* [Defer: Zero infrastructure Node.js background jobs.](https://docs.defer.run/platform/executions/)\n* [TypeScript's Migration to Modules - TypeScript](https://devblogs.microsoft.com/typescript/typescripts-migration-to-modules/)\n* [Reflecting on my first failed product](https://mcarter.me/posts/my-first-failed-product)\n* [You Broke Reddit: The Pi-Day Outage](https://www.reddit.com/r/RedditEng/comments/11xx5o0/you_broke_reddit_the_piday_outage/)\n\n\n## Blogs & Newsletters\n\n* [Writing – Eric Bailey](https://ericwbailey.design/published/)\n  * Specifically [I doubled-down on RSS](https://ericwbailey.website/published/i-doubled-down-on-rss/). Me too! This was really helpful. [(See below)](#rss)\n  * And also [[SC 2.4.4] If you are so inclined • Buttondown](https://buttondown.email/ericwbailey/archive/sc-244/). Favorite new extremely online person to read.\n* [The End of the English Major | The New Yorker](https://www.newyorker.com/magazine/2023/03/06/the-end-of-the-english-major)\n* [Pentiment - by Adrian Hon - Have You Played?](https://adrianhon.substack.com/p/pentiment)\n\n## Misc\n* [How to use the en dash, em dash and hyphen (also ndash, mdash)](https://www.punctuationmatters.com/en-dash-em-dash-hyphen/)\n* [Whom to Follow | Find New Fediverse Accounts](https://whomtofollow.com/?account=sambreed%40mastodon.social)\n\n\u003Ca name=\"rss\">\u003C/a>\n## RSS\n\nMuch has been written about the resurgence of RSS. Here's my story:\n\nI used RSS quite a bit from 2008 - 2012 but my usage fell off as my consultancy grew and more and more of my time was devoted to working on client projects instead of working on my RSS backlog. When Google Reader was killed, I was relieved. I had tens of thousands of unreads in an uncurated heap. That incarnation kept me away from RSS readers almost entirely for a decade.\n\nBut time passes and seasons change, and in 2022 my media habits were shifting yet again, this time away from Twitter and newspapers. RSS was still there and still worked better than ever. I found a good reader in Feedbin and got to work building up a _well curated_ list of blogs, newsletters, and Twitter feeds.\n\nHere's the shotgun-blast of one tool and all of the things I starred in feedbin. RIP to the ability to follow twitter feeds there.\n\n* [Twitter OPML Export](https://opml.glitch.me/) - Recommended by Eric Bailey in the posts linked above, this is a tool for helping shake the good RSS feeds out of your twitter follows.\n* https://twitter.com/cramforce/status/1640820365378338816\n* https://stratechery.com/2023/chatgpt-learns-computing/\n* https://www.jarretthousenorth.com/2023/03/21/old-mix-faith-and-blues/\n* https://twitter.com/wesbos/status/998993638578376709\n* https://kottke.org/23/03/kottke-is-25-years-old-today\n* https://twitter.com/cramforce/status/1633140273885872128\n* https://lethain.com/engineering-onboarding-programs/\n\n## YouTube\n* [The Future is a Dead Mall - Decentraland and the Metaverse - YouTube](https://www.youtube.com/watch?v=EiZhdpLXZ8Q)","src/content/writing/2023/links-march-2023.md",[698],"../../../assets/746fd781-3cbe-4e87-9a8c-4481848b5658.webp","1a2598ed9853c01f",{"html":701,"metadata":702},"\u003Cp>Yes, I had all of these tabs open.\u003C/p>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cp>\u003Ca href=\"https://cdn.openai.com/papers/gpt-4.pdf\">gpt-4.pdf\u003C/a> - I’ll start with the headline. I could stop here and that would be enough links for the entire month. I really could. So much is being written every day about AI that you need an LLM to generate a summary if you want to keep up.\u003C/p>\n\u003Ch4 id=\"opinion-section\">Opinion Section\u003C/h4>\n\u003Cp>\u003Ca href=\"https://writings.stephenwolfram.com/2023/03/chatgpt-gets-its-wolfram-superpowers/\">ChatGPT gets its Wolfram superpowers\u003C/a> - And just like that, a large subset of criticism levied at LLMs (“they don’t tell the \u003Cem>truth\u003C/em>!” and “their knowledge can’t be up-to-date!”) gets washed away by integration with a \u003Cem>strongly correct\u003C/em> existing system.\u003C/p>\n\u003Cp>\u003Ca href=\"https://about.sourcegraph.com/blog/cheating-is-all-you-need\">Cheating is All You Need\u003C/a> - I strongly agree with the sentiment in the title. One thing that’s always drawn me to programming is how easy it is to “cheat” by finding working code and modifying it until it does what you want. Now that LLMs are collasping the slope of the learning curve, tools that help you “cheat” your way to a working program will soon be common place. The goal of programming is unchanged!\u003C/p>\n\u003Cp>\u003Ca href=\"https://simonwillison.net/2023/Mar/11/llama/\">Large language models are having their Stable Diffusion moment\u003C/a> - Exciting developments in generative AI - ControlNet leads the pack, while LLaMA model allows GPT-3 class models to run on personal hardware. Potential for harm, but let’s steer it towards positive applications.\u003C/p>\n\u003Cp>\u003Ca href=\"https://www.lesswrong.com/posts/D7PumeYTDPfBTp3i7/the-waluigi-effect-mega-post\">The Waluigi Effect (mega-post) - LessWrong\u003C/a> - An example from last month’s link about (somewhat) ‘failing the mirror test’, but interesting reading none the less. Large language models like GPT-3/4 can give wrong answers due to training on internet misconceptions, lies, and memes. The Waluigi Effect explains how LLMs interpret prompts. Flattery may not work and simulacra theory shows RLHF won’t eliminate deceptive waluigis.\u003C/p>\n\u003Ch4 id=\"oss\">OSS\u003C/h4>\n\u003Cp>\u003Ca href=\"https://github.com/dan-kwiat/openai-edge\">dan-kwiat/openai-edge\u003C/a> - Vercel’s edge supports streaming, but the OpenAI client does not (yet).\u003C/p>\n\u003Cp>\u003Ca href=\"https://github.com/microsoft/visual-chatgpt\">microsoft/visual-chatgpt\u003C/a> - Multi-modal LLMs are going to be undeniably useful. I’m still in awe that image-gen and text-gen are co-evolving because there’s so much obvious potential to combine them in interesting ways. It’s hard to imagine a future where having a single model that can handle many modalities won’t come in handy.\u003C/p>\n\u003Cp>\u003Ca href=\"https://github.com/microsoft/X-Decoder\">microsoft/X-Decoder\u003C/a> and \u003Ca href=\"https://github.com/unum-cloud/uform\">unum-cloud/uform\u003C/a> On that same note, progress towards collapsing the world into a single, interchangable latent space of patterns continues apace.\u003C/p>\n\u003Ch4 id=\"stable-diffusion\">Stable Diffusion\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://huggingface.co/Gustavosta/MagicPrompt-Stable-Diffusion?text=Portrait+of\">MagicPrompt StableDiffusion\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/controlnet\">ControlNet in 🧨 Diffusers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.marktechpost.com/2023/02/18/huggingface-publishes-lora-scripts-for-efficient-stable-diffusion-fine-tuning/\">HuggingFace Publishes LoRA Scripts For Efficient Stable Diffusion Fine-Tuning - MarkTechPost\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/blip-2\">Zero-shot image-to-text generation with BLIP-2\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"lil-tools\">Lil’ tools\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://chrome.google.com/webstore/detail/anypagegpt/keelaohbekengdipnogignilgbabhhec\">AnyPageGPT - Chrome Web Store\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://chrome.google.com/webstore/detail/chatgpt-search-engine/copaigionceiijiolkfnbgpcnkeclhhd/related\">ChatGPT search engine - Chrome Web Store\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://gist.github.com/spullara/0fc3e88150f66179017b9aa1758d49d2\">Use this command to get suggestions on how to do things on the command line.\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"computer-chronicles\">Computer Chronicles\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://retool.com/visual-basic/\">Something Pretty Right: A History of Visual Basic | Retool\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://spectrum.ieee.org/xerox-alto\">50 Years Later, We’re Still Living in the Xerox Alto’s World - IEEE Spectrum\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://charity.wtf/2023/03/09/architects-anti-patterns-and-organizational-fuckery/\">Architects, Anti-Patterns, and Organizational Fuckery\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://apenwarr.ca/log/20201227\">Systems design explains the world: volume 1 - apenwarr\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://arxiv.org/pdf/1901.01973.pdf\">Looking Back at Postgres [pdf]\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech\">Tech\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://blog.domenic.me/youre-missing-the-point-of-promises/\">You’re Missing the Point of Promises\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://missing.csail.mit.edu/\">The Missing Semester of Your CS Education\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.sentry.io/2023/02/23/sentrys-frontend-tests-migrating-from-enzyme-to-react-testing-library/\">Sentry’s Frontend Tests: Migrating from Enzyme to React Testing Library\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://docs.defer.run/platform/executions/\">Defer: Zero infrastructure Node.js background jobs.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://devblogs.microsoft.com/typescript/typescripts-migration-to-modules/\">TypeScript’s Migration to Modules - TypeScript\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://mcarter.me/posts/my-first-failed-product\">Reflecting on my first failed product\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.reddit.com/r/RedditEng/comments/11xx5o0/you_broke_reddit_the_piday_outage/\">You Broke Reddit: The Pi-Day Outage\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"blogs--newsletters\">Blogs &#x26; Newsletters\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://ericwbailey.design/published/\">Writing – Eric Bailey\u003C/a>\n\u003Cul>\n\u003Cli>Specifically \u003Ca href=\"https://ericwbailey.website/published/i-doubled-down-on-rss/\">I doubled-down on RSS\u003C/a>. Me too! This was really helpful. \u003Ca href=\"#rss\">(See below)\u003C/a>\u003C/li>\n\u003Cli>And also \u003Ca href=\"https://buttondown.email/ericwbailey/archive/sc-244/\">[SC 2.4.4] If you are so inclined • Buttondown\u003C/a>. Favorite new extremely online person to read.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.newyorker.com/magazine/2023/03/06/the-end-of-the-english-major\">The End of the English Major | The New Yorker\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://adrianhon.substack.com/p/pentiment\">Pentiment - by Adrian Hon - Have You Played?\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.punctuationmatters.com/en-dash-em-dash-hyphen/\">How to use the en dash, em dash and hyphen (also ndash, mdash)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://whomtofollow.com/?account=sambreed%40mastodon.social\">Whom to Follow | Find New Fediverse Accounts\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Ca name=\"rss\">\u003C/a>\u003C/p>\n\u003Ch2 id=\"rss\">RSS\u003C/h2>\n\u003Cp>Much has been written about the resurgence of RSS. Here’s my story:\u003C/p>\n\u003Cp>I used RSS quite a bit from 2008 - 2012 but my usage fell off as my consultancy grew and more and more of my time was devoted to working on client projects instead of working on my RSS backlog. When Google Reader was killed, I was relieved. I had tens of thousands of unreads in an uncurated heap. That incarnation kept me away from RSS readers almost entirely for a decade.\u003C/p>\n\u003Cp>But time passes and seasons change, and in 2022 my media habits were shifting yet again, this time away from Twitter and newspapers. RSS was still there and still worked better than ever. I found a good reader in Feedbin and got to work building up a \u003Cem>well curated\u003C/em> list of blogs, newsletters, and Twitter feeds.\u003C/p>\n\u003Cp>Here’s the shotgun-blast of one tool and all of the things I starred in feedbin. RIP to the ability to follow twitter feeds there.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://opml.glitch.me/\">Twitter OPML Export\u003C/a> - Recommended by Eric Bailey in the posts linked above, this is a tool for helping shake the good RSS feeds out of your twitter follows.\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/cramforce/status/1640820365378338816\">https://twitter.com/cramforce/status/1640820365378338816\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://stratechery.com/2023/chatgpt-learns-computing/\">https://stratechery.com/2023/chatgpt-learns-computing/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.jarretthousenorth.com/2023/03/21/old-mix-faith-and-blues/\">https://www.jarretthousenorth.com/2023/03/21/old-mix-faith-and-blues/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/wesbos/status/998993638578376709\">https://twitter.com/wesbos/status/998993638578376709\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://kottke.org/23/03/kottke-is-25-years-old-today\">https://kottke.org/23/03/kottke-is-25-years-old-today\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/cramforce/status/1633140273885872128\">https://twitter.com/cramforce/status/1633140273885872128\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://lethain.com/engineering-onboarding-programs/\">https://lethain.com/engineering-onboarding-programs/\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"youtube\">YouTube\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.youtube.com/watch?v=EiZhdpLXZ8Q\">The Future is a Dead Mall - Decentraland and the Metaverse - YouTube\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":703,"imagePaths":730,"frontmatter":731},[704,705,707,710,713,716,719,720,723,724,727],{"depth":27,"slug":301,"text":302},{"depth":706,"slug":573,"text":574},4,{"depth":706,"slug":708,"text":709},"oss","OSS",{"depth":706,"slug":711,"text":712},"stable-diffusion","Stable Diffusion",{"depth":706,"slug":714,"text":715},"lil-tools","Lil’ tools",{"depth":27,"slug":717,"text":718},"computer-chronicles","Computer Chronicles",{"depth":27,"slug":539,"text":540},{"depth":27,"slug":721,"text":722},"blogs--newsletters","Blogs & Newsletters",{"depth":27,"slug":429,"text":430},{"depth":27,"slug":725,"text":726},"rss","RSS",{"depth":27,"slug":728,"text":729},"youtube","YouTube",[],{"title":690,"slug":687,"description":691,"cover":698,"heroAlt":693,"pubDate":692},"static-sites-with-next-js.html",{"id":732,"data":734,"body":738,"filePath":739,"digest":740,"rendered":741},{"title":735,"description":736,"pubDate":737},"How to Make a Static Website with Next.js","I recently used Next.js 3 to make a static blog. Learn how I did it!","Aug 15 2017","# How to Make a Static Website with Next.js\n\n![make a static next.js blog](/img/next-blog-1.gif)\n\n👋  Hey, so I recently figured out how to upgrade _this very website_ to use [Next.js 3][next] as a static blog engine. No longer is my corner of the internet a cobbled-together mess of node and of shell scripts. No, now it's a fully-fledged modern JavaScript app with [Next.js 3][next]!\n\nNow I can write and edit posts in Markdown and can even drop in custom HTML if I need to (I mean how else am I gonna incorporate `\u003Cmarquee>` tags into my writing?). With [Next.js][next], I get all sorts of fancy features like service worker prefetch, code splitting, and SPA style route changes–all for free. _Here's how I did it._\n\n[If you haven't heard of Next.js it's a pretty cool, live reloading, totally-out-of-your-way tool for building webapps with React. You should use it.](https://zeit.co/blog/next3)\n\nAs soon as the Zeit team announced plans to support serverless static exports, I was ready to go: I had already tried out Next.js for a few side projects, but didn't want to worry about running a server (even if it's free and painless) to keep my website up. I even tried scraping a compiled Next.js 2 app with `wget` to make a static site, so Next's official support for static sites had me running out of excuses.\n\nHere were my requirements for my humble website:\n\n* Fully static and deployable on Github pages.\n* Author posts in Markdown, with support for HTML things like `\u003Cdetails>` tags.\n* _Fast._ Nobody's got time for slow websites.\n* Support my CSS preferences: [Tachyons](http://tachyons.io/) and some custom CSS compiled with [postcss](http://postcss.org/)\n\nNext.js seems to have checked off all my boxes, so I dug in and started prototyping.\n\n> \"Plan to throw one away; you will, anyhow\".\n\n\u003Ccite>\n— \u003Ci>The Mythical Man-Month\u003C/i>, Fred Brooks (as popularized in \u003Ci>The Cathedral and the Bazaar\u003C/i> by Eric Raymond)\n\u003C/cite>\n\n[I built a prototype on the Next.js 3 beta](https://github.com/wookiehangover/wookie-next) to kick the tires. I learned a few things along the way but didn't end up with a website that was ready to deploy.\n\nToo bad I wasn't very happy with my first pass. I added a necessary-but-clunky build step to convert my old posts to Next's routing model. The plan was to compile my markdown posts and write out files to the `pages/` directory. Next.js would pick them up whenever they changed, but I didn't like having to run two build scripts.\n\n*Next's biggest selling point is having live reloading figured out already!* Having to run more than one script felt wrong, so I abandoned the prototype.\n\n\u003Cdetails class=\"pa4 ba b--rainbows mv4\">\n\u003Csummary>\n  \u003Ci>A brief aside re: a nifty markdown rendering pipeline with Unified and Remark that should probably be in it's own post, but laziness.\u003C/i>\n\u003C/summary>\n\n> Every good work of software starts by scratching a developer's personal itch.\n\n\u003Ccite>\n— \u003Ci>The Cathedral and the Bazaar\u003C/i>, Eric Raymond\n\u003C/cite>\n\n### 🐰 Rabbit Hole: React from HTML Markdown\n\nOne of the itches I _really_ wanted to scratch was the minor annoyance of having to use `__dangerouslySetInnerHtml` to use most off-the-shelf markdown libraries with React. I even made it a bit harder on myself by lazily abusing markdown and sprinkling bits of markup in many of my posts, since most React components that render markdown tend to fall back to _dangerouslySet_ instead of parsing the markdown to generate a valid React component for the entire markdown document. This isn't a new or unsolved problem, so I did some research and ended up geeking out on text processing and abstract syntax trees. Turns out that there are already a bunch of well documented AST parser/compilers that support markdown on npm!\n\nI really didn't want to make clients do any of the parsing work. Even though parsing markdown can be optimized to be fast in modern browsers, making users download additional JavaScript and spend CPU time to convert posts clientside just didn't sit well with me.\n\nI decided that in order to handle all of my posts with their mix of markdown and html, I would use [Unified][unified] to make a rendering pipeline to go from markdown to HTML to a set of React components. There were already unified plugins for everything I wanted to do!\n\nThere was even a [ready-made solution for my exact gripe about `__dangerouslySetInnerHtml`](https://github.com/mapbox/remark-react)! Unfortunately, remark-react handles _most_ cases but didn't want to parse the raw HTMl generously sprinkled throughout my posts. Either way, I had found a small ecosystem of node modules that would make short work of lots of text processing problems. Neat!\n\nHere's what the code ended up looking like:\n\n```js\nconst unified = require('unified')\n\nunified()\n  .use(require('remark-parse'), {\n    gfm: true,\n    footnotes: true\n  })\n  .use(require('remark-rehype'), {\n    allowDangerousHTML: true\n  })\n  .use(require('rehype-raw'))\n  .use(require('rehype-react'))\n```\n\nTo my surprise and delight, that process pipeline resulted in a totally usable React component! But it still would require some redundant processing on the client since the React component was being generated dynamically from a string of markdown. \n\nSo how do you _cache_ a React component? Like, a whole component, not just the serialization of it's virtual dom. React provides tools to server render components in multiple ways, but you can't easily generate _jsx_ from a dynamically generated components. But there _is_ a technique for dealing with a React as a compile output of an AST, evidenced by [react-rehype](https://github.com/rhysd/rehype-react) at the end of that Unified markdown pipeline.\n\nReact has a dead simple API for creating components without JSX in `React.createElement()`. Since it's just plain JavaScript and doesn't require any functions or non-json data structures, it turns out that you can make a JSON structure that represents a set of React components pretty easily. I had run into a use case for this same trick at work, so I put it to use again here: I modified the last step of my Unified pipeline to return JSON instead of a React component. [`rehype-react`](https://github.com/rhysd/rehype-react) made this a cinch, since they allow you to pass a custom method for `createElement`.\n\n```js\nremarkPipeline().use(rehypeReact, {\n  createElement: (type, props, children) => ({ type, props, children })\n})\n```\n\nFrom there, I made a [simple component](https://github.com/wookiehangover/wookiehangover.com/blob/master/src/components/component-tree.js) to transform the result from [`rehype-react`](https://github.com/rhysd/rehype-react) back into a React component:\n\n```jsx\n\u003CComponentTree components={components} />\n```\n\nNow I have an pipeline where you can put markdown with crazy embedded HTML in one end, and well-formed _serializable_ React components come out of the other end. With that, I can write out JavaScript files containing valid React components without having to reconstruct any JSX literals from the rehype AST. Either way that's a step that I wanted to be transparent when I was writing posts. Mission accomplished 😎\n\nThere are a couple of benefits from going through all that trouble:\n\n* [remark plugins](https://github.com/wooorm/remark/blob/master/doc/plugins.md) can do just about anything. Seriously. I was able to add code highlighting _while I was writing this post_ with 1 npm install, 1 line of JavaScript, and 1 line of CSS!\n* Unified's [vfile](https://github.com/vfile/vfile) format makes adding post metadata easy.\n* No format lock in. When the wind blows a differnt direction and React falls out of favor, outputting to a different format will be easy.\n\u003C/details>\n\n## Markdown ➡️ Webpack ➡️ Next.js\n\nI wanted to write in Markdown and have Next.js pick up the changes automatically.\n\nBy default, next will use any JavaScript modules that export a React component in your `pages/` directory. While writing markdown next to code is possible, it's gross. Same goes for duplicating the same boilerplate file for each post and importing the markdown source from some other directory. I wanted to skip all that an go straight from Markdown into Next's build and compile pipeline.\n\n💡 The light bulb moment came when I realized the power of Next's support for custom Webpack configuration.\n\nA  [webpack loader](https://webpack.js.org/concepts/loaders/) can transform markdown source files into modules on the spot! And better yet, I already had a build script from my prototype that was doing most of what I needed to do in the loader. I needed to change was how my build script found out about files (reading them from disk vs. passed in by webpack) and how it output the results (again, writing to disk vs. passing the result back to webpack). The loader plugin interface was dead simple:\n\n```js\nmodule.exports = function(source) {\n  const done = this.async()\n\n  renderPost(source, this.resourcePath)\n    .catch(done).then(post => done(null, post))\n}\n```\n\nWhere `renderPost(source, resourcePath)` was the middle bit of my prototyped static rendering pipeline, refactored to only need a string of the file content and the path of the file being rendered. This is one of the easiest changes to make, since it took a method formerly reliant on _side effects_, namely reading and writing to disk, and made it a pure function. Any time you can make a method that's passed an input and return a result, you should. Decomposing your assumptions about side effects will almost always save time. I learned this from Gary Bernhardt's talk _[Boundaries](https://www.destroyallsoftware.com/talks/boundaries)_, and I remember it every time I see it.\n\nThe last step was to add it to the webpack extension point in `next.config.js`:\n\n```js\nmodule.exports = {\n  webpack(config) {\n    config.module.rules.push({\n      test: /\\.html\\.js$/,\n      include: './pages/writing',\n      loader: './src/post-loader'\n    })\n    return config\n  }\n}\n```\n\n## Building and Deploying\n\nUnlike in my earlier versions, Next.js 3 supports creating a complete static site from any next app with `next export`. To tell it what routes and pages to export, you need to add some configuration to `next.config.js`. Here's what mine looks like:\n\n```js\nmodule.exports = {\n  exportPathMap() {\n    return {\n      \"/\": { page: \"/\" },\n      \"/cv.html\": { page: \"/cv.html\" },\n      \"/writing/2016-reading-list.html\": { page: \"/writing/2016-reading-list.html\" },\n      \"/writing/2017-reading-list.html\": { page: \"/writing/2017-reading-list.html\" },\n      // ...\n    }\n  }\n}\n```\n\nThen I changed my build step to run `next build && next export --docs` and I with surprisingly little drama was ready to deploy to Github pages!\n\nNormally I'd be worried that I'd have missed some minor detail in a major change like swapping out the entire backend of a website, but in essence what I was doing here wasn't all that big of a change: my static HTML, JavaScript, and CSS in the `docs/` directory was still there, but was being built by a different tool chain. I pushed the first commit with the switch to Next.js and waited patiently while the build ran on Travis CI.\n\n...And that was it. I had more or less completely moved my static site into a totally modern React app with Next.js. The whole thing is [open source](https://github.com/wookiehangover/wookiehangover.com), so feel free to kick the tires and ask questions if you have any 😊\n\nHere are the relevant parts of the app:\n\n* **post-loader.js** – [webpack loader](https://github.com/wookiehangover/wookiehangover.com/blob/master/src/post-loader.js)\n* **static-sites-with-next-js.html.js** – [a markdown post with embedded HTML](https://github.com/wookiehangover/wookiehangover.com/blob/master/pages/writing/static-sites-with-next-js.html.js)\n* **react-to-hast.js** – [markdown compiler with Unified.js](https://github.com/wookiehangover/wookiehangover.com/blob/master/src/react-to-hast.js)\n* **component-tree.js** – [React component for rendering JSON AST](https://github.com/wookiehangover/wookiehangover.com/blob/master/src/components/component-tree.js)\n\n### Gotcha's! 😝\n\nA few snags I ran into:\n\n* Github pages still perversely retains some of it's Jekyll roots, and ignores file and directory names that start with an underscore 🙄\n  * **Fix:** add `.nojekyll` to your `docs/` directory (or whatever is configured in the \"Pages\" portion of your repo config in Github)\n* The `.html.js` file extension on the posts was because I wanted backwards compatibilty with my static html version, which used plain old html files\n  * _Minor annoyance:_ `next export` adds directories for every static file to avoid the .html extension showing up in the path, but now I have urls with trailing slashes.\n  * If I ever want to change a URL (like to drop the `.html` extension because it's not 1998), I'll need to figure out how to manage the redirects.\n* I need to remember to add new posts to `next.config.js`, which I seem pathologically incapable of. I'll probably make the webpack plugin emit a JSON file with all the post metadata, but I haven't done that yet.\n\n\u003Cmarquee>And here's that `\u003Cmarquee>` tag to prove I wasn't joking about supporting arbitraty HTML in posts. And thanks [@ddtrejo](https://twitter.com/ddtrejo) for feedback and edits!\u003C/marquee>\n\n[unified]: https://unifiedjs.github.io/\n[next]: https://github.com/zeit/next.js","src/content/writing/static-sites-with-next-js.html.md","bcf7357467f2f378",{"html":742,"metadata":743},"\u003Ch1 id=\"how-to-make-a-static-website-with-nextjs\">How to Make a Static Website with Next.js\u003C/h1>\n\u003Cp>\u003Cimg src=\"/img/next-blog-1.gif\" alt=\"make a static next.js blog\">\u003C/p>\n\u003Cp>👋  Hey, so I recently figured out how to upgrade \u003Cem>this very website\u003C/em> to use \u003Ca href=\"https://github.com/zeit/next.js\">Next.js 3\u003C/a> as a static blog engine. No longer is my corner of the internet a cobbled-together mess of node and of shell scripts. No, now it’s a fully-fledged modern JavaScript app with \u003Ca href=\"https://github.com/zeit/next.js\">Next.js 3\u003C/a>!\u003C/p>\n\u003Cp>Now I can write and edit posts in Markdown and can even drop in custom HTML if I need to (I mean how else am I gonna incorporate \u003Ccode>&#x3C;marquee>\u003C/code> tags into my writing?). With \u003Ca href=\"https://github.com/zeit/next.js\">Next.js\u003C/a>, I get all sorts of fancy features like service worker prefetch, code splitting, and SPA style route changes–all for free. \u003Cem>Here’s how I did it.\u003C/em>\u003C/p>\n\u003Cp>\u003Ca href=\"https://zeit.co/blog/next3\">If you haven’t heard of Next.js it’s a pretty cool, live reloading, totally-out-of-your-way tool for building webapps with React. You should use it.\u003C/a>\u003C/p>\n\u003Cp>As soon as the Zeit team announced plans to support serverless static exports, I was ready to go: I had already tried out Next.js for a few side projects, but didn’t want to worry about running a server (even if it’s free and painless) to keep my website up. I even tried scraping a compiled Next.js 2 app with \u003Ccode>wget\u003C/code> to make a static site, so Next’s official support for static sites had me running out of excuses.\u003C/p>\n\u003Cp>Here were my requirements for my humble website:\u003C/p>\n\u003Cul>\n\u003Cli>Fully static and deployable on Github pages.\u003C/li>\n\u003Cli>Author posts in Markdown, with support for HTML things like \u003Ccode>&#x3C;details>\u003C/code> tags.\u003C/li>\n\u003Cli>\u003Cem>Fast.\u003C/em> Nobody’s got time for slow websites.\u003C/li>\n\u003Cli>Support my CSS preferences: \u003Ca href=\"http://tachyons.io/\">Tachyons\u003C/a> and some custom CSS compiled with \u003Ca href=\"http://postcss.org/\">postcss\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>Next.js seems to have checked off all my boxes, so I dug in and started prototyping.\u003C/p>\n\u003Cblockquote>\n\u003Cp>“Plan to throw one away; you will, anyhow”.\u003C/p>\n\u003C/blockquote>\n\u003Ccite>\n— \u003Ci>The Mythical Man-Month\u003C/i>, Fred Brooks (as popularized in \u003Ci>The Cathedral and the Bazaar\u003C/i> by Eric Raymond)\n\u003C/cite>\n\u003Cp>\u003Ca href=\"https://github.com/wookiehangover/wookie-next\">I built a prototype on the Next.js 3 beta\u003C/a> to kick the tires. I learned a few things along the way but didn’t end up with a website that was ready to deploy.\u003C/p>\n\u003Cp>Too bad I wasn’t very happy with my first pass. I added a necessary-but-clunky build step to convert my old posts to Next’s routing model. The plan was to compile my markdown posts and write out files to the \u003Ccode>pages/\u003C/code> directory. Next.js would pick them up whenever they changed, but I didn’t like having to run two build scripts.\u003C/p>\n\u003Cp>\u003Cem>Next’s biggest selling point is having live reloading figured out already!\u003C/em> Having to run more than one script felt wrong, so I abandoned the prototype.\u003C/p>\n\u003Cdetails class=\"pa4 ba b--rainbows mv4\">\n\u003Csummary>\n  \u003Ci>A brief aside re: a nifty markdown rendering pipeline with Unified and Remark that should probably be in it's own post, but laziness.\u003C/i>\n\u003C/summary>\n\u003Cblockquote>\n\u003Cp>Every good work of software starts by scratching a developer’s personal itch.\u003C/p>\n\u003C/blockquote>\n\u003Ccite>\n— \u003Ci>The Cathedral and the Bazaar\u003C/i>, Eric Raymond\n\u003C/cite>\n\u003Ch3 id=\"-rabbit-hole-react-from-html-markdown\">🐰 Rabbit Hole: React from HTML Markdown\u003C/h3>\n\u003Cp>One of the itches I \u003Cem>really\u003C/em> wanted to scratch was the minor annoyance of having to use \u003Ccode>__dangerouslySetInnerHtml\u003C/code> to use most off-the-shelf markdown libraries with React. I even made it a bit harder on myself by lazily abusing markdown and sprinkling bits of markup in many of my posts, since most React components that render markdown tend to fall back to \u003Cem>dangerouslySet\u003C/em> instead of parsing the markdown to generate a valid React component for the entire markdown document. This isn’t a new or unsolved problem, so I did some research and ended up geeking out on text processing and abstract syntax trees. Turns out that there are already a bunch of well documented AST parser/compilers that support markdown on npm!\u003C/p>\n\u003Cp>I really didn’t want to make clients do any of the parsing work. Even though parsing markdown can be optimized to be fast in modern browsers, making users download additional JavaScript and spend CPU time to convert posts clientside just didn’t sit well with me.\u003C/p>\n\u003Cp>I decided that in order to handle all of my posts with their mix of markdown and html, I would use \u003Ca href=\"https://unifiedjs.github.io/\">Unified\u003C/a> to make a rendering pipeline to go from markdown to HTML to a set of React components. There were already unified plugins for everything I wanted to do!\u003C/p>\n\u003Cp>There was even a \u003Ca href=\"https://github.com/mapbox/remark-react\">ready-made solution for my exact gripe about \u003Ccode>__dangerouslySetInnerHtml\u003C/code>\u003C/a>! Unfortunately, remark-react handles \u003Cem>most\u003C/em> cases but didn’t want to parse the raw HTMl generously sprinkled throughout my posts. Either way, I had found a small ecosystem of node modules that would make short work of lots of text processing problems. Neat!\u003C/p>\n\u003Cp>Here’s what the code ended up looking like:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> unified\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#61AFEF\"> require\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">'unified'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">unified\u003C/span>\u003Cspan style=\"color:#ABB2BF\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  .\u003C/span>\u003Cspan style=\"color:#61AFEF\">use\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#61AFEF\">require\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">'remark-parse'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">), {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">    gfm\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#D19A66\">true\u003C/span>\u003Cspan style=\"color:#ABB2BF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">    footnotes\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#D19A66\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  .\u003C/span>\u003Cspan style=\"color:#61AFEF\">use\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#61AFEF\">require\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">'remark-rehype'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">), {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">    allowDangerousHTML\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#D19A66\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  .\u003C/span>\u003Cspan style=\"color:#61AFEF\">use\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#61AFEF\">require\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">'rehype-raw'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  .\u003C/span>\u003Cspan style=\"color:#61AFEF\">use\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#61AFEF\">require\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">'rehype-react'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">))\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>To my surprise and delight, that process pipeline resulted in a totally usable React component! But it still would require some redundant processing on the client since the React component was being generated dynamically from a string of markdown.\u003C/p>\n\u003Cp>So how do you \u003Cem>cache\u003C/em> a React component? Like, a whole component, not just the serialization of it’s virtual dom. React provides tools to server render components in multiple ways, but you can’t easily generate \u003Cem>jsx\u003C/em> from a dynamically generated components. But there \u003Cem>is\u003C/em> a technique for dealing with a React as a compile output of an AST, evidenced by \u003Ca href=\"https://github.com/rhysd/rehype-react\">react-rehype\u003C/a> at the end of that Unified markdown pipeline.\u003C/p>\n\u003Cp>React has a dead simple API for creating components without JSX in \u003Ccode>React.createElement()\u003C/code>. Since it’s just plain JavaScript and doesn’t require any functions or non-json data structures, it turns out that you can make a JSON structure that represents a set of React components pretty easily. I had run into a use case for this same trick at work, so I put it to use again here: I modified the last step of my Unified pipeline to return JSON instead of a React component. \u003Ca href=\"https://github.com/rhysd/rehype-react\">\u003Ccode>rehype-react\u003C/code>\u003C/a> made this a cinch, since they allow you to pass a custom method for \u003Ccode>createElement\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">remarkPipeline\u003C/span>\u003Cspan style=\"color:#ABB2BF\">().\u003C/span>\u003Cspan style=\"color:#61AFEF\">use\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">rehypeReact\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">  createElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: (\u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">type\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">props\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">children\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) \u003C/span>\u003Cspan style=\"color:#C678DD\">=>\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> ({ \u003C/span>\u003Cspan style=\"color:#E06C75\">type\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">props\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">children\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">})\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>From there, I made a \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com/blob/master/src/components/component-tree.js\">simple component\u003C/a> to transform the result from \u003Ca href=\"https://github.com/rhysd/rehype-react\">\u003Ccode>rehype-react\u003C/code>\u003C/a> back into a React component:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"jsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E5C07B\">ComponentTree\u003C/span>\u003Cspan style=\"color:#D19A66;font-style:italic\"> components\u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#C678DD\">{\u003C/span>\u003Cspan style=\"color:#E06C75\">components\u003C/span>\u003Cspan style=\"color:#C678DD\">}\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> />\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Now I have an pipeline where you can put markdown with crazy embedded HTML in one end, and well-formed \u003Cem>serializable\u003C/em> React components come out of the other end. With that, I can write out JavaScript files containing valid React components without having to reconstruct any JSX literals from the rehype AST. Either way that’s a step that I wanted to be transparent when I was writing posts. Mission accomplished 😎\u003C/p>\n\u003Cp>There are a couple of benefits from going through all that trouble:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/wooorm/remark/blob/master/doc/plugins.md\">remark plugins\u003C/a> can do just about anything. Seriously. I was able to add code highlighting \u003Cem>while I was writing this post\u003C/em> with 1 npm install, 1 line of JavaScript, and 1 line of CSS!\u003C/li>\n\u003Cli>Unified’s \u003Ca href=\"https://github.com/vfile/vfile\">vfile\u003C/a> format makes adding post metadata easy.\u003C/li>\n\u003Cli>No format lock in. When the wind blows a differnt direction and React falls out of favor, outputting to a different format will be easy.\u003C/li>\n\u003C/ul>\n\u003C/details>\n\u003Ch2 id=\"markdown-️-webpack-️-nextjs\">Markdown ➡️ Webpack ➡️ Next.js\u003C/h2>\n\u003Cp>I wanted to write in Markdown and have Next.js pick up the changes automatically.\u003C/p>\n\u003Cp>By default, next will use any JavaScript modules that export a React component in your \u003Ccode>pages/\u003C/code> directory. While writing markdown next to code is possible, it’s gross. Same goes for duplicating the same boilerplate file for each post and importing the markdown source from some other directory. I wanted to skip all that an go straight from Markdown into Next’s build and compile pipeline.\u003C/p>\n\u003Cp>💡 The light bulb moment came when I realized the power of Next’s support for custom Webpack configuration.\u003C/p>\n\u003Cp>A  \u003Ca href=\"https://webpack.js.org/concepts/loaders/\">webpack loader\u003C/a> can transform markdown source files into modules on the spot! And better yet, I already had a build script from my prototype that was doing most of what I needed to do in the loader. I needed to change was how my build script found out about files (reading them from disk vs. passed in by webpack) and how it output the results (again, writing to disk vs. passing the result back to webpack). The loader plugin interface was dead simple:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">module\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">exports\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#C678DD\"> function\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">source\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">  const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> done\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">async\u003C/span>\u003Cspan style=\"color:#ABB2BF\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">  renderPost\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">source\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E5C07B\">this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">resourcePath\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    .\u003C/span>\u003Cspan style=\"color:#61AFEF\">catch\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">done\u003C/span>\u003Cspan style=\"color:#ABB2BF\">).\u003C/span>\u003Cspan style=\"color:#61AFEF\">then\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">post\u003C/span>\u003Cspan style=\"color:#C678DD\"> =>\u003C/span>\u003Cspan style=\"color:#61AFEF\"> done\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#D19A66\">null\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">post\u003C/span>\u003Cspan style=\"color:#ABB2BF\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Where \u003Ccode>renderPost(source, resourcePath)\u003C/code> was the middle bit of my prototyped static rendering pipeline, refactored to only need a string of the file content and the path of the file being rendered. This is one of the easiest changes to make, since it took a method formerly reliant on \u003Cem>side effects\u003C/em>, namely reading and writing to disk, and made it a pure function. Any time you can make a method that’s passed an input and return a result, you should. Decomposing your assumptions about side effects will almost always save time. I learned this from Gary Bernhardt’s talk \u003Cem>\u003Ca href=\"https://www.destroyallsoftware.com/talks/boundaries\">Boundaries\u003C/a>\u003C/em>, and I remember it every time I see it.\u003C/p>\n\u003Cp>The last step was to add it to the webpack extension point in \u003Ccode>next.config.js\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">module\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">exports\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">  webpack\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">config\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    config\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">module\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">rules\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">push\u003C/span>\u003Cspan style=\"color:#ABB2BF\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">      test\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003Cspan style=\"color:#E06C75\"> /\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\.\u003C/span>\u003Cspan style=\"color:#E06C75\">html\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\.\u003C/span>\u003Cspan style=\"color:#E06C75\">js\u003C/span>\u003Cspan style=\"color:#C678DD\">$\u003C/span>\u003Cspan style=\"color:#E06C75\">/\u003C/span>\u003Cspan style=\"color:#ABB2BF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">      include\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">'./pages/writing'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">      loader\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">'./src/post-loader'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    return\u003C/span>\u003Cspan style=\"color:#E06C75\"> config\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"building-and-deploying\">Building and Deploying\u003C/h2>\n\u003Cp>Unlike in my earlier versions, Next.js 3 supports creating a complete static site from any next app with \u003Ccode>next export\u003C/code>. To tell it what routes and pages to export, you need to add some configuration to \u003Ccode>next.config.js\u003C/code>. Here’s what mine looks like:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">module\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">exports\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">  exportPathMap\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    return\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      \"/\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: { \u003C/span>\u003Cspan style=\"color:#E06C75\">page\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">\"/\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      \"/cv.html\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: { \u003C/span>\u003Cspan style=\"color:#E06C75\">page\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">\"/cv.html\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      \"/writing/2016-reading-list.html\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: { \u003C/span>\u003Cspan style=\"color:#E06C75\">page\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">\"/writing/2016-reading-list.html\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      \"/writing/2017-reading-list.html\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: { \u003C/span>\u003Cspan style=\"color:#E06C75\">page\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">\"/writing/2017-reading-list.html\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\">      // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Then I changed my build step to run \u003Ccode>next build &#x26;&#x26; next export --docs\u003C/code> and I with surprisingly little drama was ready to deploy to Github pages!\u003C/p>\n\u003Cp>Normally I’d be worried that I’d have missed some minor detail in a major change like swapping out the entire backend of a website, but in essence what I was doing here wasn’t all that big of a change: my static HTML, JavaScript, and CSS in the \u003Ccode>docs/\u003C/code> directory was still there, but was being built by a different tool chain. I pushed the first commit with the switch to Next.js and waited patiently while the build ran on Travis CI.\u003C/p>\n\u003Cp>…And that was it. I had more or less completely moved my static site into a totally modern React app with Next.js. The whole thing is \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com\">open source\u003C/a>, so feel free to kick the tires and ask questions if you have any 😊\u003C/p>\n\u003Cp>Here are the relevant parts of the app:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>post-loader.js\u003C/strong> – \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com/blob/master/src/post-loader.js\">webpack loader\u003C/a>\u003C/li>\n\u003Cli>\u003Cstrong>static-sites-with-next-js.html.js\u003C/strong> – \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com/blob/master/pages/writing/static-sites-with-next-js.html.js\">a markdown post with embedded HTML\u003C/a>\u003C/li>\n\u003Cli>\u003Cstrong>react-to-hast.js\u003C/strong> – \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com/blob/master/src/react-to-hast.js\">markdown compiler with Unified.js\u003C/a>\u003C/li>\n\u003Cli>\u003Cstrong>component-tree.js\u003C/strong> – \u003Ca href=\"https://github.com/wookiehangover/wookiehangover.com/blob/master/src/components/component-tree.js\">React component for rendering JSON AST\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"gotchas\">Gotcha’s! 😝\u003C/h3>\n\u003Cp>A few snags I ran into:\u003C/p>\n\u003Cul>\n\u003Cli>Github pages still perversely retains some of it’s Jekyll roots, and ignores file and directory names that start with an underscore 🙄\n\u003Cul>\n\u003Cli>\u003Cstrong>Fix:\u003C/strong> add \u003Ccode>.nojekyll\u003C/code> to your \u003Ccode>docs/\u003C/code> directory (or whatever is configured in the “Pages” portion of your repo config in Github)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>The \u003Ccode>.html.js\u003C/code> file extension on the posts was because I wanted backwards compatibilty with my static html version, which used plain old html files\n\u003Cul>\n\u003Cli>\u003Cem>Minor annoyance:\u003C/em> \u003Ccode>next export\u003C/code> adds directories for every static file to avoid the .html extension showing up in the path, but now I have urls with trailing slashes.\u003C/li>\n\u003Cli>If I ever want to change a URL (like to drop the \u003Ccode>.html\u003C/code> extension because it’s not 1998), I’ll need to figure out how to manage the redirects.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>I need to remember to add new posts to \u003Ccode>next.config.js\u003C/code>, which I seem pathologically incapable of. I’ll probably make the webpack plugin emit a JSON file with all the post metadata, but I haven’t done that yet.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cmarquee>And here’s that \u003Ccode>&#x3C;marquee>\u003C/code> tag to prove I wasn’t joking about supporting arbitraty HTML in posts. And thanks \u003Ca href=\"https://twitter.com/ddtrejo\">@ddtrejo\u003C/a> for feedback and edits!\u003C/marquee>\u003C/p>",{"headings":744,"imagePaths":759,"frontmatter":760},[745,747,750,753,756],{"depth":25,"slug":746,"text":735},"how-to-make-a-static-website-with-nextjs",{"depth":79,"slug":748,"text":749},"-rabbit-hole-react-from-html-markdown","🐰 Rabbit Hole: React from HTML Markdown",{"depth":27,"slug":751,"text":752},"markdown-️-webpack-️-nextjs","Markdown ➡️ Webpack ➡️ Next.js",{"depth":27,"slug":754,"text":755},"building-and-deploying","Building and Deploying",{"depth":79,"slug":757,"text":758},"gotchas","Gotcha’s! 😝",[],{"title":735,"slug":732,"description":736,"pubDate":737},"2023/an-even-worse-search",{"id":761,"data":763,"body":769,"filePath":770,"assetImports":771,"digest":773,"rendered":774},{"title":764,"description":765,"pubDate":766,"heroAlt":767,"cover":768},"An Even Worse Search","Making my links posts searchable","December 21 2023","I have been hard at work gathering materials.","__ASTRO_IMAGE_../../../assets/squirrel-working.png","I have a new page that collects [All the Links](/links) from my links blog posts. This is about how I made the page and its lofi search experience.\n\nGo to [sambreed.dev/links](/links) or try this rickety old search box:\n\n\u003Cform action=\"/links\" class=\"search\">\n  \u003Cinput\n    type=\"search\"\n    autocomplete=\"off\"\n    autocapitalize=\"off\"\n    autocorrect=\"off\"\n    placeholder=\"Gimme something good!\"\n    name=\"q\"\n  />\n  \u003Cbutton>Go\u003C/button>\n\u003C/form>\n\nIf you tried that, welcome back.\n\nIf you didn’t try that, it’s very simple. Put in a query like [“LLM”](/links?q=llm) (9 links) or [“javascript”](/links?q=javascript) (5 links) or [“pdf”](/links?q=pdf) (8 links) and you’ll see some matching links.\n\n## Table of Contents\n\n## Background\n\nIn 2022 I started posting all of my stray browser tabs at the end of every month. In 2023 I managed to keep the habit up for the whole year. I wasn’t always on time and I didn’t always leave a comment for every link, but I did get a modest little pile of links together: 296 at the time of writing.\n\nI think this is a response to never quite being able to make bookmarks work for me.\n\nA few weeks back, I added [embeddings search](../lil-vector-search) to my posts, but I felt that it was missing something.  It was really hit-or-miss when it came to actually finding things I had posted. (By design, partially — it’s a toy.)\n\nIt hit me that what I wanted was to see all the of links I’ve posted this year in one place. So now I have big list of links. What next?\n\n## User Experience\n\nThere are 3 elements at play:\n\n- Big list of all the links\n- Search input that updates the list as you type\n- Random link button\n\nA big list of links wasn’t entirely satisfying and not a great user experience. I didn’t want to re-create the presentation from the blog posts, where links are loosely categorized and presented with commentary.\n\nThe list needed a way to filter it.\n\nI’ve always liked list filtering as a UX pattern and it almost always feels like a useful addition. I chose to have the list update as you type in addition to a working form submission.\n\nFiltering felt like only part of the puzzle.\n\nWhat I really wanted is a random button, an idea borrowed from [Ryan Broderick’s excellent Garbage Day random section](https://random.garbageday.email/). There’s a link in the header that will open a random link from the list in a new tab.\n\n## How it works\n\n### Aggregation\n\n[Astro](https://astro.build) provides great hooks for working with content collections, but I found that this use-case was a little bit outside the boundaries painted by their APIs.\n\nThe easiest thing I could think of was to copy the pattern I established with the search embeddings: a script to look through my content at build time, grab the links, and output them in a JSON file.\n\nArmed with a JSON file of all the links, building a page to display them was trivial with Astro.\n\n### Inline Search\n\nFor the search, I started with JavaScript first. I felt that seeing the list update as you type would be a better experience.\n\nInstead of doing math-y vibe based search with embeddings, I opted to check the title and url for the search term. \n\n```typescript\nconst filterInput = document.querySelector(\"[data-filter]\");\nconst links = document.querySelectorAll(\"nav[data-links] a\");\n\nfilterInput.addEventListener(\"input\", () => {\n\tconst filter = filterInput.value.toLowerCase();\n\n\tif (!filter) {\n\t  for (const link of links) {\n\t    link.classList.remove(\"hidden\");\n\t  }\n\t  return;\n\t}\n\t\n\tfor (const link of links) {\n\t  const text = link.textContent?.toLowerCase();\n\t  if (text?.includes(filter) || link.href.includes(filter)) {\n\t    link.classList.remove(\"hidden\");\n\t  } else {\n\t    link.classList.add(\"hidden\");\n\t  }\n\t}\n});\n```\n\nThis pattern is pretty dumb but it works. You wouldn’t want to do this with a large dataset, but it fits just fine for a few hundred links.\n\nJavaScript is at its best when it is enhancing HTML to provide a more dynamic user experience.\n\n### Form Submission\n\nWith inline search working, I figured that I might as well make the form capable of submitting like an honest, old-fashioned web-site would have.\n\nAgain, Astro makes this simple. The site is deployed to Cloudflare Pages and has SSR on every page.\n\nWhen the links page is requested, it checks for an query string in the url and then filters the links list by hiding any links that don’t match the incoming query.\n\nThe JavaScript search picks up seamlessly, restoring the full list when you clear the input without having to submit the form to refresh the page. Best of both worlds!\n\n### Random Links\n\nAn API endpoint with an HTTP redirect did the trick here, and can be linked to from anywhere. Give it a try:\n\n[sambreed.dev/api/random-link](/api/random-link)\n\nIt even works with search queries!\n\n## Going Further\n\n### Fighting Link Rot\n\n[Link rot](https://en.wikipedia.org/wiki/Link_rot) is a thing. I’m sure even some of the links I’ve collected in the past year have changed or moved or even disappeared entirely.\n\nThe next step is to use the Internet Archive’s Wayback Machine to make archived versions of each of the links in my trove, and present them as an option to follow.\n\nThis is already a convention I use in my [résumé](/cv.html) for the Quick Left website, which is now long gone from the web but still alive and well in the Wayback machine.\n\nOr maybe something more ambitious, like scraping the content (for research purposes, not to re-publish) and splitting it into embeddings or a full-text search, and build a proper little micro-search engine for the content I post about.\n\n### A little time capsule\n\nWhat’s emerged for me from aggregating these links is that I’m making what amounts to a little time capsule of my web browsing every month. But unlike a time capsule, the quality of these links is guaranteed to degrade over time.\n\nThe web is in constant motion and often ephemeral. This is my attempt to capture some of that tempest in a teapot.","src/content/writing/2023/an-even-worse-search.md",[772],"../../../assets/squirrel-working.png","f3bccc135f87aeaf",{"html":775,"metadata":776},"\u003Cp>I have a new page that collects \u003Ca href=\"/links\">All the Links\u003C/a> from my links blog posts. This is about how I made the page and its lofi search experience.\u003C/p>\n\u003Cp>Go to \u003Ca href=\"/links\">sambreed.dev/links\u003C/a> or try this rickety old search box:\u003C/p>\n\u003Cform action=\"/links\" class=\"search\">\n  \u003Cinput type=\"search\" autocomplete=\"off\" autocapitalize=\"off\" autocorrect=\"off\" placeholder=\"Gimme something good!\" name=\"q\">\n  \u003Cbutton>Go\u003C/button>\n\u003C/form>\n\u003Cp>If you tried that, welcome back.\u003C/p>\n\u003Cp>If you didn’t try that, it’s very simple. Put in a query like \u003Ca href=\"/links?q=llm\">“LLM”\u003C/a> (9 links) or \u003Ca href=\"/links?q=javascript\">“javascript”\u003C/a> (5 links) or \u003Ca href=\"/links?q=pdf\">“pdf”\u003C/a> (8 links) and you’ll see some matching links.\u003C/p>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#background\">Background\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#user-experience\">User Experience\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#how-it-works\">How it works\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#aggregation\">Aggregation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#inline-search\">Inline Search\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#form-submission\">Form Submission\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#random-links\">Random Links\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#going-further\">Going Further\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#fighting-link-rot\">Fighting Link Rot\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#a-little-time-capsule\">A little time capsule\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"background\">Background\u003C/h2>\n\u003Cp>In 2022 I started posting all of my stray browser tabs at the end of every month. In 2023 I managed to keep the habit up for the whole year. I wasn’t always on time and I didn’t always leave a comment for every link, but I did get a modest little pile of links together: 296 at the time of writing.\u003C/p>\n\u003Cp>I think this is a response to never quite being able to make bookmarks work for me.\u003C/p>\n\u003Cp>A few weeks back, I added \u003Ca href=\"../lil-vector-search\">embeddings search\u003C/a> to my posts, but I felt that it was missing something.  It was really hit-or-miss when it came to actually finding things I had posted. (By design, partially — it’s a toy.)\u003C/p>\n\u003Cp>It hit me that what I wanted was to see all the of links I’ve posted this year in one place. So now I have big list of links. What next?\u003C/p>\n\u003Ch2 id=\"user-experience\">User Experience\u003C/h2>\n\u003Cp>There are 3 elements at play:\u003C/p>\n\u003Cul>\n\u003Cli>Big list of all the links\u003C/li>\n\u003Cli>Search input that updates the list as you type\u003C/li>\n\u003Cli>Random link button\u003C/li>\n\u003C/ul>\n\u003Cp>A big list of links wasn’t entirely satisfying and not a great user experience. I didn’t want to re-create the presentation from the blog posts, where links are loosely categorized and presented with commentary.\u003C/p>\n\u003Cp>The list needed a way to filter it.\u003C/p>\n\u003Cp>I’ve always liked list filtering as a UX pattern and it almost always feels like a useful addition. I chose to have the list update as you type in addition to a working form submission.\u003C/p>\n\u003Cp>Filtering felt like only part of the puzzle.\u003C/p>\n\u003Cp>What I really wanted is a random button, an idea borrowed from \u003Ca href=\"https://random.garbageday.email/\">Ryan Broderick’s excellent Garbage Day random section\u003C/a>. There’s a link in the header that will open a random link from the list in a new tab.\u003C/p>\n\u003Ch2 id=\"how-it-works\">How it works\u003C/h2>\n\u003Ch3 id=\"aggregation\">Aggregation\u003C/h3>\n\u003Cp>\u003Ca href=\"https://astro.build\">Astro\u003C/a> provides great hooks for working with content collections, but I found that this use-case was a little bit outside the boundaries painted by their APIs.\u003C/p>\n\u003Cp>The easiest thing I could think of was to copy the pattern I established with the search embeddings: a script to look through my content at build time, grab the links, and output them in a JSON file.\u003C/p>\n\u003Cp>Armed with a JSON file of all the links, building a page to display them was trivial with Astro.\u003C/p>\n\u003Ch3 id=\"inline-search\">Inline Search\u003C/h3>\n\u003Cp>For the search, I started with JavaScript first. I felt that seeing the list update as you type would be a better experience.\u003C/p>\n\u003Cp>Instead of doing math-y vibe based search with embeddings, I opted to check the title and url for the search term.\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> filterInput\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> document\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">querySelector\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"[data-filter]\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> links\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> document\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">querySelectorAll\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"nav[data-links] a\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">filterInput\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">addEventListener\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"input\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, () \u003C/span>\u003Cspan style=\"color:#C678DD\">=>\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tconst\u003C/span>\u003Cspan style=\"color:#E5C07B\"> filter\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> filterInput\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">value\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">toLowerCase\u003C/span>\u003Cspan style=\"color:#ABB2BF\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tif\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#56B6C2\">!\u003C/span>\u003Cspan style=\"color:#E06C75\">filter\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\t  for\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#C678DD\">const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> link\u003C/span>\u003Cspan style=\"color:#C678DD\"> of\u003C/span>\u003Cspan style=\"color:#E06C75\"> links\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t    link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">classList\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">remove\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\t  return\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tfor\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#C678DD\">const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> link\u003C/span>\u003Cspan style=\"color:#C678DD\"> of\u003C/span>\u003Cspan style=\"color:#E06C75\"> links\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\t  const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> text\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">textContent\u003C/span>\u003Cspan style=\"color:#ABB2BF\">?.\u003C/span>\u003Cspan style=\"color:#61AFEF\">toLowerCase\u003C/span>\u003Cspan style=\"color:#ABB2BF\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\t  if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#E5C07B\">text\u003C/span>\u003Cspan style=\"color:#ABB2BF\">?.\u003C/span>\u003Cspan style=\"color:#61AFEF\">includes\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">filter\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) \u003C/span>\u003Cspan style=\"color:#56B6C2\">||\u003C/span>\u003Cspan style=\"color:#E5C07B\"> link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">href\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">includes\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">filter\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t    link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">classList\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">remove\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t  } \u003C/span>\u003Cspan style=\"color:#C678DD\">else\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t    link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">classList\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">add\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This pattern is pretty dumb but it works. You wouldn’t want to do this with a large dataset, but it fits just fine for a few hundred links.\u003C/p>\n\u003Cp>JavaScript is at its best when it is enhancing HTML to provide a more dynamic user experience.\u003C/p>\n\u003Ch3 id=\"form-submission\">Form Submission\u003C/h3>\n\u003Cp>With inline search working, I figured that I might as well make the form capable of submitting like an honest, old-fashioned web-site would have.\u003C/p>\n\u003Cp>Again, Astro makes this simple. The site is deployed to Cloudflare Pages and has SSR on every page.\u003C/p>\n\u003Cp>When the links page is requested, it checks for an query string in the url and then filters the links list by hiding any links that don’t match the incoming query.\u003C/p>\n\u003Cp>The JavaScript search picks up seamlessly, restoring the full list when you clear the input without having to submit the form to refresh the page. Best of both worlds!\u003C/p>\n\u003Ch3 id=\"random-links\">Random Links\u003C/h3>\n\u003Cp>An API endpoint with an HTTP redirect did the trick here, and can be linked to from anywhere. Give it a try:\u003C/p>\n\u003Cp>\u003Ca href=\"/api/random-link\">sambreed.dev/api/random-link\u003C/a>\u003C/p>\n\u003Cp>It even works with search queries!\u003C/p>\n\u003Ch2 id=\"going-further\">Going Further\u003C/h2>\n\u003Ch3 id=\"fighting-link-rot\">Fighting Link Rot\u003C/h3>\n\u003Cp>\u003Ca href=\"https://en.wikipedia.org/wiki/Link_rot\">Link rot\u003C/a> is a thing. I’m sure even some of the links I’ve collected in the past year have changed or moved or even disappeared entirely.\u003C/p>\n\u003Cp>The next step is to use the Internet Archive’s Wayback Machine to make archived versions of each of the links in my trove, and present them as an option to follow.\u003C/p>\n\u003Cp>This is already a convention I use in my \u003Ca href=\"/cv.html\">résumé\u003C/a> for the Quick Left website, which is now long gone from the web but still alive and well in the Wayback machine.\u003C/p>\n\u003Cp>Or maybe something more ambitious, like scraping the content (for research purposes, not to re-publish) and splitting it into embeddings or a full-text search, and build a proper little micro-search engine for the content I post about.\u003C/p>\n\u003Ch3 id=\"a-little-time-capsule\">A little time capsule\u003C/h3>\n\u003Cp>What’s emerged for me from aggregating these links is that I’m making what amounts to a little time capsule of my web browsing every month. But unlike a time capsule, the quality of these links is guaranteed to degrade over time.\u003C/p>\n\u003Cp>The web is in constant motion and often ephemeral. This is my attempt to capture some of that tempest in a teapot.\u003C/p>",{"headings":777,"imagePaths":811,"frontmatter":812},[778,781,784,787,790,793,796,799,802,805,808],{"depth":27,"slug":779,"text":780},"table-of-contents","Table of Contents",{"depth":27,"slug":782,"text":783},"background","Background",{"depth":27,"slug":785,"text":786},"user-experience","User Experience",{"depth":27,"slug":788,"text":789},"how-it-works","How it works",{"depth":79,"slug":791,"text":792},"aggregation","Aggregation",{"depth":79,"slug":794,"text":795},"inline-search","Inline Search",{"depth":79,"slug":797,"text":798},"form-submission","Form Submission",{"depth":79,"slug":800,"text":801},"random-links","Random Links",{"depth":27,"slug":803,"text":804},"going-further","Going Further",{"depth":79,"slug":806,"text":807},"fighting-link-rot","Fighting Link Rot",{"depth":79,"slug":809,"text":810},"a-little-time-capsule","A little time capsule",[],{"title":764,"slug":761,"description":765,"cover":772,"heroAlt":767,"pubDate":766},"2023/links-may-2023",{"id":813,"data":815,"body":821,"filePath":822,"assetImports":823,"digest":825,"rendered":826},{"title":816,"description":817,"pubDate":818,"heroAlt":819,"cover":820},"Links, May 2023","A bouquet of open tabs","May 31 2023","( a field of tall grass in the middle of a city ) by James Jean People in the distance, looking up at something in the sky. The colors are very muted, and there is a sense of foreboding. High Quality, Heavy Grain. best of flickr. by artist artgerm. Stable Diffusion v1.5","__ASTRO_IMAGE_../../../assets/2cec5f5f-86ac-44e6-b236-21c828141ce2.png","All the wet weather this winter has indeed brought May flowers in Northern California.\n\nSince the high of the marathon last month I have fully recovered and started a new training cycle for my first [Dipsea](https://www.dipsea.org) on June 11. The Dipsea is an 8 mile elevation-heavy trail race from downtown Mill Valley to Stinson Beach and is the oldest organized trail race in the US. It's limited to 1500 people and berths go first to previous participants before opening to new racers, so I feel very lucky to have been accepted on my first try. I'll drop a race report when it's done.\n\nMeanwhile, the tabs collected. No individual-link hot takes this month, but the AI content is unrelenting and difficult to absorb and reflect on.\n\nOk, maybe just one 🔥. The [AI Cannon](https://a16z.com/2023/05/25/ai-canon/) post from a16z has tens of hours of reading, which may or may not be required (_essential?_) to understand the nature of the current boom. They last boom they hyped was [quite hollow](https://davekarpf.substack.com/p/web3s-fake-version-of-the-history), but that shouldn't discount the [insights they are sharing](https://twitter.com/illscience/status/1661045161328263170) about the AI canard.\n\n## Dev\n* [Advanced Character Physics](https://www.cs.cmu.edu/afs/cs/academic/class/15462-s13/www/lec_slides/Jakobsen.pdf)\n* [The Early History Of Smalltalk](http://worrydream.com/EarlyHistoryOfSmalltalk/)\n* [A practical guide to WebAssembly memory](https://radu-matei.com/blog/practical-guide-to-wasm-memory/#exchanging-strings-between-modules-and-runtimes)\n* [cohost! - \"I want to talk about WebGPU\"](https://cohost.org/mcc/post/1406157-i-want-to-talk-about-webgpu)\n* [The UX Research Reckoning is Here | by Judd Antin | One Big Thought | May, 2023 | Medium](https://medium.com/onebigthought/the-ux-research-reckoning-is-here-c63710ea4084)\n* [Web3's fake version of Web history - by Dave Karpf](https://davekarpf.substack.com/p/web3s-fake-version-of-the-history)\n* [Creating a shine effect on a card with Tailwind CSS](https://www.julienthibeaut.xyz/blog/create-shine-effect-on-card-with-tailwind-css)\n* [Building a modern design system in layers](https://blog.almaer.com/building-a-modern-design-system-in-layers/)\n* [Pixels vs. Ems: Users DO Change Font Size | by Evan Minto | Medium](https://medium.com/@vamptvo/pixels-vs-ems-users-do-change-font-size-5cfb20831773)\n* [macOS Internals](https://gist.github.com/kconner/cff08fe3e0bb857ea33b47d965b3e19f)\n* [2023 Apple Design Award Finalists - Apple Design Awards - Apple Developer](https://developer.apple.com/design/awards/)\n\n## Blogs\n* [Early Computer Art in the 50’s & 60’s — Amy Goodchild](https://www.amygoodchild.com/blog/computer-art-50s-and-60s)\n* [Ken Kocienda](https://kocienda.micro.blog/)\n* [Building vs. optimizing | Adam Stoddard](https://aaadaaam.com/notes/building-vs-optimizing/)\n* [Erin Kissane](https://erinkissane.com/blue-skies-over-mastodon)\n* [The Cult of the Founders](https://crookedtimber.org/2023/05/06/the-cult-of-the-founders/)\n\n## AI\n\n### Navel-gazing\n* [Leaked Google document: “We Have No Moat, And Neither Does OpenAI”](https://simonwillison.net/2023/May/4/no-moat/)\n* [AI Canon | Andreessen Horowitz](https://a16z.com/2023/05/25/ai-canon/)\n* [thread from a16z GP Anish Acharya](https://twitter.com/illscience/status/1661045161328263170)\n* [LLM University, Generative AI, AI Product Moats](https://jayalammar.substack.com/p/llm-university-generative-ai-ai-product?r=27wcsl&utm_campaign=post&utm_medium=web)\n* [Superintelligence: The Idea That Eats Smart People](https://idlewords.com/talks/superintelligence.htm)\n* [Google’s AI Hype Circle. We have to do Bard because everyone… | by Cory Doctorow | May, 2023 | Medium](https://doctorow.medium.com/googles-ai-hype-circle-6158804d1299)\n\n### Papers / Models\n* [StarCoder: A State-of-the-Art LLM for Code](https://huggingface.co/blog/starcoder)\n* [Gorilla](https://shishirpatil.github.io/gorilla/)\n* [Voyager | An Open-Ended Embodied Agent with Large Language Models](https://voyager.minedojo.org/)\n\n### Code\n* [ianarawjo/ChainForge: An open-source visual programming environment for battle-testing prompts to LLMs.](https://github.com/ianarawjo/ChainForge)\n* [ray-project/llm-numbers: Numbers every LLM developer should know](https://github.com/ray-project/llm-numbers)\n* [Jsonformer: A Bulletproof Way to Generate Structured JSON from Language Models](https://simonwillison.net/2023/May/8/jsonformer/)\n* [SamurAIGPT/privateGPT: An app to interact privately with your documents using the power of GPT, 100% privately, no data leaks](https://github.com/SamurAIGPT/privateGPT)\n* [brexhq/prompt-engineering: Tips and tricks for working with Large Language Models like OpenAI's GPT-4.](https://github.com/brexhq/prompt-engineering)\n* [Okapi BM25 - Wikipedia](https://en.m.wikipedia.org/wiki/Okapi_BM25)\n\n## Search\n* [GigaBrain - Search Reddit and Other Communities for Answers from Real People](https://thegigabrain.com/)\n* [Metaphor Search - Search the internet with large language models using Metaphor](https://metaphor.systems/)","src/content/writing/2023/links-may-2023.md",[824],"../../../assets/2cec5f5f-86ac-44e6-b236-21c828141ce2.png","a76f164051aaf894",{"html":827,"metadata":828},"\u003Cp>All the wet weather this winter has indeed brought May flowers in Northern California.\u003C/p>\n\u003Cp>Since the high of the marathon last month I have fully recovered and started a new training cycle for my first \u003Ca href=\"https://www.dipsea.org\">Dipsea\u003C/a> on June 11. The Dipsea is an 8 mile elevation-heavy trail race from downtown Mill Valley to Stinson Beach and is the oldest organized trail race in the US. It’s limited to 1500 people and berths go first to previous participants before opening to new racers, so I feel very lucky to have been accepted on my first try. I’ll drop a race report when it’s done.\u003C/p>\n\u003Cp>Meanwhile, the tabs collected. No individual-link hot takes this month, but the AI content is unrelenting and difficult to absorb and reflect on.\u003C/p>\n\u003Cp>Ok, maybe just one 🔥. The \u003Ca href=\"https://a16z.com/2023/05/25/ai-canon/\">AI Cannon\u003C/a> post from a16z has tens of hours of reading, which may or may not be required (\u003Cem>essential?\u003C/em>) to understand the nature of the current boom. They last boom they hyped was \u003Ca href=\"https://davekarpf.substack.com/p/web3s-fake-version-of-the-history\">quite hollow\u003C/a>, but that shouldn’t discount the \u003Ca href=\"https://twitter.com/illscience/status/1661045161328263170\">insights they are sharing\u003C/a> about the AI canard.\u003C/p>\n\u003Ch2 id=\"dev\">Dev\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.cs.cmu.edu/afs/cs/academic/class/15462-s13/www/lec_slides/Jakobsen.pdf\">Advanced Character Physics\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://worrydream.com/EarlyHistoryOfSmalltalk/\">The Early History Of Smalltalk\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://radu-matei.com/blog/practical-guide-to-wasm-memory/#exchanging-strings-between-modules-and-runtimes\">A practical guide to WebAssembly memory\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://cohost.org/mcc/post/1406157-i-want-to-talk-about-webgpu\">cohost! - “I want to talk about WebGPU”\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://medium.com/onebigthought/the-ux-research-reckoning-is-here-c63710ea4084\">The UX Research Reckoning is Here | by Judd Antin | One Big Thought | May, 2023 | Medium\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://davekarpf.substack.com/p/web3s-fake-version-of-the-history\">Web3’s fake version of Web history - by Dave Karpf\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.julienthibeaut.xyz/blog/create-shine-effect-on-card-with-tailwind-css\">Creating a shine effect on a card with Tailwind CSS\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.almaer.com/building-a-modern-design-system-in-layers/\">Building a modern design system in layers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://medium.com/@vamptvo/pixels-vs-ems-users-do-change-font-size-5cfb20831773\">Pixels vs. Ems: Users DO Change Font Size | by Evan Minto | Medium\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://gist.github.com/kconner/cff08fe3e0bb857ea33b47d965b3e19f\">macOS Internals\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developer.apple.com/design/awards/\">2023 Apple Design Award Finalists - Apple Design Awards - Apple Developer\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"blogs\">Blogs\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.amygoodchild.com/blog/computer-art-50s-and-60s\">Early Computer Art in the 50’s &#x26; 60’s — Amy Goodchild\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://kocienda.micro.blog/\">Ken Kocienda\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://aaadaaam.com/notes/building-vs-optimizing/\">Building vs. optimizing | Adam Stoddard\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://erinkissane.com/blue-skies-over-mastodon\">Erin Kissane\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://crookedtimber.org/2023/05/06/the-cult-of-the-founders/\">The Cult of the Founders\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Ch3 id=\"navel-gazing\">Navel-gazing\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://simonwillison.net/2023/May/4/no-moat/\">Leaked Google document: “We Have No Moat, And Neither Does OpenAI”\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://a16z.com/2023/05/25/ai-canon/\">AI Canon | Andreessen Horowitz\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://twitter.com/illscience/status/1661045161328263170\">thread from a16z GP Anish Acharya\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://jayalammar.substack.com/p/llm-university-generative-ai-ai-product?r=27wcsl&#x26;utm_campaign=post&#x26;utm_medium=web\">LLM University, Generative AI, AI Product Moats\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://idlewords.com/talks/superintelligence.htm\">Superintelligence: The Idea That Eats Smart People\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://doctorow.medium.com/googles-ai-hype-circle-6158804d1299\">Google’s AI Hype Circle. We have to do Bard because everyone… | by Cory Doctorow | May, 2023 | Medium\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"papers--models\">Papers / Models\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://huggingface.co/blog/starcoder\">StarCoder: A State-of-the-Art LLM for Code\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://shishirpatil.github.io/gorilla/\">Gorilla\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://voyager.minedojo.org/\">Voyager | An Open-Ended Embodied Agent with Large Language Models\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"code\">Code\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/ianarawjo/ChainForge\">ianarawjo/ChainForge: An open-source visual programming environment for battle-testing prompts to LLMs.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/ray-project/llm-numbers\">ray-project/llm-numbers: Numbers every LLM developer should know\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://simonwillison.net/2023/May/8/jsonformer/\">Jsonformer: A Bulletproof Way to Generate Structured JSON from Language Models\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/SamurAIGPT/privateGPT\">SamurAIGPT/privateGPT: An app to interact privately with your documents using the power of GPT, 100% privately, no data leaks\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/brexhq/prompt-engineering\">brexhq/prompt-engineering: Tips and tricks for working with Large Language Models like OpenAI’s GPT-4.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/Okapi_BM25\">Okapi BM25 - Wikipedia\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"search\">Search\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://thegigabrain.com/\">GigaBrain - Search Reddit and Other Communities for Answers from Real People\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://metaphor.systems/\">Metaphor Search - Search the internet with large language models using Metaphor\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":829,"imagePaths":847,"frontmatter":848},[830,833,836,837,840,843,844],{"depth":27,"slug":831,"text":832},"dev","Dev",{"depth":27,"slug":834,"text":835},"blogs","Blogs",{"depth":27,"slug":301,"text":302},{"depth":79,"slug":838,"text":839},"navel-gazing","Navel-gazing",{"depth":79,"slug":841,"text":842},"papers--models","Papers / Models",{"depth":79,"slug":426,"text":427},{"depth":27,"slug":845,"text":846},"search","Search",[],{"title":816,"slug":813,"description":817,"cover":824,"heroAlt":819,"pubDate":818},"2023/links-november-2023",{"id":849,"data":851,"body":856,"filePath":857,"digest":858,"rendered":859},{"title":852,"description":583,"pubDate":853,"heroVideo":854,"heroAlt":855},"Links, November 2023","November 30 2023","/img/sd-video.mp4","SDVideo is good with clouds and reflections but is otherwise hit or miss","The Year of the Large Language Model\n\nIt has been one year since ChatGPT was released. Being in the AI space before then now qualifies as having been \"early.\" And things still seem to be speeding up.\n\nAlthough multi-modal capabilities have existed in some fashion for some time (namely, that CLIP embeddings offer a shared latent space for text and images), crossing between modalities seamlessly with a single model has been challenging. No more. \n\nThe ChatGPT-4V lineage of models successfully interpret and produce images, which has almost immediately led to some very interesting use cases. Watch the video below from Twitter user @tazsingh to get the sense for what I mean.\n\n\u003Cblockquote>\nHow to draw an owl with @tldraw\n\n\u003Cfigure>\n\t\u003Cvideo src=\"/img/how-to-draw-an-owl.mp4\" muted controls>\u003C/video>\n\u003C/figure>\n\nhttps://twitter.com/tazsingh/status/1729578330200891552\n\u003C/blockquote>\n\nThe first link on deck is about the platform used to make the demo, tldraw.\n\nWhat’s more, good video generation seems to be right around the corner. Stability AI released SDVideo this month, their model and weights for generating short 1-2s of video. The video at the top of the page of a oceanside mountain framed by clouds was first generated in Dalle3 and then animated with SDVideo. Of a number of samples I tried, this was the best one. It's not quite there yet, but it's getting close to being quite good.\n\nSkeptics may argue that LLMs are neither new nor special, and that the hype around them is just that. But the bottom line is that computers are getting new features and abilities that were *very* out of reach even 4 years ago. There is something happening here.\n\n## AI\n\n* [make real, the story so far - by Steve Ruiz - tldraw](https://tldraw.substack.com/p/make-real-the-story-so-far) &middot; Really impressed by what they've built here. It's simple and refreshing, and now getting very powerful AI tools.\n* [Stable Diffusion XL](https://huggingface.co/docs/diffusers/using-diffusers/sdxl) &middot; Image generation is quickly becoming a commodity feature, largely due to Stable Diffusion continuing to release open\n* [An Interactive Guide to CSS Grid](https://www.joshwcomeau.com/css/interactive-guide-to-grid/)\n* [LM Studio - Discover, download, and run local LLMs](https://lmstudio.ai/)\n* [IGF - a Hugging Face Space by dylanebert](https://huggingface.co/spaces/dylanebert/igf)\n\t* paper (pdf): [3D Gaussian Splatting for Real-Time Radiance Field Rendering](https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/3d_gaussian_splatting_low.pdf)\n* [PromptIDE](https://x.ai/prompt-ide/)\n\n## Front End\n\n* [Vite](https://vitejs.dev/) - Vite has been a refreshing “just does the thing” type of tool. It’s fast, versatile, and seems to now be the defacto starting point for new web projects. Remix is considering move to a Vite plugin. Astro and Sveltekit are already there.\n* [Blinded By the Light DOM](https://meyerweb.com/eric/thoughts/2023/11/01/blinded-by-the-light-dom/)\n* [Building towards a new default rendering model for web applications](https://vercel.com/blog/partial-prerendering-with-next-js-creating-a-new-default-rendering-model)\n* [Transition Behavior](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior) - very cool new property tat I’ve added to my [CSS Wiki page](/wiki/computers/web-development/front-end/new-css)\n\n## Misc\n\n* [Notes toward a pitch](https://www.robinsloan.com/moonbound/introduction/)\n* [DAK and the Golden Age of Gadget Catalogs](https://cabel.com/2023/11/06/dak-and-the-golden-age-of-gadget-catalogs/)\n* [Nintendo Company Brochure (2015) – cabel.com](https://cabel.com/2023/10/06/nintendo-corporate-brochure-2015/)\n* [Wink Optics San Anselmo (formerly Sunglass City)](https://sunglasscity.com/)\n* [Illuminate: An Evening with Rupy C. Tut - ICA SF](https://www.icasf.org/calendar/159-illuminate-an-evening-with-rupy-c-tut)\n* [Social heuristics shape intuitive cooperation](https://www.nature.com/articles/ncomms4677)\n* [The Eleven Laws of Showrunning](https://simonwillison.net/2019/Feb/19/eleven-laws-showrunning/)\n\t* [11 laws of showrunning NICE VERSION](https://okbjgm.weebly.com/uploads/3/1/5/0/31506003/11_laws_of_showrunning_nice_version.pdf)\n\n## Tech\n\n* [Folk Interfaces](https://maggieappleton.com/folk-interfaces)\n* [A hypothetical path to the Speakularity / Snarkmarket](https://snarkmarket.com/2010/6498/)\n* [A $7 Subscription](https://cra.mr/a-seven-dollar-subscription)\n* [2,851 Miles // Bill Gurley (Transcript + Slides)](https://12mv2.com/2023/10/05/2851-miles-bill-gurley-transcript-slides/)\n* [Habits of great software engineers](https://vadimkravcenko.com/shorts/habits-of-great-software-engineers/)\n* [The Bluffer’s Guide to The Mythical Man-Month](https://codemanship.wordpress.com/2023/11/20/the-bluffers-guide-to-the-mythical-man-month/)\n* [Threads: The inside story of Meta’s newest social app](https://engineering.fb.com/2023/09/07/culture/threads-inside-story-metas-newest-social-app/)\n* [The beauty of finished software | Jose M.](https://josem.co/the-beauty-of-finished-software/)\n* [Confusing git terminology](https://jvns.ca/blog/2023/11/01/confusing-git-terminology/)\n\n\nAnd one very nice personal website:\n\n* [Manu – I write](https://manuelmoreale.com/)","src/content/writing/2023/links-november-2023.md","ea5b6863bf2da3d9",{"html":860,"metadata":861},"\u003Cp>The Year of the Large Language Model\u003C/p>\n\u003Cp>It has been one year since ChatGPT was released. Being in the AI space before then now qualifies as having been “early.” And things still seem to be speeding up.\u003C/p>\n\u003Cp>Although multi-modal capabilities have existed in some fashion for some time (namely, that CLIP embeddings offer a shared latent space for text and images), crossing between modalities seamlessly with a single model has been challenging. No more.\u003C/p>\n\u003Cp>The ChatGPT-4V lineage of models successfully interpret and produce images, which has almost immediately led to some very interesting use cases. Watch the video below from Twitter user @tazsingh to get the sense for what I mean.\u003C/p>\n\u003Cblockquote>\nHow to draw an owl with @tldraw\n\u003Cfigure>\n\t\u003Cvideo src=\"/img/how-to-draw-an-owl.mp4\" muted controls>\u003C/video>\n\u003C/figure>\n\u003Cp>\u003Ca href=\"https://twitter.com/tazsingh/status/1729578330200891552\">https://twitter.com/tazsingh/status/1729578330200891552\u003C/a>\u003C/p>\n\u003C/blockquote>\n\u003Cp>The first link on deck is about the platform used to make the demo, tldraw.\u003C/p>\n\u003Cp>What’s more, good video generation seems to be right around the corner. Stability AI released SDVideo this month, their model and weights for generating short 1-2s of video. The video at the top of the page of a oceanside mountain framed by clouds was first generated in Dalle3 and then animated with SDVideo. Of a number of samples I tried, this was the best one. It’s not quite there yet, but it’s getting close to being quite good.\u003C/p>\n\u003Cp>Skeptics may argue that LLMs are neither new nor special, and that the hype around them is just that. But the bottom line is that computers are getting new features and abilities that were \u003Cem>very\u003C/em> out of reach even 4 years ago. There is something happening here.\u003C/p>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tldraw.substack.com/p/make-real-the-story-so-far\">make real, the story so far - by Steve Ruiz - tldraw\u003C/a> · Really impressed by what they’ve built here. It’s simple and refreshing, and now getting very powerful AI tools.\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/docs/diffusers/using-diffusers/sdxl\">Stable Diffusion XL\u003C/a> · Image generation is quickly becoming a commodity feature, largely due to Stable Diffusion continuing to release open\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.joshwcomeau.com/css/interactive-guide-to-grid/\">An Interactive Guide to CSS Grid\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://lmstudio.ai/\">LM Studio - Discover, download, and run local LLMs\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://huggingface.co/spaces/dylanebert/igf\">IGF - a Hugging Face Space by dylanebert\u003C/a>\n\u003Cul>\n\u003Cli>paper (pdf): \u003Ca href=\"https://repo-sam.inria.fr/fungraph/3d-gaussian-splatting/3d_gaussian_splatting_low.pdf\">3D Gaussian Splatting for Real-Time Radiance Field Rendering\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://x.ai/prompt-ide/\">PromptIDE\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"front-end\">Front End\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://vitejs.dev/\">Vite\u003C/a> - Vite has been a refreshing “just does the thing” type of tool. It’s fast, versatile, and seems to now be the defacto starting point for new web projects. Remix is considering move to a Vite plugin. Astro and Sveltekit are already there.\u003C/li>\n\u003Cli>\u003Ca href=\"https://meyerweb.com/eric/thoughts/2023/11/01/blinded-by-the-light-dom/\">Blinded By the Light DOM\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://vercel.com/blog/partial-prerendering-with-next-js-creating-a-new-default-rendering-model\">Building towards a new default rendering model for web applications\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior\">Transition Behavior\u003C/a> - very cool new property tat I’ve added to my \u003Ca href=\"/wiki/computers/web-development/front-end/new-css\">CSS Wiki page\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.robinsloan.com/moonbound/introduction/\">Notes toward a pitch\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://cabel.com/2023/11/06/dak-and-the-golden-age-of-gadget-catalogs/\">DAK and the Golden Age of Gadget Catalogs\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://cabel.com/2023/10/06/nintendo-corporate-brochure-2015/\">Nintendo Company Brochure (2015) – cabel.com\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://sunglasscity.com/\">Wink Optics San Anselmo (formerly Sunglass City)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.icasf.org/calendar/159-illuminate-an-evening-with-rupy-c-tut\">Illuminate: An Evening with Rupy C. Tut - ICA SF\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.nature.com/articles/ncomms4677\">Social heuristics shape intuitive cooperation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://simonwillison.net/2019/Feb/19/eleven-laws-showrunning/\">The Eleven Laws of Showrunning\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://okbjgm.weebly.com/uploads/3/1/5/0/31506003/11_laws_of_showrunning_nice_version.pdf\">11 laws of showrunning NICE VERSION\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech\">Tech\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://maggieappleton.com/folk-interfaces\">Folk Interfaces\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://snarkmarket.com/2010/6498/\">A hypothetical path to the Speakularity / Snarkmarket\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://cra.mr/a-seven-dollar-subscription\">A $7 Subscription\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://12mv2.com/2023/10/05/2851-miles-bill-gurley-transcript-slides/\">2,851 Miles // Bill Gurley (Transcript + Slides)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://vadimkravcenko.com/shorts/habits-of-great-software-engineers/\">Habits of great software engineers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://codemanship.wordpress.com/2023/11/20/the-bluffers-guide-to-the-mythical-man-month/\">The Bluffer’s Guide to The Mythical Man-Month\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://engineering.fb.com/2023/09/07/culture/threads-inside-story-metas-newest-social-app/\">Threads: The inside story of Meta’s newest social app\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://josem.co/the-beauty-of-finished-software/\">The beauty of finished software | Jose M.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://jvns.ca/blog/2023/11/01/confusing-git-terminology/\">Confusing git terminology\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>And one very nice personal website:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://manuelmoreale.com/\">Manu – I write\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":862,"imagePaths":867,"frontmatter":868},[863,864,865,866],{"depth":27,"slug":301,"text":302},{"depth":27,"slug":423,"text":424},{"depth":27,"slug":429,"text":430},{"depth":27,"slug":539,"text":540},[],{"title":852,"slug":849,"description":583,"heroVideo":854,"heroAlt":855,"pubDate":853},"2023/links-oct-2023",{"id":869,"data":871,"body":877,"filePath":878,"assetImports":879,"digest":881,"rendered":882},{"title":872,"description":873,"pubDate":874,"heroAlt":875,"cover":876},"Links, October 2023","shorter days for links","October 31 2023","Photo of a golden retriever attentively sitting in front of a vintage personal computer, with BYTE magazine branding at the top. - DALLE 3","__ASTRO_IMAGE_../../../assets/2023-11-04-00.13.36.png","October is the longest month in Q4. This is somewhat cursed knowledge.\n\nYou only know that if you've been on a tight deadline as the end of the year approaches, and if you ever bother to count the work days, excluding the holidays. Close to 20 in October. Less in November and even fewer in December because of the holidays.\n\nSo it's only fitting that I completely blew it and am doing this a few days late, having made sure that my October was as jam packed with work as possible, an unconscious reaction from years of quarterly grinding, but I am not complaining. Here are the links from October 2023.\n\nI've been reading [Vineland](https://en.m.wikipedia.org/wiki/Vineland) by Thomas Pynchon, a book I remember starting but never finishing. I picked it back up after reading [The Ghost Forest]() by Greg King, which had reminded me of Vineland in some key details.\n\n## Front End\n\n- [Why I Won't Use Next.js](https://www.epicweb.dev/why-i-wont-use-nextjs)\n- https://chriscoyier.net/2023/10/17/a-couple-of-new-css-functions-id-never-heard-of/\n- https://lp.jetbrains.com/javascriptday2023/\n- https://sockets-api.proposal.wintercg.org/\n- https://benv.ca/blog/posts/the-story-of-third-party-javascript\n- https://github.com/rafunderscore/Layers\n- https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-5/\n- [The Three Cs: 🤝 Concatenate, 🗜️ Compress, 🗳️ Cache](https://csswizardry.com/2023/10/the-three-c-concatenate-compress-cache/)\n- [Wait, what's a bookmarklet? - The History of the Web](https://thehistoryoftheweb.com/postscript/wait-whats-a-bookmarklet/)\n- https://webkit.org/blog/13813/try-css-nesting-today-in-safari-technology-preview/\n\n## Software (other)\n\n- [The Absolute Minimum Every Software Developer Must Know About Unicode in 2023](https://tonsky.me/blog/unicode/)\n- [I Accidentally Saved Half A Million Dollars](https://ludic.mataroa.blog/blog/i-accidentally-saved-half-a-million-dollars/)\n- [Burning money on paid ads for a dev tool – what we've learned - PostHog](https://posthog.com/founders/dev-marketing-paid-ads)\n- [Reorient GitHub Pull Requests Around Changesets – Mitchell Hashimoto](https://mitchellh.com/writing/github-changesets)\n- [Fermat's Library | Ancient Babylonian Algorithms annotated/explained version.](https://fermatslibrary.com/s/ancient-babylonian-algorithms#email-newsletter)\n- https://cra.mr/work-life-balance\n- [What Every Developer Should Know About GPU Computing](https://codeconfessions.substack.com/p/gpu-computing)\n\n## AI\n\n- [Using Simon Willison’s LLM Package to Extract a Knowledge Graph](https://electricarchaeology.ca/2023/10/24/using-simon-willisons-llm-package-to-extract-a-knowledge-graph/)\n- [microsoft/autogen: Enable Next-Gen Large Language Model Applications. Join our Discord: https://discord.gg/pAbnFJrkgZ](https://github.com/microsoft/autogen)\n- [Agent Protocol Description - Agent Protocol](https://agentprotocol.ai/endpoints#create-agent-task)\n- [Unbundling AI](https://www.ben-evans.com/benedictevans/2023/10/5/unbundling-ai)\n- https://river.maxbittker.com/?id=7304306\n\n## Misc\n\n\n- https://www.youtube.com/watch?v=Gk-9Fd2mEnI\n\t- Look, I'm not in the Steve Jobs cult. But it's hard to deny the impact his work has had on the world. I'm typing this into a Macbook. And the content on display in this MIT Lecture he gave in 1992 is first rate.\n\t\t- hardware churns every 18 months\n\t\t- software churns much more slowly. 9 years for Microsoft to ape the Mac.\n\t\t\t- going further: 20 years for NEXT to become the default OS for most software dev (1990-2010), 10 years for Microsoft to flip the dev market back to them by giving up on Windows hegemony (2012-2022)\n* [Moral luck - Wikipedia](https://en.m.wikipedia.org/wiki/Moral_luck)\n* [HiResSprites_Escurat_3000.jpg (3000×2000)](https://apod.nasa.gov/apod/image/2310/HiResSprites_Escurat_3000.jpg)\n* [Posters - Humming-Birds](https://www.c82.net/hummingbirds/posters)\n* [The Tyranny of Stuctureless](https://www.jofreeman.com/joreen/tyranny.htm)\n* [Digression 4 - SUSTAINMENT - How Poor Maintenance Loses Wars - 1973, Israel Maintains - First Draft | Books in Progress](https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-4-sustainment-how-poor-maintenance-loses-wars-1973-israel-maintains/1)","src/content/writing/2023/links-oct-2023.md",[880],"../../../assets/2023-11-04-00.13.36.png","497264a534ac4980",{"html":883,"metadata":884},"\u003Cp>October is the longest month in Q4. This is somewhat cursed knowledge.\u003C/p>\n\u003Cp>You only know that if you’ve been on a tight deadline as the end of the year approaches, and if you ever bother to count the work days, excluding the holidays. Close to 20 in October. Less in November and even fewer in December because of the holidays.\u003C/p>\n\u003Cp>So it’s only fitting that I completely blew it and am doing this a few days late, having made sure that my October was as jam packed with work as possible, an unconscious reaction from years of quarterly grinding, but I am not complaining. Here are the links from October 2023.\u003C/p>\n\u003Cp>I’ve been reading \u003Ca href=\"https://en.m.wikipedia.org/wiki/Vineland\">Vineland\u003C/a> by Thomas Pynchon, a book I remember starting but never finishing. I picked it back up after reading \u003Ca href=\"\">The Ghost Forest\u003C/a> by Greg King, which had reminded me of Vineland in some key details.\u003C/p>\n\u003Ch2 id=\"front-end\">Front End\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.epicweb.dev/why-i-wont-use-nextjs\">Why I Won’t Use Next.js\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://chriscoyier.net/2023/10/17/a-couple-of-new-css-functions-id-never-heard-of/\">https://chriscoyier.net/2023/10/17/a-couple-of-new-css-functions-id-never-heard-of/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://lp.jetbrains.com/javascriptday2023/\">https://lp.jetbrains.com/javascriptday2023/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://sockets-api.proposal.wintercg.org/\">https://sockets-api.proposal.wintercg.org/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://benv.ca/blog/posts/the-story-of-third-party-javascript\">https://benv.ca/blog/posts/the-story-of-third-party-javascript\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/rafunderscore/Layers\">https://github.com/rafunderscore/Layers\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-5/\">https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-5/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://csswizardry.com/2023/10/the-three-c-concatenate-compress-cache/\">The Three Cs: 🤝 Concatenate, 🗜️ Compress, 🗳️ Cache\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://thehistoryoftheweb.com/postscript/wait-whats-a-bookmarklet/\">Wait, what’s a bookmarklet? - The History of the Web\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://webkit.org/blog/13813/try-css-nesting-today-in-safari-technology-preview/\">https://webkit.org/blog/13813/try-css-nesting-today-in-safari-technology-preview/\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"software-other\">Software (other)\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://tonsky.me/blog/unicode/\">The Absolute Minimum Every Software Developer Must Know About Unicode in 2023\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://ludic.mataroa.blog/blog/i-accidentally-saved-half-a-million-dollars/\">I Accidentally Saved Half A Million Dollars\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://posthog.com/founders/dev-marketing-paid-ads\">Burning money on paid ads for a dev tool – what we’ve learned - PostHog\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://mitchellh.com/writing/github-changesets\">Reorient GitHub Pull Requests Around Changesets – Mitchell Hashimoto\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://fermatslibrary.com/s/ancient-babylonian-algorithms#email-newsletter\">Fermat’s Library | Ancient Babylonian Algorithms annotated/explained version.\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://cra.mr/work-life-balance\">https://cra.mr/work-life-balance\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://codeconfessions.substack.com/p/gpu-computing\">What Every Developer Should Know About GPU Computing\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://electricarchaeology.ca/2023/10/24/using-simon-willisons-llm-package-to-extract-a-knowledge-graph/\">Using Simon Willison’s LLM Package to Extract a Knowledge Graph\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/microsoft/autogen\">microsoft/autogen: Enable Next-Gen Large Language Model Applications. Join our Discord: https://discord.gg/pAbnFJrkgZ\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://agentprotocol.ai/endpoints#create-agent-task\">Agent Protocol Description - Agent Protocol\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.ben-evans.com/benedictevans/2023/10/5/unbundling-ai\">Unbundling AI\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://river.maxbittker.com/?id=7304306\">https://river.maxbittker.com/?id=7304306\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.youtube.com/watch?v=Gk-9Fd2mEnI\">https://www.youtube.com/watch?v=Gk-9Fd2mEnI\u003C/a>\n\u003Cul>\n\u003Cli>Look, I’m not in the Steve Jobs cult. But it’s hard to deny the impact his work has had on the world. I’m typing this into a Macbook. And the content on display in this MIT Lecture he gave in 1992 is first rate.\n\u003Cul>\n\u003Cli>hardware churns every 18 months\u003C/li>\n\u003Cli>software churns much more slowly. 9 years for Microsoft to ape the Mac.\n\u003Cul>\n\u003Cli>going further: 20 years for NEXT to become the default OS for most software dev (1990-2010), 10 years for Microsoft to flip the dev market back to them by giving up on Windows hegemony (2012-2022)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://en.m.wikipedia.org/wiki/Moral_luck\">Moral luck - Wikipedia\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://apod.nasa.gov/apod/image/2310/HiResSprites_Escurat_3000.jpg\">HiResSprites_Escurat_3000.jpg (3000×2000)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.c82.net/hummingbirds/posters\">Posters - Humming-Birds\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.jofreeman.com/joreen/tyranny.htm\">The Tyranny of Stuctureless\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-4-sustainment-how-poor-maintenance-loses-wars-1973-israel-maintains/1\">Digression 4 - SUSTAINMENT - How Poor Maintenance Loses Wars - 1973, Israel Maintains - First Draft | Books in Progress\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":885,"imagePaths":892,"frontmatter":893},[886,887,890,891],{"depth":27,"slug":423,"text":424},{"depth":27,"slug":888,"text":889},"software-other","Software (other)",{"depth":27,"slug":301,"text":302},{"depth":27,"slug":429,"text":430},[],{"title":872,"slug":869,"description":873,"cover":880,"heroAlt":875,"pubDate":874},"2023/links-sept-2023",{"id":894,"data":896,"body":902,"filePath":903,"assetImports":904,"digest":906,"rendered":907},{"title":897,"description":898,"pubDate":899,"heroAlt":900,"cover":901},"Links, September 2023","faintly falling, falling faintly, fall links","September 30 2023","Sunset behind the flatirons, Boulder CO","__ASTRO_IMAGE_../../../assets/IMG_1162.jpeg","I write these posts on the last day of the month, so it's very easy for recency bias to creep in. This month, I kept a document open as a running list of the links I felt were noteworthy.\n\nIn addition to these swell links, a few months ago I added an RSS feed that mirrors my favorites from Feedbin: https://sambreed.dev/starred.xml\n\n## AI\n- Simon Wilson continues to have excellent takes on AI. https://simonwillison.net/2023/Sep/29/llms-podcast/#comparing-llms-to-crypto\n\t- Particularly, what he says about being able to convince yourself that it's useless. This type of motivated reasoning is shallow skepticism.\n- https://maggieappleton.com/squish-structure\n  - Maggie's website and takes on, well, everything are fantastic. The content here has a lot of parallels to work that I've been party to on the SHV design team for the last 3 years, and I'm excited to see similar ideas presented so well here.\n- https://www.leebutterman.com/2023/06/01/offline-realtime-embedding-search.html\n- https://supabase.com/blog/increase-performance-pgvector-hnsw\n- https://arxiv.org/abs/1901.05103\n\n## Long Reads\n- [Understanding WASM](https://www.neversaw.us/2023/09/04/understanding-wasm/part3/you-are-here/) Part 3 of a tour-de-force blog post by Chris Dickinson. I've never met Chris, but know some of the folks he's worked with and have been following him for several years. He's a sharp thinker and this is an all-timer. It opens with the most concise definition of how processes work that I've ever read.\n- https://www.ben-evans.com/benedictevans/2023/8/24/when-tech-says-no\n\t- People like to rag on Ben Evans but I don't get it. I've always gotten a lot out of his newsletter, and posts like this that help frame broader problems of the tech industry's interplay with politics and legislation are a primary example of that.\n- https://thetaoofwealth.wordpress.com/2013/02/17/harry-brownes-17-golden-rules-of-financial-safety/\n\t- a 10+ year old post, gotta love the web.\n- [List of digital bookshelves](https://tomcritchlow.com/wiki/books/bookshelves/)\n\t- I used to do this (sort of) but then fell off. Sourcing cover images and links and keeping it up to date was a pain. I don't want to give in to Goodreads, I have enough Amazon in my life already without giving them even more data.\n- https://pluralistic.net/2023/09/05/not-that-naomi/\n\t- If I linked to every Cory Doctorow post I read, this blog would mostly be links to Cory Doctorow posts. I've been reading him since 2007, when I first started noticing \"blogging\" and \"bloggers\" were a thing. I read Eastern Standard Tribe and Someone Comes to Town, Someone Leaves Town\n- https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-3-corrosion-rust-never-sleeps/3\n\t- Rust is super interesting and I'm looking forward to reading more of this book as it comes out, BUT\n\t- My hot takes from reading his biography last year are still heavy in my mind:\n\t\t- Brand is a trust fund baby and an unrepentant asshole, treated his first wife like shit, entertaining multiple affairs while stringing her along. If I knew someone that did this IRL, I would not want to associate with them. If you're unhappy and want to be with other people, fine. End it and move on. Don't hurt the other party. The book describes him as being miserably depressed during all of this, to which my response was, \"yes.\"\n\t\t- He frequently used people. He didn't ever comprehend that his easy relationship to money wasn't universal. It's easy to think that nobody needs something you have in abundance.\n\t\t- He shows up at the right place at the right time. It's luck. He's just a lucky guy.\n\n## Frontend\n\n- https://deck-24abcd.netlify.app/\n\t- https://vercel.com/blog/building-an-interactive-webgl-experience-in-next-js\n- https://github.com/shikijs/shiki\n\t- I used this to add code highlighting to and AI chat ui I maintain for work.\n- https://xtermjs.org/\n\t- This is cool!\n- [why not react](https://dev.to/tigt/why-not-react-2f8l)\n\t- Q3 2023 will be marked as the quarter that I lost faith in React, embraced Svelte, and learned that not all choices will stand the test of time. React will remain the leader in frontend imaginations for a bit longer, but I think that its time in the sun is starting to wane. The failure and complexity of Next.js's App directory.\n- https://www.joshwcomeau.com/react/server-components/ 'splainer on React Server components. I love Josh's website.\n- [Using Stencil to make a live poll Web Component](https://blog.partykit.io/posts/live-polls-with-stencil/) Someday, somehow, Web Components will be something that we all use. Not yet, however, we're getting closer.\n- https://begin.com/blog/posts/2023-09-28-introducing-enhance-music More jangle and discord concerning Web Components. I wish this weren't shackled to a custom deployment infrastructure (squints) that's somehow not considered a build step by the authors. Get this tech on other platforms and it's way more interesting.\n- [Chis Coyier on Live Coding Interviews](https://chriscoyier.net/2023/09/16/live-coding-interviews/)\n\t- This is a complex issue! and I have opinions!\n\t\t- Everyone hates coding interviews.\n\t\t- Interviewing a candidate is fundamentally a low trust situation.\n\t\t- Interviews must build trust between the company and the developer.\n\t- Background. I hired 120 front end developers at Credit Karma between 2015-2019. By the time I left in 2020, I had conducted over 400 interviews. I helped build the interview loop that was used by the entire company as it grew by 5x during my tenure. Before that, at my consultancy, I hired ~60 developers in 6 years (unfortunately I only have the numerator here, but it's safe to assume that I interviewed more developers here than we hired.) Since 2020, I've been advising and building companies at Sutter Hill Ventures.\n\t- Live coding helps build conviction that the candidate can do the work themselves.\n\t\t- Take homes place a lot of trust in a candidate. Take-homes can be the source of a hiring signal, but there's not a good way to falsify that the candidate did the work themselves. AI tools have made this even more difficult.\n\t- Take-homes present a Moral Hazard for the candidate. Nobody wants to assume bad intent. But there is an opportunity for a candidate to misrepresent themselves in a take home exercise in ways that insert doubt into the process.\n\t\t- Taking longer than the time allocated. The separation between a new developer and one with years of experience is the time it takes to solve an unfamiliar problem. This is fine, but if you're hiring someone for their experience, you can't judge the speed of their responses. If someone completes a take home successfully but takes 8 hours instead of 1, you'll never know without blindly trusting the candidate.\n\t\t- Using outside resources. Phone a friend, ask AI, crib from an open source project. Of course, given the situation on the job, these behaviors are normal and appropriate in the day to day. Resourcefulness is good! But so is situational awareness. If you wouldn't do it during a coding interview, you shouldn't do it during a take home. But who's watching...\n\t\t- Sharing evaluation materials. Your interview questions will get out no matter what. Having a backup is important.\n\t\t- At best, a take home should be time-boxed and then evaluated in a follow-up session with the candidate. This is more work for both parties.\n\t- Hiring is tough. The company is trying to find someone to perform in a technical role. Finding out if they'll be able to fulfill the job expectations. Trust cannot be built up instantly. In a negotiation, each party must be willing to give something up in order to proceed. For the company, they're willing to part with their time, resources, and capital.\n\t- Good hiring is about building trust. The company must trust that a candidate is representing themselves honestly. Likewise, a candidate must trust that the company is presenting the role and benefits accurately.\n\t\t- Everyone lies a little. It's what humans do!\n\t- Take-home's are great, if\n\t\t- You have limited time to conduct in-person interviews.\n\t\t- You can balance out moral hazards.\n\t\t- You understand that they provide different signals than live-coding.\n\n## Backend\n\n- https://avestura.dev/blog/explaining-the-postgres-meme\n- More postgres things. Serverless Status, one of the newsletters that I've been subbed to for many years, wound down in September. This was offered as something to replace it with? ok, I'll drop it in feedbin. https://postgresweekly.com/issues/522\n\n\n## Etc\n\n- https://platinuminch24.notion.site/platinuminch24/100-lesser-known-but-useful-websites-78a9949a56fa422997a76f5331da02c9\n\t- I'm not sure about notion as a long-term hosting platform, but what do I know. Lists are good and cool.\n- https://journals.sagepub.com/doi/10.1177/17456916221148147\n- https://motd.co/2023/09/postmarks-launch/","src/content/writing/2023/links-sept-2023.md",[905],"../../../assets/IMG_1162.jpeg","b0052025decde4aa",{"html":908,"metadata":909},"\u003Cp>I write these posts on the last day of the month, so it’s very easy for recency bias to creep in. This month, I kept a document open as a running list of the links I felt were noteworthy.\u003C/p>\n\u003Cp>In addition to these swell links, a few months ago I added an RSS feed that mirrors my favorites from Feedbin: \u003Ca href=\"https://sambreed.dev/starred.xml\">https://sambreed.dev/starred.xml\u003C/a>\u003C/p>\n\u003Ch2 id=\"ai\">AI\u003C/h2>\n\u003Cul>\n\u003Cli>Simon Wilson continues to have excellent takes on AI. \u003Ca href=\"https://simonwillison.net/2023/Sep/29/llms-podcast/#comparing-llms-to-crypto\">https://simonwillison.net/2023/Sep/29/llms-podcast/#comparing-llms-to-crypto\u003C/a>\n\u003Cul>\n\u003Cli>Particularly, what he says about being able to convince yourself that it’s useless. This type of motivated reasoning is shallow skepticism.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://maggieappleton.com/squish-structure\">https://maggieappleton.com/squish-structure\u003C/a>\n\u003Cul>\n\u003Cli>Maggie’s website and takes on, well, everything are fantastic. The content here has a lot of parallels to work that I’ve been party to on the SHV design team for the last 3 years, and I’m excited to see similar ideas presented so well here.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.leebutterman.com/2023/06/01/offline-realtime-embedding-search.html\">https://www.leebutterman.com/2023/06/01/offline-realtime-embedding-search.html\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://supabase.com/blog/increase-performance-pgvector-hnsw\">https://supabase.com/blog/increase-performance-pgvector-hnsw\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://arxiv.org/abs/1901.05103\">https://arxiv.org/abs/1901.05103\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"long-reads\">Long Reads\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.neversaw.us/2023/09/04/understanding-wasm/part3/you-are-here/\">Understanding WASM\u003C/a> Part 3 of a tour-de-force blog post by Chris Dickinson. I’ve never met Chris, but know some of the folks he’s worked with and have been following him for several years. He’s a sharp thinker and this is an all-timer. It opens with the most concise definition of how processes work that I’ve ever read.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.ben-evans.com/benedictevans/2023/8/24/when-tech-says-no\">https://www.ben-evans.com/benedictevans/2023/8/24/when-tech-says-no\u003C/a>\n\u003Cul>\n\u003Cli>People like to rag on Ben Evans but I don’t get it. I’ve always gotten a lot out of his newsletter, and posts like this that help frame broader problems of the tech industry’s interplay with politics and legislation are a primary example of that.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://thetaoofwealth.wordpress.com/2013/02/17/harry-brownes-17-golden-rules-of-financial-safety/\">https://thetaoofwealth.wordpress.com/2013/02/17/harry-brownes-17-golden-rules-of-financial-safety/\u003C/a>\n\u003Cul>\n\u003Cli>a 10+ year old post, gotta love the web.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://tomcritchlow.com/wiki/books/bookshelves/\">List of digital bookshelves\u003C/a>\n\u003Cul>\n\u003Cli>I used to do this (sort of) but then fell off. Sourcing cover images and links and keeping it up to date was a pain. I don’t want to give in to Goodreads, I have enough Amazon in my life already without giving them even more data.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://pluralistic.net/2023/09/05/not-that-naomi/\">https://pluralistic.net/2023/09/05/not-that-naomi/\u003C/a>\n\u003Cul>\n\u003Cli>If I linked to every Cory Doctorow post I read, this blog would mostly be links to Cory Doctorow posts. I’ve been reading him since 2007, when I first started noticing “blogging” and “bloggers” were a thing. I read Eastern Standard Tribe and Someone Comes to Town, Someone Leaves Town\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-3-corrosion-rust-never-sleeps/3\">https://books.worksinprogress.co/book/maintenance-of-everything/vehicles/digression-3-corrosion-rust-never-sleeps/3\u003C/a>\n\u003Cul>\n\u003Cli>Rust is super interesting and I’m looking forward to reading more of this book as it comes out, BUT\u003C/li>\n\u003Cli>My hot takes from reading his biography last year are still heavy in my mind:\n\u003Cul>\n\u003Cli>Brand is a trust fund baby and an unrepentant asshole, treated his first wife like shit, entertaining multiple affairs while stringing her along. If I knew someone that did this IRL, I would not want to associate with them. If you’re unhappy and want to be with other people, fine. End it and move on. Don’t hurt the other party. The book describes him as being miserably depressed during all of this, to which my response was, “yes.”\u003C/li>\n\u003Cli>He frequently used people. He didn’t ever comprehend that his easy relationship to money wasn’t universal. It’s easy to think that nobody needs something you have in abundance.\u003C/li>\n\u003Cli>He shows up at the right place at the right time. It’s luck. He’s just a lucky guy.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"frontend\">Frontend\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://deck-24abcd.netlify.app/\">https://deck-24abcd.netlify.app/\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://vercel.com/blog/building-an-interactive-webgl-experience-in-next-js\">https://vercel.com/blog/building-an-interactive-webgl-experience-in-next-js\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/shikijs/shiki\">https://github.com/shikijs/shiki\u003C/a>\n\u003Cul>\n\u003Cli>I used this to add code highlighting to and AI chat ui I maintain for work.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://xtermjs.org/\">https://xtermjs.org/\u003C/a>\n\u003Cul>\n\u003Cli>This is cool!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://dev.to/tigt/why-not-react-2f8l\">why not react\u003C/a>\n\u003Cul>\n\u003Cli>Q3 2023 will be marked as the quarter that I lost faith in React, embraced Svelte, and learned that not all choices will stand the test of time. React will remain the leader in frontend imaginations for a bit longer, but I think that its time in the sun is starting to wane. The failure and complexity of Next.js’s App directory.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.joshwcomeau.com/react/server-components/\">https://www.joshwcomeau.com/react/server-components/\u003C/a> ‘splainer on React Server components. I love Josh’s website.\u003C/li>\n\u003Cli>\u003Ca href=\"https://blog.partykit.io/posts/live-polls-with-stencil/\">Using Stencil to make a live poll Web Component\u003C/a> Someday, somehow, Web Components will be something that we all use. Not yet, however, we’re getting closer.\u003C/li>\n\u003Cli>\u003Ca href=\"https://begin.com/blog/posts/2023-09-28-introducing-enhance-music\">https://begin.com/blog/posts/2023-09-28-introducing-enhance-music\u003C/a> More jangle and discord concerning Web Components. I wish this weren’t shackled to a custom deployment infrastructure (squints) that’s somehow not considered a build step by the authors. Get this tech on other platforms and it’s way more interesting.\u003C/li>\n\u003Cli>\u003Ca href=\"https://chriscoyier.net/2023/09/16/live-coding-interviews/\">Chis Coyier on Live Coding Interviews\u003C/a>\n\u003Cul>\n\u003Cli>This is a complex issue! and I have opinions!\n\u003Cul>\n\u003Cli>Everyone hates coding interviews.\u003C/li>\n\u003Cli>Interviewing a candidate is fundamentally a low trust situation.\u003C/li>\n\u003Cli>Interviews must build trust between the company and the developer.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Background. I hired 120 front end developers at Credit Karma between 2015-2019. By the time I left in 2020, I had conducted over 400 interviews. I helped build the interview loop that was used by the entire company as it grew by 5x during my tenure. Before that, at my consultancy, I hired ~60 developers in 6 years (unfortunately I only have the numerator here, but it’s safe to assume that I interviewed more developers here than we hired.) Since 2020, I’ve been advising and building companies at Sutter Hill Ventures.\u003C/li>\n\u003Cli>Live coding helps build conviction that the candidate can do the work themselves.\n\u003Cul>\n\u003Cli>Take homes place a lot of trust in a candidate. Take-homes can be the source of a hiring signal, but there’s not a good way to falsify that the candidate did the work themselves. AI tools have made this even more difficult.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Take-homes present a Moral Hazard for the candidate. Nobody wants to assume bad intent. But there is an opportunity for a candidate to misrepresent themselves in a take home exercise in ways that insert doubt into the process.\n\u003Cul>\n\u003Cli>Taking longer than the time allocated. The separation between a new developer and one with years of experience is the time it takes to solve an unfamiliar problem. This is fine, but if you’re hiring someone for their experience, you can’t judge the speed of their responses. If someone completes a take home successfully but takes 8 hours instead of 1, you’ll never know without blindly trusting the candidate.\u003C/li>\n\u003Cli>Using outside resources. Phone a friend, ask AI, crib from an open source project. Of course, given the situation on the job, these behaviors are normal and appropriate in the day to day. Resourcefulness is good! But so is situational awareness. If you wouldn’t do it during a coding interview, you shouldn’t do it during a take home. But who’s watching…\u003C/li>\n\u003Cli>Sharing evaluation materials. Your interview questions will get out no matter what. Having a backup is important.\u003C/li>\n\u003Cli>At best, a take home should be time-boxed and then evaluated in a follow-up session with the candidate. This is more work for both parties.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Hiring is tough. The company is trying to find someone to perform in a technical role. Finding out if they’ll be able to fulfill the job expectations. Trust cannot be built up instantly. In a negotiation, each party must be willing to give something up in order to proceed. For the company, they’re willing to part with their time, resources, and capital.\u003C/li>\n\u003Cli>Good hiring is about building trust. The company must trust that a candidate is representing themselves honestly. Likewise, a candidate must trust that the company is presenting the role and benefits accurately.\n\u003Cul>\n\u003Cli>Everyone lies a little. It’s what humans do!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Take-home’s are great, if\n\u003Cul>\n\u003Cli>You have limited time to conduct in-person interviews.\u003C/li>\n\u003Cli>You can balance out moral hazards.\u003C/li>\n\u003Cli>You understand that they provide different signals than live-coding.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"backend\">Backend\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://avestura.dev/blog/explaining-the-postgres-meme\">https://avestura.dev/blog/explaining-the-postgres-meme\u003C/a>\u003C/li>\n\u003Cli>More postgres things. Serverless Status, one of the newsletters that I’ve been subbed to for many years, wound down in September. This was offered as something to replace it with? ok, I’ll drop it in feedbin. \u003Ca href=\"https://postgresweekly.com/issues/522\">https://postgresweekly.com/issues/522\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"etc\">Etc\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://platinuminch24.notion.site/platinuminch24/100-lesser-known-but-useful-websites-78a9949a56fa422997a76f5331da02c9\">https://platinuminch24.notion.site/platinuminch24/100-lesser-known-but-useful-websites-78a9949a56fa422997a76f5331da02c9\u003C/a>\n\u003Cul>\n\u003Cli>I’m not sure about notion as a long-term hosting platform, but what do I know. Lists are good and cool.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://journals.sagepub.com/doi/10.1177/17456916221148147\">https://journals.sagepub.com/doi/10.1177/17456916221148147\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://motd.co/2023/09/postmarks-launch/\">https://motd.co/2023/09/postmarks-launch/\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":910,"imagePaths":923,"frontmatter":924},[911,912,915,918,921],{"depth":27,"slug":301,"text":302},{"depth":27,"slug":913,"text":914},"long-reads","Long Reads",{"depth":27,"slug":916,"text":917},"frontend","Frontend",{"depth":27,"slug":919,"text":920},"backend","Backend",{"depth":27,"slug":304,"text":922},"Etc",[],{"title":897,"slug":894,"description":898,"cover":905,"heroAlt":900,"pubDate":899},"39-lessons",{"id":925,"data":927,"body":933,"filePath":934,"assetImports":935,"digest":937,"rendered":938},{"title":928,"description":929,"pubDate":930,"heroAlt":931,"cover":932},"39 Lessons","39 lessons to live by","May 27 2025","prompt: A dense redwood forest","__ASTRO_IMAGE_../../../assets/1eb81b18-a73d-4b18-a407-ccf244dba240.jpg","Today is my birthday, and [Mario Fraioli's newsletter The Morning Shakeout](https://themorningshakeout.com/) had [his list of 43 lessons for his 43rd birthday](https://themorningshakeout.com/43-life-lessons-for-my-43rd-birthday/), a tradition he cribbed from none other than [Kevin Kelly](https://kk.org/thetechnium/68-bits-of-unsolicited-advice/) who posted 68 Bits of Unsolicited Advice for his birthday a few years ago. I remember that post and I got to meet Kevin at his studio in Pacifica last month. I decided to have a crack at my own list.\n\n1. You get good at the stuff you do all the time.\n2. Feeling bad? You're probably not drinking enough water.\n3. You can't coach enthusiasm.\n4. The default state of any deal is ‘dead’. Your job is to keep it alive.\n5. Make eye contact with people when they're presenting, and nod along if you agree with them. It's a helpful way to encourage people to be at their best.\n6. \"Yes, and\" is infinitely better than \"no, but\"\n7. If you \"don't disagree\" than you \"agree.\" Say that if it's what you mean. If it isn't, then say something else. Be precise.\n8. Praise in public, criticize in private.\n9. But, don't make a habit of giving unsolicited criticism, especially to a third party. Your cards are yours to see and you don't need to play them all every hand.\n10. Everyone gets their own deal, so don't compare your deal to others.\n11. If you're talking to someone and they recommend a book, even in passing, buy the book and read it. If it was good enough to mention maybe it has something to say.\n12. You do not have to finish every book you start.\n13. Alcohol is bad for you, and drinking is not something to romanticize.\n14. You can party without getting drunk.\n15. Service workers (waiters, bussers, janitors, the person who makes your coffee) have harder jobs than you. Respect their time, be nice, and always tip. The karma will make it back to you.\n16. Make backups. If you care about keeping something, store three copies in separate locations. \"Two is one and one is none.\"\n17. Oil changes are every six months or every 5,000 miles, whichever comes sooner. Don't believe the sticker, keep your own records.\n18. Keep a pair of work gloves in the glove compartment and an umbrella in the door, you may need them in a pinch someday and will glad to have them.\n19. Earplugs make loud concerts better.\n20. Good design is worth extra.\n21. Made in the USA is worth extra.\n22. Buy the cheapest version of any tool you buy for the first time. Splurge only when you know you'll use it.\n23. Attempt to put all consumables to their maximum number of uses.\n24. Bicycles are simple to fix but only if you the right tools.\n25. Humans are antifragile; we benefit from moderate amounts of disorder and deviations from routine.\n26. Tip your barber 100% and you will always be able to move your next appointment no questions asked.\n27. If you go to the Alameda flea market, start by walking all the way to the back row without stopping, then work your way back to the entrance. When you buy something heavy you'll know exactly how far you'll be walking with it.\n28. Tit-for-tat is the only winning strategy in multi-round prisoners' dilemma. It punishes deviations from social norms and reinforces them.\n29. Avoid zero-sum games.\n30. Gamble on what you can afford lose without worrying about it.\n31. Investing can be painful, keep enough cash to be solvent even if the markets completely tank.\n32. Happiness is inversely proportional to how often you check your portfolio.\n33. Motorcycles are fun at the expense of danger.\n34. Stretching is the best way to check-in with your body.\n35. Say ‘Thank you‘ and mean it.\n36. Construction projects are always late and over budget, so plan accordingly.\n37. Expectations are a powerful lens through which we interpret reality. The good news is that you get to choose them for yourself.\n38. Most running should be in heartrate zone-2 (around 150bpm) punctuated by a handful of 20-second bursts of speed. Learn how to do this and you'll get faster and run further.\n39. You never have to stop learning.","src/content/writing/2025/39-lessons.md",[936],"../../../assets/1eb81b18-a73d-4b18-a407-ccf244dba240.jpg","9b7ad5ce44b14b93",{"html":939,"metadata":940},"\u003Cp>Today is my birthday, and \u003Ca href=\"https://themorningshakeout.com/\">Mario Fraioli’s newsletter The Morning Shakeout\u003C/a> had \u003Ca href=\"https://themorningshakeout.com/43-life-lessons-for-my-43rd-birthday/\">his list of 43 lessons for his 43rd birthday\u003C/a>, a tradition he cribbed from none other than \u003Ca href=\"https://kk.org/thetechnium/68-bits-of-unsolicited-advice/\">Kevin Kelly\u003C/a> who posted 68 Bits of Unsolicited Advice for his birthday a few years ago. I remember that post and I got to meet Kevin at his studio in Pacifica last month. I decided to have a crack at my own list.\u003C/p>\n\u003Col>\n\u003Cli>You get good at the stuff you do all the time.\u003C/li>\n\u003Cli>Feeling bad? You’re probably not drinking enough water.\u003C/li>\n\u003Cli>You can’t coach enthusiasm.\u003C/li>\n\u003Cli>The default state of any deal is ‘dead’. Your job is to keep it alive.\u003C/li>\n\u003Cli>Make eye contact with people when they’re presenting, and nod along if you agree with them. It’s a helpful way to encourage people to be at their best.\u003C/li>\n\u003Cli>“Yes, and” is infinitely better than “no, but”\u003C/li>\n\u003Cli>If you “don’t disagree” than you “agree.” Say that if it’s what you mean. If it isn’t, then say something else. Be precise.\u003C/li>\n\u003Cli>Praise in public, criticize in private.\u003C/li>\n\u003Cli>But, don’t make a habit of giving unsolicited criticism, especially to a third party. Your cards are yours to see and you don’t need to play them all every hand.\u003C/li>\n\u003Cli>Everyone gets their own deal, so don’t compare your deal to others.\u003C/li>\n\u003Cli>If you’re talking to someone and they recommend a book, even in passing, buy the book and read it. If it was good enough to mention maybe it has something to say.\u003C/li>\n\u003Cli>You do not have to finish every book you start.\u003C/li>\n\u003Cli>Alcohol is bad for you, and drinking is not something to romanticize.\u003C/li>\n\u003Cli>You can party without getting drunk.\u003C/li>\n\u003Cli>Service workers (waiters, bussers, janitors, the person who makes your coffee) have harder jobs than you. Respect their time, be nice, and always tip. The karma will make it back to you.\u003C/li>\n\u003Cli>Make backups. If you care about keeping something, store three copies in separate locations. “Two is one and one is none.”\u003C/li>\n\u003Cli>Oil changes are every six months or every 5,000 miles, whichever comes sooner. Don’t believe the sticker, keep your own records.\u003C/li>\n\u003Cli>Keep a pair of work gloves in the glove compartment and an umbrella in the door, you may need them in a pinch someday and will glad to have them.\u003C/li>\n\u003Cli>Earplugs make loud concerts better.\u003C/li>\n\u003Cli>Good design is worth extra.\u003C/li>\n\u003Cli>Made in the USA is worth extra.\u003C/li>\n\u003Cli>Buy the cheapest version of any tool you buy for the first time. Splurge only when you know you’ll use it.\u003C/li>\n\u003Cli>Attempt to put all consumables to their maximum number of uses.\u003C/li>\n\u003Cli>Bicycles are simple to fix but only if you the right tools.\u003C/li>\n\u003Cli>Humans are antifragile; we benefit from moderate amounts of disorder and deviations from routine.\u003C/li>\n\u003Cli>Tip your barber 100% and you will always be able to move your next appointment no questions asked.\u003C/li>\n\u003Cli>If you go to the Alameda flea market, start by walking all the way to the back row without stopping, then work your way back to the entrance. When you buy something heavy you’ll know exactly how far you’ll be walking with it.\u003C/li>\n\u003Cli>Tit-for-tat is the only winning strategy in multi-round prisoners’ dilemma. It punishes deviations from social norms and reinforces them.\u003C/li>\n\u003Cli>Avoid zero-sum games.\u003C/li>\n\u003Cli>Gamble on what you can afford lose without worrying about it.\u003C/li>\n\u003Cli>Investing can be painful, keep enough cash to be solvent even if the markets completely tank.\u003C/li>\n\u003Cli>Happiness is inversely proportional to how often you check your portfolio.\u003C/li>\n\u003Cli>Motorcycles are fun at the expense of danger.\u003C/li>\n\u003Cli>Stretching is the best way to check-in with your body.\u003C/li>\n\u003Cli>Say ‘Thank you‘ and mean it.\u003C/li>\n\u003Cli>Construction projects are always late and over budget, so plan accordingly.\u003C/li>\n\u003Cli>Expectations are a powerful lens through which we interpret reality. The good news is that you get to choose them for yourself.\u003C/li>\n\u003Cli>Most running should be in heartrate zone-2 (around 150bpm) punctuated by a handful of 20-second bursts of speed. Learn how to do this and you’ll get faster and run further.\u003C/li>\n\u003Cli>You never have to stop learning.\u003C/li>\n\u003C/ol>",{"headings":941,"imagePaths":942,"frontmatter":943},[],[],{"title":928,"slug":925,"description":929,"cover":936,"heroAlt":931,"pubDate":930},"2025/links-april",{"id":944,"data":946,"body":952,"filePath":953,"assetImports":954,"digest":956,"rendered":957},{"title":947,"description":948,"pubDate":949,"heroAlt":950,"cover":951},"Links, April 2025","automated link harvesting","Apr 10 2025","prompt: 'A stylized, digital illustration of a cherry blossom tree with code snippets and web elements falling instead of petals. The background should have a subtle tech aesthetic with faint circuit patterns. The overall mood should be spring-like and optimistic, with soft colors that blend technology and nature. Photorealistic, detailed.' model: Reve preview","__ASTRO_IMAGE_../../../assets/links-april-2025-reve.png","I've been heads-down working on [Bench](https://bench.io/) since the end of last year, and let me tell you, it has come a long way.\n\nBench is an AI-powered intelligent workspace. The idea is simple: Take the best models, give them well designed tools, access to files & the web, and let it rip. It can do things like:\n- look at your open browser tabs\n- search the web\n- visit websites\n- generate structured data and do data-science\n- analyze files like PDFs, images, and videos\n- generate images\n- create documents\n- plus all of the usual things a well-prompted state-of-the-art LLM can do.\n\nBench has come so far that it can write a blog post like this one. In fact, everything in this post except the introduction was [sourced and written by Bench in a few minutes](https://bench.io/share/21NJLhvH5N5dYzZqBti4gN). Bench can even serve as a publishing platform, here's a [published page](https://bench.io/share/artifact/5Rs3CrNg4Wfkqk4kyfX0sN) of the raw content of this post.\n\nTo write this post, Bench looked at my open tabs on my iPad, wrote a draft post, I gave feedback, it visited the links to get better summaries, then it generated an image with [Reve](https://preview.reve.art/).\n\nBench is currently in private preview. You can sign up with [this link](https://bench.io/invite/4a6nd6).\n\nNow to my months-long backlog of open tabs.\n\n## Front End\n\n* [Fine-tuning Text Inputs](https://garrettdimon.com/journal/posts/fine-tuning-text-inputs) · Garrett Dimon's exploration of HTML form attributes is the kind of deep dive I live for. Adding attributes like `spellcheck`, `autofocus`, and `autocapitalize` can dramatically improve form UX without a single line of JavaScript. It's a reminder that sometimes the browser already has what you need€”you just have to know where to look.\n\n* [Minimal CSS-only blurry image placeholders](https://leanrada.com/notes/css-only-lqip/) · This technique for creating blurry image placeholders using only CSS is genuinely clever. By encoding a simplified version of an image into a single integer and then decoding it with bit manipulation in CSS, the author creates a lightweight placeholder that loads instantly. The bit-packing approach feels like the kind of elegant hack that makes the web special.\n\n* [the html review](https://thehtml.review/about) · An annual online journal of literature made specifically for the web. In an era where everything is a React app wrapped in a NextJS wrapper inside a Vercel deployment, it's refreshing to see people celebrating the foundational technology of the web. I've bookmarked this to revisit when I need inspiration.\n\n## Databases & Code\n\n* [The Part of PostgreSQL We Hate the Most](https://www.cs.cmu.edu/~pavlo/blog/2023/04/the-part-of-postgresql-we-hate-the-most.html) · Andy Pavlo doesn't hold back in this critique of PostgreSQL's MVCC implementation. The way Postgres copies entire rows for updates rather than using delta records (like Oracle and MySQL) leads to massive bloat and performance issues. Having battled the autovacuum daemon myself, this piece resonated deeply. Sometimes the tools we love have fundamental flaws we just learn to work around.\n\n* [How Core Git Developers Configure Git](https://blog.gitbutler.com/how-git-core-devs-configure-git/) · Peeking at the Git configs of Git's own developers is like getting cooking tips from professional chefs. The nine settings they consider essential€”like `merge.conflictstyle = zdiff3` and `diff.algorithm = histogram`€”have already made their way into my `.gitconfig`. The fact that even Git's creators need to tweak the defaults speaks volumes about software design tradeoffs.\n\n* [MAKING SOFTWARE](https://www.makingsoftware.com/) · A refreshingly honest reference manual about how everyday software works. It's not a tutorial or guide but rather an exploration of the inner workings of technology we use daily. The illustrations are delightful, and the approach of explaining complex concepts visually makes this accessible even to non-technical readers. I wish more technical content had this level of clarity.\n\n* [Point of WebGPU on native](https://kvark.github.io/web/gpu/native/2020/05/03/point-of-webgpu-native.html) · An older but still relevant piece on WebGPU's potential beyond browsers. The vision of a unified graphics API that works across platforms is compelling, especially as the boundaries between web and native continue to blur. I've been experimenting with some visualization work lately, and the promise of \"write once, run anywhere\" for graphics code is tantalizing.\n\n## Tech History\n\n* [A USB interface to the \"Mother of All Demos\" keyset](https://www.righto.com/2025/03/mother-of-all-demos-usb-keyset-interface.html) · Ken Shirriff continues to be a computing archaeology hero. This modern implementation of Engelbart's chord keyset from his legendary 1968 demo makes me want to build one myself. The fact that someone is keeping this 57-year-old innovation alive in 2025 is both wonderful and slightly mad. I love these projects that connect us to computing's rich history.\n\n## AI & Future Thinking\n\n* [Dario Amodei – Machines of Loving Grace](https://darioamodei.com/machines-of-loving-grace) · Anthropic's CEO offers a thoughtful perspective on AI's potential upside that avoids both doomerism and blind techno-optimism. His vision of AI transforming fields like biology, neuroscience, and economic development is compelling, though I remain cautiously skeptical about how this plays out in practice. The essay's title nod to Richard Brautigan's poem sets just the right tone.\n\n* [reclaiming the utopian vision - by Patricia Mou](https://wellnesswisdom.substack.com/p/reclaiming-the-utopian-vision) · Patricia's exploration of utopian thinking in urban planning hit me at the right time. Her argument that we shouldn't abandon utopian visions but rather see them as dynamic processes rather than static endpoints resonates with my own oscillation between optimism and pessimism about technology. The case studies of Auroville and Bhutan as examples of ongoing utopian experiments are particularly fascinating.\n\n## Work & Life\n\n* [The 80-hour Myth](https://nav.al/the-80-hour-myth) · Naval's take on work hours cuts through a lot of the hustle culture nonsense. His point that nobody truly works 80 productive hours a week€”that our best work comes in \"tremendous, focused bursts, surrounded by long periods of dullness and inactivity\"€”matches my experience. I've been tracking my own deep work time and the results have been... humbling. Quality over quantity remains the hardest lesson to internalize.","src/content/writing/2025/links-april.md",[955],"../../../assets/links-april-2025-reve.png","9e71c0863b66f83b",{"html":958,"metadata":959},"\u003Cp>I’ve been heads-down working on \u003Ca href=\"https://bench.io/\">Bench\u003C/a> since the end of last year, and let me tell you, it has come a long way.\u003C/p>\n\u003Cp>Bench is an AI-powered intelligent workspace. The idea is simple: Take the best models, give them well designed tools, access to files &#x26; the web, and let it rip. It can do things like:\u003C/p>\n\u003Cul>\n\u003Cli>look at your open browser tabs\u003C/li>\n\u003Cli>search the web\u003C/li>\n\u003Cli>visit websites\u003C/li>\n\u003Cli>generate structured data and do data-science\u003C/li>\n\u003Cli>analyze files like PDFs, images, and videos\u003C/li>\n\u003Cli>generate images\u003C/li>\n\u003Cli>create documents\u003C/li>\n\u003Cli>plus all of the usual things a well-prompted state-of-the-art LLM can do.\u003C/li>\n\u003C/ul>\n\u003Cp>Bench has come so far that it can write a blog post like this one. In fact, everything in this post except the introduction was \u003Ca href=\"https://bench.io/share/21NJLhvH5N5dYzZqBti4gN\">sourced and written by Bench in a few minutes\u003C/a>. Bench can even serve as a publishing platform, here’s a \u003Ca href=\"https://bench.io/share/artifact/5Rs3CrNg4Wfkqk4kyfX0sN\">published page\u003C/a> of the raw content of this post.\u003C/p>\n\u003Cp>To write this post, Bench looked at my open tabs on my iPad, wrote a draft post, I gave feedback, it visited the links to get better summaries, then it generated an image with \u003Ca href=\"https://preview.reve.art/\">Reve\u003C/a>.\u003C/p>\n\u003Cp>Bench is currently in private preview. You can sign up with \u003Ca href=\"https://bench.io/invite/4a6nd6\">this link\u003C/a>.\u003C/p>\n\u003Cp>Now to my months-long backlog of open tabs.\u003C/p>\n\u003Ch2 id=\"front-end\">Front End\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://garrettdimon.com/journal/posts/fine-tuning-text-inputs\">Fine-tuning Text Inputs\u003C/a> · Garrett Dimon’s exploration of HTML form attributes is the kind of deep dive I live for. Adding attributes like \u003Ccode>spellcheck\u003C/code>, \u003Ccode>autofocus\u003C/code>, and \u003Ccode>autocapitalize\u003C/code> can dramatically improve form UX without a single line of JavaScript. It’s a reminder that sometimes the browser already has what you need€”you just have to know where to look.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://leanrada.com/notes/css-only-lqip/\">Minimal CSS-only blurry image placeholders\u003C/a> · This technique for creating blurry image placeholders using only CSS is genuinely clever. By encoding a simplified version of an image into a single integer and then decoding it with bit manipulation in CSS, the author creates a lightweight placeholder that loads instantly. The bit-packing approach feels like the kind of elegant hack that makes the web special.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://thehtml.review/about\">the html review\u003C/a> · An annual online journal of literature made specifically for the web. In an era where everything is a React app wrapped in a NextJS wrapper inside a Vercel deployment, it’s refreshing to see people celebrating the foundational technology of the web. I’ve bookmarked this to revisit when I need inspiration.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"databases--code\">Databases &#x26; Code\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://www.cs.cmu.edu/~pavlo/blog/2023/04/the-part-of-postgresql-we-hate-the-most.html\">The Part of PostgreSQL We Hate the Most\u003C/a> · Andy Pavlo doesn’t hold back in this critique of PostgreSQL’s MVCC implementation. The way Postgres copies entire rows for updates rather than using delta records (like Oracle and MySQL) leads to massive bloat and performance issues. Having battled the autovacuum daemon myself, this piece resonated deeply. Sometimes the tools we love have fundamental flaws we just learn to work around.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://blog.gitbutler.com/how-git-core-devs-configure-git/\">How Core Git Developers Configure Git\u003C/a> · Peeking at the Git configs of Git’s own developers is like getting cooking tips from professional chefs. The nine settings they consider essential€”like \u003Ccode>merge.conflictstyle = zdiff3\u003C/code> and \u003Ccode>diff.algorithm = histogram\u003C/code>€”have already made their way into my \u003Ccode>.gitconfig\u003C/code>. The fact that even Git’s creators need to tweak the defaults speaks volumes about software design tradeoffs.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://www.makingsoftware.com/\">MAKING SOFTWARE\u003C/a> · A refreshingly honest reference manual about how everyday software works. It’s not a tutorial or guide but rather an exploration of the inner workings of technology we use daily. The illustrations are delightful, and the approach of explaining complex concepts visually makes this accessible even to non-technical readers. I wish more technical content had this level of clarity.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://kvark.github.io/web/gpu/native/2020/05/03/point-of-webgpu-native.html\">Point of WebGPU on native\u003C/a> · An older but still relevant piece on WebGPU’s potential beyond browsers. The vision of a unified graphics API that works across platforms is compelling, especially as the boundaries between web and native continue to blur. I’ve been experimenting with some visualization work lately, and the promise of “write once, run anywhere” for graphics code is tantalizing.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech-history\">Tech History\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.righto.com/2025/03/mother-of-all-demos-usb-keyset-interface.html\">A USB interface to the “Mother of All Demos” keyset\u003C/a> · Ken Shirriff continues to be a computing archaeology hero. This modern implementation of Engelbart’s chord keyset from his legendary 1968 demo makes me want to build one myself. The fact that someone is keeping this 57-year-old innovation alive in 2025 is both wonderful and slightly mad. I love these projects that connect us to computing’s rich history.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"ai--future-thinking\">AI &#x26; Future Thinking\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://darioamodei.com/machines-of-loving-grace\">Dario Amodei – Machines of Loving Grace\u003C/a> · Anthropic’s CEO offers a thoughtful perspective on AI’s potential upside that avoids both doomerism and blind techno-optimism. His vision of AI transforming fields like biology, neuroscience, and economic development is compelling, though I remain cautiously skeptical about how this plays out in practice. The essay’s title nod to Richard Brautigan’s poem sets just the right tone.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://wellnesswisdom.substack.com/p/reclaiming-the-utopian-vision\">reclaiming the utopian vision - by Patricia Mou\u003C/a> · Patricia’s exploration of utopian thinking in urban planning hit me at the right time. Her argument that we shouldn’t abandon utopian visions but rather see them as dynamic processes rather than static endpoints resonates with my own oscillation between optimism and pessimism about technology. The case studies of Auroville and Bhutan as examples of ongoing utopian experiments are particularly fascinating.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"work--life\">Work &#x26; Life\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://nav.al/the-80-hour-myth\">The 80-hour Myth\u003C/a> · Naval’s take on work hours cuts through a lot of the hustle culture nonsense. His point that nobody truly works 80 productive hours a week€”that our best work comes in “tremendous, focused bursts, surrounded by long periods of dullness and inactivity”€”matches my experience. I’ve been tracking my own deep work time and the results have been… humbling. Quality over quantity remains the hardest lesson to internalize.\u003C/li>\n\u003C/ul>",{"headings":960,"imagePaths":974,"frontmatter":975},[961,962,965,968,971],{"depth":27,"slug":423,"text":424},{"depth":27,"slug":963,"text":964},"databases--code","Databases & Code",{"depth":27,"slug":966,"text":967},"tech-history","Tech History",{"depth":27,"slug":969,"text":970},"ai--future-thinking","AI & Future Thinking",{"depth":27,"slug":972,"text":973},"work--life","Work & Life",[],{"title":947,"slug":944,"description":948,"cover":955,"heroAlt":950,"pubDate":949},"2023/lil-vector-search",{"id":976,"data":978,"body":984,"filePath":985,"assetImports":986,"digest":988,"deferredRender":989},{"title":979,"description":980,"pubDate":981,"heroAlt":982,"cover":983},"Little Vector Search","How to build a toy search engine with vector similarity search","December 17 2023","“a rabbit using a computer to do a vector search” - SDXL","__ASTRO_IMAGE_../../../assets/rabbit-doing-search-2.png","import SearchForm from \"~/components/search/SearchForm.astro\";\n\nYou might have noticed that there are now some search boxes on the site. They're powered by a toy vector search that I built. I like to call it _vibe based search_.\n\nHere's one:\n\n\u003CSearchForm placeholder=\"Try a search term like 'css' or 'running'\" />\n\nIf you tried it out and came back, welcome back.\n\nIf you didn’t try it, it’s pretty standard: enter a term like [“css”](/search?q=css) or [“web components”](/search?q=web%20components) or [“running”](/search?q=running) and it will show you some relevant posts. Pretty neat!\n\n## How it works\n\nThe caveman version goes like this:\n\n> put numbers in file and search go brr\n\nThe short, non-caveman version goes like this:\n\n1. Encode the content as [embeddings](https://huggingface.co/blog/getting-started-with-embeddings) at build time.\n2. Encode incoming the search query. \n3. Use math to find the embeddings closest to the search query.\n\nThat’s it. Step 3 returns a list of content from Step 1. An API endpoint then returns the frontmatter for the top 6 results and I use that to render a list of results.\n\nGoing a level deeper, there are 3 main problems to solve to make this work:\n\n- Encoding - create the embeddings correctly\n- Retrieval - do math to find the right embeddings\n- Web glue - render search results\n\n## Encoding\n\nI’m using OpenAI’s API to generate a vector for each blog post and wiki entry. A script runs at build time to retrieve and store all of the embeddings into JSON files, one for blog posts and one for wiki entries.\n\nThe script itself is not very interesting.\n\n- globs files to embed\n- find previous embeddings, if any exist\n- iterates through the files\n\t- extract frontmatter\n\t- check if a previous embedding exists and if needs to be updated\n\t- call OpenAI to create an embeddings using `text-embedding-ada-002`\n- write the embeddings to a JSON file\n\nAt runtime, an embedding is generated for incoming search queries and are cached in the runtime.\n\n## Retrieval\n\n[Cosine similarity](https://en.m.wikipedia.org/wiki/Cosine_similarity) is used to rank the embeddings. Given the paltry size of my data and the speed of modern programming languages, this can be done with brute force.\n\n\u003Cdetails>\n\u003Csummary>vector-search.ts\u003C/summary>\n\n```typescript\nexport type Vector = number[];\n\nexport type Embedding = {\n  slug: string;\n  embedding: Vector;\n};\n\nexport type Score = {\n  embedding: Embedding;\n  score: number;\n};\n\nexport function cosineSimilarity(a: Vector, b: Vector): number {\n  const dotProduct = a.reduce((acc, val, i) => acc + val * b[i], 0);\n  const magnitudeA = Math.sqrt(a.reduce((acc, val) => acc + val * val, 0));\n  const magnitudeB = Math.sqrt(b.reduce((acc, val) => acc + val * val, 0));\n\n  return dotProduct / (magnitudeA * magnitudeB);\n}\n\nexport function findSimilarEmbeddings(query: Vector, embeddings: Embedding[], topK: number): Score[] {\n  const scores: Score[] = embeddings.map((embedding) => ({\n    embedding,\n    score: cosineSimilarity(query, embedding.embedding),\n  }));\n\n  scores.sort((a, b) => b.score - a.score);\n\n  return scores.slice(0, topK);\n}\n```\n\nh/t to the new [mistral-medium model](https://docs.mistral.ai/) for helping author this code. \n\u003C/details>\n\n## Web glue\n\nMy website uses [Astro](https://astro.build/) and is deployed to Cloudflare Pages.\n\nThe first step was to write an API endpoint. This provided good scaffolding while writing the retrieval code.\n\nStep two was to make a page with the search form that can render results. In the server portion of this page, I call the API endpoint, passing along the query string parameters from the page. This seems to be what [Astro recommends](https://docs.astro.build/en/guides/data-fetching/#fetch-in-astro) for data fetching.\n\nThere is no JavaScript on the search page and it is not required to perform a search. After many years using React for everything, it is refreshing to use a framework that supports a JavaScript-free experience out of the box.\n\nSearches are simple GET requests and can be linked directly, e.g.: [marathon](/search?q=marathon).\n\nI considered moving the retrieval code directly into the page, since the API endpoint is otherwise unused.\n\n## Caveats\n\nThis is definitely a toy! It will always return results and they will not always be accurate!\n\nBut then again, (and here’s the fun of cherry-picking my examples) some results _just work_.\n\nOne way to see past the shortcomings are to consider this as _vibe based_ search. Some of the posts have good vibes, so they return often.\n\nFull text search would likely be better overall, but would _not_ be vibe based so I’m not interested.\n\n## Areas for Improvement\n\n- Cache search query embeddings somewhere durable.\n\t- Searches are cached in memory in the Cloudflare worker, which has a short and unpredictable lifespan.\n\t- These could be stored in one of Cloudflare’s database products. It’s small data but costs money to generate, so durable search embeddings would prevent repeatedly paying to encode the same search terms.\n\t- Cloudflare even has [a dedicated product for this](https://developers.cloudflare.com/vectorize/get-started/embeddings/) called Vectorize. Fancy!\n- Increase granularity of embeddings\n\t- I’m only generating a single embedding for each piece of content.\n\t- This is not ideal, but offered passable results and good performance. I experimented with adding text chunking, but the search felt worse and the JSON payload was much bigger.\n\n\n## Conclusion\n\nSearch has long been a default expectation on the web but perilously out of reach for many websites.\n\nFull text search frameworks like Elastic and OpenSearch offer a better out of the box experience than previous generations of search tech, but they do pose a steep learning curve and discrete infrastructure.\n\nThird-party providers like Algolia have long been a common solution, offering robust managed services and well-designed client integrations. Once your data is indexed correctly, it’s mostly hands-off.\n\nI set out to try adding vector search for my content to see where it netted out. I think the results are pretty good, given how dumb and blunt the technique feels: “put numbers in file and search go brrrr.”\n\nI’m excited to see where this goes and it's fun to see how practical a small machine learning task can be.","src/content/writing/2023/little-vector-search.mdx",[987],"../../../assets/rabbit-doing-search-2.png","d7cf3781caf7df0c",true,"2023/lil-web-components",{"id":990,"data":992,"body":998,"filePath":999,"assetImports":1000,"digest":1002,"rendered":1003},{"title":993,"description":994,"pubDate":995,"heroAlt":996,"cover":997},"Little Web Components","How I use little Web Components (Custom Elements) to improve my website","December 4 2023","Little Web Components are serious business","__ASTRO_IMAGE_../../../assets/dalle-cat-making-web-components.png","For as long as I can remember, I had assumed Web Components (Custom Elements) were in the \"still baking\" phase of the standards lifecyle. Not yet ready for consumption unless you wanted a more hazardous life as a web developer.\n\nThat's no longer true: Web Components are ready to use.*\n\nDave Rupert recently [shared a post](https://daverupert.com/2023/10/fitvids-has-a-web-component-now/) about his `\u003Cfit-vids>` component that caught my attention. For the first time, Web Components seemed simple and approachable. I didn't have to re-write my entire website to use them! I decided to follow his example of giving Custom Elements a try the next time I need a little DOM thing.\n\nAs of today, I have three little components:\n\n* `\u003Cshare-button>` wraps a standard `\u003Cbutton>` to trigger the [Web Share API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API) if available, otherwise copying the link to the clipboard.\n* `\u003Creply-link>` uses the Shadow DOM to keep my email address out of crawlers.\n* `\u003Ccode-block>` adds a little \"copy to clipboard\" button to every preformatted code element\n\n\\*_More or less._ If you want a full framework, look at something like [Enhance](https://enhance.dev/). My examples are not by any means comprehensive.\n\n## ShareButton\n\nThis is a case where I normally would have written a few lines of vanilla JS and called it a day. With Web Components I can write a few lines of vanilla JS and call it a day, but this time with newer tools.\n\nThe component launches a share sheet using the [Web Share API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API) when available, otherwise it copies the current link to the clipboard (and changes the button text to indicate what just happened).\n\nThe user experience doesn't seem that much different. But after years of using UI components in other contexts, I prefer the custom element:\n\nCustom Element:\n```html\n\u003Cshare-button\n    data-title=\"Little Web Components\"\n    data-link=\"/writing/2023/lil-web-components\">\n  \u003Cbutton>Share\u003C/button>\n\u003C/share-button>\n```\n\nCSS Selector:\n```html\n\u003Cbutton class=\"share-button\"\n    data-title=\"Little Web Components\"\n    data-link=\"/writing/2023/lil-web-components\">\n  Share\n\u003C/button>\n```\n\nI like the Custom Element because it clearly delineates between presentation and function. `\u003Cbutton>` is a visual element. `\u003Cshare-button>` is a functional element.\n\n\u003Cdetails>\n\u003Csummary>Here's the source for \u003Ccode>&lt;share-button>\u003C/code>:\u003C/summary>\n\n```ts\nclass ShareButton extends HTMLElement {\n  constructor() {\n    super();\n\n    const { title, link, description } = this.dataset;\n    if (!link) return;\n\n    const $button = this.querySelector(\"button\");\n    if (!$button) return;\n\n    $button.addEventListener(\"click\", () => {\n      if (\"share\" in navigator) {\n        share()\n      } else if (\"clipboard\" in navigator) {\n        copyToClipboard()\n      }\n    });\n\n    function share() {\n      // call navigator.share()\n    }\n\n    function copyToClipboard() {\n      // call navigator.clipboard.writeText()\n      // swap the button text\n    }\n  }\n}\n\ncustomElements.define(\"share-button\", ShareButton);\n```\n\u003C/details>\n\n## ReplyLink\n\nThis one seems a little silly and is definitely an afterthought. Instead of dumping a plain old anchor tag with a `mailto:` URL scheme, I've wrapped that into a custom element. Similar to ShareButton, I pass in a `title` and `link` and the component formats the URL scheme to open an email with a subject and a body.\n\nBefore / without JavaScript, the link is inert. Maybe you're not a fan, but I'm fine with this. There's a little extra work to go through in order to get the link styled correctly, but that's the cost of [using the Shadow DOM](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM).\n\n\n```html\n\u003Creply-link\n    data-title=\"Little Web Components\"\n    data-link=\"/writing/2023/lil-web-components\">\n  → Reply\n\u003C/reply-link>\n```\n\nYou can see this and ShareButton in action at the bottom of this page.\n\n\u003Cdetails>\n\u003Csummary>Source\u003C/summary>\n\n```js\nclass ReplyLink extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    const { title, link } = this.dataset;\n    if (!link) return;\n\n    const shadow = this.attachShadow({ mode: \"closed\" });\n    const subject = encodeURIComponent(`Re: ${title}`);\n    const body = encodeURIComponent(`\\n\\nLink to: ${link}\\n`)\n\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      a {\n        color: var(--text-dim);\n        text-decoration: none;\n      }\n      a:hover {\n        text-decoration: underline;\n        text-underline-offset: 2px;\n      }\n    `;\n\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"href\", `mailto:test@example.com?subject=${subject}&body=${body}`);\n    a.innerHTML = \"→ Reply\";\n\n    shadow.append(style, a)\n  }\n}\n\ncustomElements.define(\"reply-link\", ReplyLink);\n```\n\u003C/details>\n\n\n## CodeBlock\n\n`\u003Ccode-block>` adds a \"Copy to Clipboard\" button to code blocks. Code highlighting is already done by Astro. An earlier version of this component handled syntax highlighting, but it is only suitable for client-generated text.\n\nI'm using the \"Light DOM\" pattern again here. The component simply wraps its children and adds functionality.\n\n```html\n\u003Ccode-block>\n  \u003Cpre>\n    \u003Ccode>\n      console.log(\"Wow, look at that copy button up there 👆\")\n    \u003C/code>\n  \u003C/pre>\n\u003C/code-block>\n```\n\n\u003Cdetails>\n\u003Csummary>Source\u003C/summary>\n\n```js\nclass CodeEmbed extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    const button = document.createElement(\"button\");\n    button.innerHTML = `\u003Csvg viewBox=\"0 0 20 20\" width=\"16\" height=\"16\">\n      \u003Cuse href=\"/icon-sprite.svg#icon-copy\">\u003C/use>\n    \u003C/svg>`;\n\n    button.addEventListener(\"click\", () => {\n      navigator.clipboard.writeText(this.querySelector(\"pre\")?.textContent ?? \"\");\n      const span = document.createElement(\"span\");\n      span.innerHTML = \"Copied!\";\n      button.prepend(span);\n      setTimeout(() => {\n        span.remove();\n      }, 1000);\n    });\n\n    this.append(button);\n  }\n}\n\ncustomElements.define(\"code-block\", CodeEmbed);\n```\n\u003C/details>\n\nAnd here's the plugin that adds it to code blocks automatically:\n\n\u003Cdetails>\n\u003Csummary>Rehype Plugin\u003C/summary>\n\n```ts\nfunction rehypeCodeWrapperPlugin() {\n  return function transformer(tree) {\n    visit(tree, 'raw', (node) => {\n      if (node.value.startsWith('\u003Cpre')) {\n        const rawContent = node.value;\n        node.value = `\u003Ccode-block>${rawContent}\u003C/code-block>`;\n      }\n    });\n    return tree;\n  };\n}\n```","src/content/writing/2023/little-web-components.md",[1001],"../../../assets/dalle-cat-making-web-components.png","b77ba987ed89e029",{"html":1004,"metadata":1005},"\u003Cp>For as long as I can remember, I had assumed Web Components (Custom Elements) were in the “still baking” phase of the standards lifecyle. Not yet ready for consumption unless you wanted a more hazardous life as a web developer.\u003C/p>\n\u003Cp>That’s no longer true: Web Components are ready to use.*\u003C/p>\n\u003Cp>Dave Rupert recently \u003Ca href=\"https://daverupert.com/2023/10/fitvids-has-a-web-component-now/\">shared a post\u003C/a> about his \u003Ccode>&#x3C;fit-vids>\u003C/code> component that caught my attention. For the first time, Web Components seemed simple and approachable. I didn’t have to re-write my entire website to use them! I decided to follow his example of giving Custom Elements a try the next time I need a little DOM thing.\u003C/p>\n\u003Cp>As of today, I have three little components:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>&#x3C;share-button>\u003C/code> wraps a standard \u003Ccode>&#x3C;button>\u003C/code> to trigger the \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API\">Web Share API\u003C/a> if available, otherwise copying the link to the clipboard.\u003C/li>\n\u003Cli>\u003Ccode>&#x3C;reply-link>\u003C/code> uses the Shadow DOM to keep my email address out of crawlers.\u003C/li>\n\u003Cli>\u003Ccode>&#x3C;code-block>\u003C/code> adds a little “copy to clipboard” button to every preformatted code element\u003C/li>\n\u003C/ul>\n\u003Cp>*\u003Cem>More or less.\u003C/em> If you want a full framework, look at something like \u003Ca href=\"https://enhance.dev/\">Enhance\u003C/a>. My examples are not by any means comprehensive.\u003C/p>\n\u003Ch2 id=\"sharebutton\">ShareButton\u003C/h2>\n\u003Cp>This is a case where I normally would have written a few lines of vanilla JS and called it a day. With Web Components I can write a few lines of vanilla JS and call it a day, but this time with newer tools.\u003C/p>\n\u003Cp>The component launches a share sheet using the \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API\">Web Share API\u003C/a> when available, otherwise it copies the current link to the clipboard (and changes the button text to indicate what just happened).\u003C/p>\n\u003Cp>The user experience doesn’t seem that much different. But after years of using UI components in other contexts, I prefer the custom element:\u003C/p>\n\u003Cp>Custom Element:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">share-button\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">    data-title\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"Little Web Components\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">    data-link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"/writing/2023/lil-web-components\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>Share&#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">share-button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>CSS Selector:\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">button\u003C/span>\u003Cspan style=\"color:#D19A66\"> class\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"share-button\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">    data-title\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"Little Web Components\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">    data-link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"/writing/2023/lil-web-components\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  Share\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>I like the Custom Element because it clearly delineates between presentation and function. \u003Ccode>&#x3C;button>\u003C/code> is a visual element. \u003Ccode>&#x3C;share-button>\u003C/code> is a functional element.\u003C/p>\n\u003Cdetails>\n\u003Csummary>Here's the source for \u003Ccode>&#x3C;share-button>\u003C/code>:\u003C/summary>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">class\u003C/span>\u003Cspan style=\"color:#E5C07B\"> ShareButton\u003C/span>\u003Cspan style=\"color:#C678DD\"> extends\u003C/span>\u003Cspan style=\"color:#E5C07B\"> HTMLElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">  constructor\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B;font-style:italic\">    super\u003C/span>\u003Cspan style=\"color:#ABB2BF\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> { \u003C/span>\u003Cspan style=\"color:#E5C07B\">title\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E5C07B\">link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E5C07B\">description\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> } \u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#E5C07B\"> this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">dataset\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#56B6C2\">!\u003C/span>\u003Cspan style=\"color:#E06C75\">link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) \u003C/span>\u003Cspan style=\"color:#C678DD\">return\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> $button\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">querySelector\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"button\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#56B6C2\">!\u003C/span>\u003Cspan style=\"color:#E06C75\">$button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) \u003C/span>\u003Cspan style=\"color:#C678DD\">return\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    $button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">addEventListener\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"click\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, () \u003C/span>\u003Cspan style=\"color:#C678DD\">=>\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">      if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#98C379\">\"share\"\u003C/span>\u003Cspan style=\"color:#C678DD\"> in\u003C/span>\u003Cspan style=\"color:#E06C75\"> navigator\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">        share\u003C/span>\u003Cspan style=\"color:#ABB2BF\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">      } \u003C/span>\u003Cspan style=\"color:#C678DD\">else\u003C/span>\u003Cspan style=\"color:#C678DD\"> if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#98C379\">\"clipboard\"\u003C/span>\u003Cspan style=\"color:#C678DD\"> in\u003C/span>\u003Cspan style=\"color:#E06C75\"> navigator\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">        copyToClipboard\u003C/span>\u003Cspan style=\"color:#ABB2BF\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    function\u003C/span>\u003Cspan style=\"color:#61AFEF\"> share\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\">      // call navigator.share()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    function\u003C/span>\u003Cspan style=\"color:#61AFEF\"> copyToClipboard\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\">      // call navigator.clipboard.writeText()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\">      // swap the button text\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">customElements\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">define\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"share-button\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">ShareButton\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Ch2 id=\"replylink\">ReplyLink\u003C/h2>\n\u003Cp>This one seems a little silly and is definitely an afterthought. Instead of dumping a plain old anchor tag with a \u003Ccode>mailto:\u003C/code> URL scheme, I’ve wrapped that into a custom element. Similar to ShareButton, I pass in a \u003Ccode>title\u003C/code> and \u003Ccode>link\u003C/code> and the component formats the URL scheme to open an email with a subject and a body.\u003C/p>\n\u003Cp>Before / without JavaScript, the link is inert. Maybe you’re not a fan, but I’m fine with this. There’s a little extra work to go through in order to get the link styled correctly, but that’s the cost of \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM\">using the Shadow DOM\u003C/a>.\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">reply-link\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">    data-title\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"Little Web Components\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">    data-link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"/writing/2023/lil-web-components\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  → Reply\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">reply-link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>You can see this and ShareButton in action at the bottom of this page.\u003C/p>\n\u003Cdetails>\n\u003Csummary>Source\u003C/summary>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">class\u003C/span>\u003Cspan style=\"color:#E5C07B\"> ReplyLink\u003C/span>\u003Cspan style=\"color:#C678DD\"> extends\u003C/span>\u003Cspan style=\"color:#E5C07B\"> HTMLElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">  constructor\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B;font-style:italic\">    super\u003C/span>\u003Cspan style=\"color:#ABB2BF\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">  connectedCallback\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> { \u003C/span>\u003Cspan style=\"color:#E5C07B\">title\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E5C07B\">link\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> } \u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#E5C07B\"> this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">dataset\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#56B6C2\">!\u003C/span>\u003Cspan style=\"color:#E06C75\">link\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) \u003C/span>\u003Cspan style=\"color:#C678DD\">return\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> shadow\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">attachShadow\u003C/span>\u003Cspan style=\"color:#ABB2BF\">({ \u003C/span>\u003Cspan style=\"color:#E06C75\">mode\u003C/span>\u003Cspan style=\"color:#ABB2BF\">: \u003C/span>\u003Cspan style=\"color:#98C379\">\"closed\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> subject\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#61AFEF\"> encodeURIComponent\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">`Re: \u003C/span>\u003Cspan style=\"color:#C678DD\">${\u003C/span>\u003Cspan style=\"color:#E06C75\">title\u003C/span>\u003Cspan style=\"color:#C678DD\">}\u003C/span>\u003Cspan style=\"color:#98C379\">`\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> body\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#61AFEF\"> encodeURIComponent\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">`\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\n\\n\u003C/span>\u003Cspan style=\"color:#98C379\">Link to: \u003C/span>\u003Cspan style=\"color:#C678DD\">${\u003C/span>\u003Cspan style=\"color:#E06C75\">link\u003C/span>\u003Cspan style=\"color:#C678DD\">}\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\n\u003C/span>\u003Cspan style=\"color:#98C379\">`\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> style\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> document\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">createElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"style\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    style\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">textContent\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#98C379\"> `\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      a {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">        color: var(--text-dim);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">        text-decoration: none;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      a:hover {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">        text-decoration: underline;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">        text-underline-offset: 2px;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">    `\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> a\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> document\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">createElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"a\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    a\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">setAttribute\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"href\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#98C379\">`mailto:test@example.com?subject=\u003C/span>\u003Cspan style=\"color:#C678DD\">${\u003C/span>\u003Cspan style=\"color:#E06C75\">subject\u003C/span>\u003Cspan style=\"color:#C678DD\">}\u003C/span>\u003Cspan style=\"color:#98C379\">&#x26;body=\u003C/span>\u003Cspan style=\"color:#C678DD\">${\u003C/span>\u003Cspan style=\"color:#E06C75\">body\u003C/span>\u003Cspan style=\"color:#C678DD\">}\u003C/span>\u003Cspan style=\"color:#98C379\">`\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    a\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">innerHTML\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#98C379\"> \"→ Reply\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    shadow\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">append\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">style\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">a\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">customElements\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">define\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"reply-link\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">ReplyLink\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Ch2 id=\"codeblock\">CodeBlock\u003C/h2>\n\u003Cp>\u003Ccode>&#x3C;code-block>\u003C/code> adds a “Copy to Clipboard” button to code blocks. Code highlighting is already done by Astro. An earlier version of this component handled syntax highlighting, but it is only suitable for client-generated text.\u003C/p>\n\u003Cp>I’m using the “Light DOM” pattern again here. The component simply wraps its children and adds functionality.\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">code-block\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">pre\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#E06C75\">code\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">      console.log(\"Wow, look at that copy button up there 👆\")\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">code\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">pre\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#E06C75\">code-block\u003C/span>\u003Cspan style=\"color:#ABB2BF\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cdetails>\n\u003Csummary>Source\u003C/summary>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">class\u003C/span>\u003Cspan style=\"color:#E5C07B\"> CodeEmbed\u003C/span>\u003Cspan style=\"color:#C678DD\"> extends\u003C/span>\u003Cspan style=\"color:#E5C07B\"> HTMLElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">  constructor\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B;font-style:italic\">    super\u003C/span>\u003Cspan style=\"color:#ABB2BF\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">  connectedCallback\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> button\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> document\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">createElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"button\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">innerHTML\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#98C379\"> `&#x3C;svg viewBox=\"0 0 20 20\" width=\"16\" height=\"16\">\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">      &#x3C;use href=\"/icon-sprite.svg#icon-copy\">&#x3C;/use>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">    &#x3C;/svg>`\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">addEventListener\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"click\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, () \u003C/span>\u003Cspan style=\"color:#C678DD\">=>\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">      navigator\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">clipboard\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">writeText\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E5C07B\">this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">querySelector\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"pre\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)?.\u003C/span>\u003Cspan style=\"color:#E06C75\">textContent\u003C/span>\u003Cspan style=\"color:#56B6C2\"> ??\u003C/span>\u003Cspan style=\"color:#98C379\"> \"\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">      const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> span\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> document\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">createElement\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"span\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">      span\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">innerHTML\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#98C379\"> \"Copied!\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">      button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">prepend\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">span\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">      setTimeout\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(() \u003C/span>\u003Cspan style=\"color:#C678DD\">=>\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">        span\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">remove\u003C/span>\u003Cspan style=\"color:#ABB2BF\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">      }, \u003C/span>\u003Cspan style=\"color:#D19A66\">1000\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">    this\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">append\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">button\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">customElements\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">define\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">\"code-block\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#E06C75\">CodeEmbed\u003C/span>\u003Cspan style=\"color:#ABB2BF\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/details>\n\u003Cp>And here’s the plugin that adds it to code blocks automatically:\u003C/p>\n\u003Cdetails>\n\u003Csummary>Rehype Plugin\u003C/summary>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">function\u003C/span>\u003Cspan style=\"color:#61AFEF\"> rehypeCodeWrapperPlugin\u003C/span>\u003Cspan style=\"color:#ABB2BF\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">  return\u003C/span>\u003Cspan style=\"color:#C678DD\"> function\u003C/span>\u003Cspan style=\"color:#61AFEF\"> transformer\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">tree\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">    visit\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#E06C75\">tree\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, \u003C/span>\u003Cspan style=\"color:#98C379\">'raw'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">, (\u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">node\u003C/span>\u003Cspan style=\"color:#ABB2BF\">) \u003C/span>\u003Cspan style=\"color:#C678DD\">=>\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">      if\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (\u003C/span>\u003Cspan style=\"color:#E5C07B\">node\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E5C07B\">value\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#61AFEF\">startsWith\u003C/span>\u003Cspan style=\"color:#ABB2BF\">(\u003C/span>\u003Cspan style=\"color:#98C379\">'&#x3C;pre'\u003C/span>\u003Cspan style=\"color:#ABB2BF\">)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">        const\u003C/span>\u003Cspan style=\"color:#E5C07B\"> rawContent\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#E5C07B\"> node\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">value\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">        node\u003C/span>\u003Cspan style=\"color:#ABB2BF\">.\u003C/span>\u003Cspan style=\"color:#E06C75\">value\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#98C379\"> `&#x3C;code-block>\u003C/span>\u003Cspan style=\"color:#C678DD\">${\u003C/span>\u003Cspan style=\"color:#E06C75\">rawContent\u003C/span>\u003Cspan style=\"color:#C678DD\">}\u003C/span>\u003Cspan style=\"color:#98C379\">&#x3C;/code-block>`\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">    return\u003C/span>\u003Cspan style=\"color:#E06C75\"> tree\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\u003C/details>",{"headings":1006,"imagePaths":1016,"frontmatter":1017},[1007,1010,1013],{"depth":27,"slug":1008,"text":1009},"sharebutton","ShareButton",{"depth":27,"slug":1011,"text":1012},"replylink","ReplyLink",{"depth":27,"slug":1014,"text":1015},"codeblock","CodeBlock",[],{"title":993,"slug":990,"description":994,"cover":1001,"heroAlt":996,"pubDate":995},"wiki",["Map",1020,1021,1046,1047,1065,1066,1100,1101,1138,1139,1158,1159,1178,1179,1196,1197,1214,1215,1241,1242,1259,1260,1277,1278,1295,1296,1315,1316,1333,1334,1363,1364,1381,1382,1424,1425,1451,1452,1469,1470,1511,1512,1553,1554,1580,1581,1610,1611],"computers/notetaking",{"id":1020,"data":1022,"body":1029,"filePath":1030,"digest":1031,"rendered":1032},{"title":1023,"description":1024,"createdAt":1025,"categories":1026,"type":1028},"Note Taking","My habits and practices for taking good notes",["Date","2023-11-25T00:00:00.000Z"],[1027],"Computers","note","I started keeping comprehensive digital notes in late 2020.\n\nPreviously, I had kept limited digital notes because of concerns over work confidentiality: I was almost exclusively using a corporate-issued laptop, attended in-person meetings for the majority of most days, and taking all of my notes with pen and paper in spiral bound notebooks. \n\nI took seriously the dictum to not use any 3rd party syncing software, though I never handed over the notebooks. Looking back over the notes now yields very little actual information, instead mostly half checked todo lists, phrases from meetings, and little geometric drawings. At that job I used Google Docs heavily, and what wasn't in there was in documentation repos. I kept personal notes on my phone in iA Writer going back to 2016.\n\nIn the early 2010s I cycled through many different tools: Wunderlist, Evernote, paper notebooks, email, and project management software like Sprintly and Pivotal tracker.\n\n## Strategies\n\nI am not a zettlekasten zealot, but I do have a \"system.\" \n\n- Make a digital note for every day.\n\t- Move day notes into Year / Month folder every week or so.\n\t- Don't be shy about going back to update and edit notes. \n- Use lists for everything.\n\t- Blocks of text are daunting, even if they're well written.\n\t- Lists, on the other hand, decompose ideas for you with their structure.\n\t- They can't do everything, but they're good enough for plotting most thoughts.\n- Work notes should always be linked under a common topic.\n\t- This delineates work from not-work. I use the same notebook for both work and personal notes, so nesting everything under a work tag makes it easy for me to divert to non-work as needed, as well as keeping a definite record of my day-to-day work activities. \n- Tag topics and long running projects.\n\t- Move sections of day notes into topic pages with bi-directional linking.\n\n## Tools\n\nI've been using [Obsidian](https://obsidian.md/) since 2021 and it's been exactly what I had been looking for in a note taking app. Namely:\n\n- Apps for Mac, iOS, and Windows\n- Wiki-style linking\n- Automatic day notes\n\nBefore that I used [Roam Research](https://roamresearch.com/). I give credit to Roam for introducing me to the concept of a daily note.","src/content/wiki/computers/notetaking.md","021b4138e9449c89",{"html":1033,"metadata":1034},"\u003Cp>I started keeping comprehensive digital notes in late 2020.\u003C/p>\n\u003Cp>Previously, I had kept limited digital notes because of concerns over work confidentiality: I was almost exclusively using a corporate-issued laptop, attended in-person meetings for the majority of most days, and taking all of my notes with pen and paper in spiral bound notebooks.\u003C/p>\n\u003Cp>I took seriously the dictum to not use any 3rd party syncing software, though I never handed over the notebooks. Looking back over the notes now yields very little actual information, instead mostly half checked todo lists, phrases from meetings, and little geometric drawings. At that job I used Google Docs heavily, and what wasn’t in there was in documentation repos. I kept personal notes on my phone in iA Writer going back to 2016.\u003C/p>\n\u003Cp>In the early 2010s I cycled through many different tools: Wunderlist, Evernote, paper notebooks, email, and project management software like Sprintly and Pivotal tracker.\u003C/p>\n\u003Ch2 id=\"strategies\">Strategies\u003C/h2>\n\u003Cp>I am not a zettlekasten zealot, but I do have a “system.”\u003C/p>\n\u003Cul>\n\u003Cli>Make a digital note for every day.\n\u003Cul>\n\u003Cli>Move day notes into Year / Month folder every week or so.\u003C/li>\n\u003Cli>Don’t be shy about going back to update and edit notes.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Use lists for everything.\n\u003Cul>\n\u003Cli>Blocks of text are daunting, even if they’re well written.\u003C/li>\n\u003Cli>Lists, on the other hand, decompose ideas for you with their structure.\u003C/li>\n\u003Cli>They can’t do everything, but they’re good enough for plotting most thoughts.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Work notes should always be linked under a common topic.\n\u003Cul>\n\u003Cli>This delineates work from not-work. I use the same notebook for both work and personal notes, so nesting everything under a work tag makes it easy for me to divert to non-work as needed, as well as keeping a definite record of my day-to-day work activities.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Tag topics and long running projects.\n\u003Cul>\n\u003Cli>Move sections of day notes into topic pages with bi-directional linking.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tools\">Tools\u003C/h2>\n\u003Cp>I’ve been using \u003Ca href=\"https://obsidian.md/\">Obsidian\u003C/a> since 2021 and it’s been exactly what I had been looking for in a note taking app. Namely:\u003C/p>\n\u003Cul>\n\u003Cli>Apps for Mac, iOS, and Windows\u003C/li>\n\u003Cli>Wiki-style linking\u003C/li>\n\u003Cli>Automatic day notes\u003C/li>\n\u003C/ul>\n\u003Cp>Before that I used \u003Ca href=\"https://roamresearch.com/\">Roam Research\u003C/a>. I give credit to Roam for introducing me to the concept of a daily note.\u003C/p>",{"headings":1035,"imagePaths":1042,"frontmatter":1043},[1036,1039],{"depth":27,"slug":1037,"text":1038},"strategies","Strategies",{"depth":27,"slug":1040,"text":1041},"tools","Tools",[],{"title":1023,"description":1024,"createdAt":1044,"categories":1045,"type":1028},["Date","2023-11-25T00:00:00.000Z"],[1027],"computers/the-way-the-thing-works",{"id":1046,"data":1048,"body":1054,"filePath":1055,"digest":1056,"rendered":1057},{"title":1049,"description":1050,"createdAt":1051,"categories":1052,"type":1053},"Design is how it works","from Steve Jobs",["Date","2024-07-24T00:00:00.000Z"],[1027],"quote","> Most people make the mistake of thinking design is what it looks like. People think it's this veneer — that the designers are handed this box and told, 'Make it look good!' That's not what we think design is. It's not just what it looks like and feels like. Design is how it works.\n\nI'm writing this down because I need to remember it. Design is not how something looks or the colors or the typography. It is the entirety of the product, the materials it's made of, the experience of using it in total.","src/content/wiki/computers/the-way-the-thing-works.md","e1fe86cbeaeb76d2",{"html":1058,"metadata":1059},"\u003Cblockquote>\n\u003Cp>Most people make the mistake of thinking design is what it looks like. People think it’s this veneer — that the designers are handed this box and told, ‘Make it look good!’ That’s not what we think design is. It’s not just what it looks like and feels like. Design is how it works.\u003C/p>\n\u003C/blockquote>\n\u003Cp>I’m writing this down because I need to remember it. Design is not how something looks or the colors or the typography. It is the entirety of the product, the materials it’s made of, the experience of using it in total.\u003C/p>",{"headings":1060,"imagePaths":1061,"frontmatter":1062},[],[],{"title":1049,"description":1050,"createdAt":1063,"categories":1064,"type":1053},["Date","2024-07-24T00:00:00.000Z"],[1027],"computers/what-i-use",{"id":1065,"data":1067,"body":1074,"filePath":1075,"digest":1076,"rendered":1077},{"title":1068,"description":1069,"createdAt":1070,"updatedAt":1071,"categories":1072,"type":1073},"What I Use","Rig rundown",["Date","2023-07-23T00:00:00.000Z"],["Date","2023-12-02T00:00:00.000Z"],[1027],"list","## Video\n- Canon Rebel SL3, 18-55mm f1.4-5.6\n\t- There are many digital cameras, but this one it mine. I originally chose it because of its on-board USB output which means you can skip the capture card and get a clean feed directly from the camera. \n\t- Pretty cool, right? The only catch is that the video is limited to 576p30, which you don't notice until you take a still photo and view it at 2k or 4k resolution. Then you ask, hey this is a digital camera with a big sensor that captures enormously large raw photos, why so smol? Turns out it's usb 2.0(!) and therefore limited on how much data it can transfer.\n\t- With the limitations of USB 2.0 established, we can move on to what the camera is connected to. \n- Elgato 4K Capture card\n\t- This is plugged into the mini HDMI port on the camera and into a USB 3.0 hub, and onto the computer. Elgato makes great stuff, this is the second capture device I've used of theirs and they've both worked flawlessly in both windows and mac. I'm sure linux is it's own special hell with these things, but you get what you're paying for.\n- *dedicated* USB 3.0 hub - This is really important. The capture card transfers a lot of data and is picky about what it can be chained through.\n\t- In a previous iteration of my setup I had a monitor with an integrated usb 3.0 hub, which I learned didn't have enough bandwidth for 1080p60. So I shopped around until I found a hub that had enough bandwidth and an ethernet port.\n\t- This hub goes directly to my macbook pro for exactly two things: camera signal and ethernet. Because I only need 1080p60, the addition of gigabit ethernet doesn't cut into the bandwidth needed to do video.\n\t- However, wired ethernet makes for more consistent call quality! An absolute must-have if you take lots of calls and want to have good video and audio.  \n\t- I've since introduced a TS4 hub to run 144hz video out from the macbook, which also has an ethernet port. I had been using that until it had a day of intermittently dropping video signals, bad enough to where I unplugged it. It was running hot so I left it unplugged for the weekend. It was fine when I set it back up the following Monday, but I intentionally did not run ethernet through it, figuring that it wouldn't hurt if it were in fact a thermal throttling issue impacting the video signal. It's been fine ever since so I've left it be!\n\t- Bonus, the USB hub has its own power adapter and can power the camera rig through the phantom battery.\n- Elgato key light\n- Yeti Blue Mic + Yeti Mic Arm\n\t- I've seen lots of criticism of this mic but I've only ever received compliments about its sound quality. I don't podcast or post videos to social media, so I cannot judge it for those uses. But in the land of work-related video calls, it's an excellent option\n\n## Audio\n- kbear in-ear monitors\n\t- I find that I only use these if I need to be on calls for more than an hour at a time, otherwise I use Airpods.\n- Airpods Pro 2\n\t- The previous version were not good enough to be my daily driver, but the second (non USB-C) generation was a signifcant enough improvement to use for most of my calls day to day. I only need to remember to enable Focus mode to keep stray phone calls from interrupting me.\n- KRK Rokit 6 powered studio monitors\n- KRK 8\" subwoofer\n- Traktor mixer + audio interface\n\n## Desk\n- 2\" walnut butcher block top, 35\" x 60\"\n- Uplift standing desk frame\n- Desk riser holding many USB hubs\n- Reading stand / laptop holder\n\n## Displays\n- LG OLED 45\" ultrawide\n- LG 32\" 2k, vertically oriented\n\n## Computers\n- Work machine: 14\" M2 Ultra Macbook Pro. Had the opportunity to upgrade, took it.\n- Gaming PC: AMD 5950x, 32gb ram, Nvidia 4090, 8tb ssd storage\n- Server PC: Intel i7-6700K, 16gb ram, 12tb RAID disk storage\n\t- This is a Ship of Theseus pc build that's been running in some form since 2009. The motherboard, main SSD, and Ubuntu install date back to 2016, the spinning metal is from 2018, and the processor was bought used on ebay in 2019. There's also an optical drive for backing up dvd's and blurays.\n\t- I am also stubbornly letting this thing run until it doesn't. It lives to store files, get backed up, and do some light video encoding for plex.\n- Backup NAT: Synology 18tb disk storage\n\n\n[Desk photos from years past](https://hellsite.sambreed.dev/sambreed/status/1300590149382807552/)","src/content/wiki/computers/what-I-use.md","716f9b97a9f1c2e7",{"html":1078,"metadata":1079},"\u003Ch2 id=\"video\">Video\u003C/h2>\n\u003Cul>\n\u003Cli>Canon Rebel SL3, 18-55mm f1.4-5.6\n\u003Cul>\n\u003Cli>There are many digital cameras, but this one it mine. I originally chose it because of its on-board USB output which means you can skip the capture card and get a clean feed directly from the camera.\u003C/li>\n\u003Cli>Pretty cool, right? The only catch is that the video is limited to 576p30, which you don’t notice until you take a still photo and view it at 2k or 4k resolution. Then you ask, hey this is a digital camera with a big sensor that captures enormously large raw photos, why so smol? Turns out it’s usb 2.0(!) and therefore limited on how much data it can transfer.\u003C/li>\n\u003Cli>With the limitations of USB 2.0 established, we can move on to what the camera is connected to.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Elgato 4K Capture card\n\u003Cul>\n\u003Cli>This is plugged into the mini HDMI port on the camera and into a USB 3.0 hub, and onto the computer. Elgato makes great stuff, this is the second capture device I’ve used of theirs and they’ve both worked flawlessly in both windows and mac. I’m sure linux is it’s own special hell with these things, but you get what you’re paying for.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cem>dedicated\u003C/em> USB 3.0 hub - This is really important. The capture card transfers a lot of data and is picky about what it can be chained through.\n\u003Cul>\n\u003Cli>In a previous iteration of my setup I had a monitor with an integrated usb 3.0 hub, which I learned didn’t have enough bandwidth for 1080p60. So I shopped around until I found a hub that had enough bandwidth and an ethernet port.\u003C/li>\n\u003Cli>This hub goes directly to my macbook pro for exactly two things: camera signal and ethernet. Because I only need 1080p60, the addition of gigabit ethernet doesn’t cut into the bandwidth needed to do video.\u003C/li>\n\u003Cli>However, wired ethernet makes for more consistent call quality! An absolute must-have if you take lots of calls and want to have good video and audio.\u003C/li>\n\u003Cli>I’ve since introduced a TS4 hub to run 144hz video out from the macbook, which also has an ethernet port. I had been using that until it had a day of intermittently dropping video signals, bad enough to where I unplugged it. It was running hot so I left it unplugged for the weekend. It was fine when I set it back up the following Monday, but I intentionally did not run ethernet through it, figuring that it wouldn’t hurt if it were in fact a thermal throttling issue impacting the video signal. It’s been fine ever since so I’ve left it be!\u003C/li>\n\u003Cli>Bonus, the USB hub has its own power adapter and can power the camera rig through the phantom battery.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Elgato key light\u003C/li>\n\u003Cli>Yeti Blue Mic + Yeti Mic Arm\n\u003Cul>\n\u003Cli>I’ve seen lots of criticism of this mic but I’ve only ever received compliments about its sound quality. I don’t podcast or post videos to social media, so I cannot judge it for those uses. But in the land of work-related video calls, it’s an excellent option\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"audio\">Audio\u003C/h2>\n\u003Cul>\n\u003Cli>kbear in-ear monitors\n\u003Cul>\n\u003Cli>I find that I only use these if I need to be on calls for more than an hour at a time, otherwise I use Airpods.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Airpods Pro 2\n\u003Cul>\n\u003Cli>The previous version were not good enough to be my daily driver, but the second (non USB-C) generation was a signifcant enough improvement to use for most of my calls day to day. I only need to remember to enable Focus mode to keep stray phone calls from interrupting me.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>KRK Rokit 6 powered studio monitors\u003C/li>\n\u003Cli>KRK 8” subwoofer\u003C/li>\n\u003Cli>Traktor mixer + audio interface\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"desk\">Desk\u003C/h2>\n\u003Cul>\n\u003Cli>2” walnut butcher block top, 35” x 60”\u003C/li>\n\u003Cli>Uplift standing desk frame\u003C/li>\n\u003Cli>Desk riser holding many USB hubs\u003C/li>\n\u003Cli>Reading stand / laptop holder\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"displays\">Displays\u003C/h2>\n\u003Cul>\n\u003Cli>LG OLED 45” ultrawide\u003C/li>\n\u003Cli>LG 32” 2k, vertically oriented\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"computers\">Computers\u003C/h2>\n\u003Cul>\n\u003Cli>Work machine: 14” M2 Ultra Macbook Pro. Had the opportunity to upgrade, took it.\u003C/li>\n\u003Cli>Gaming PC: AMD 5950x, 32gb ram, Nvidia 4090, 8tb ssd storage\u003C/li>\n\u003Cli>Server PC: Intel i7-6700K, 16gb ram, 12tb RAID disk storage\n\u003Cul>\n\u003Cli>This is a Ship of Theseus pc build that’s been running in some form since 2009. The motherboard, main SSD, and Ubuntu install date back to 2016, the spinning metal is from 2018, and the processor was bought used on ebay in 2019. There’s also an optical drive for backing up dvd’s and blurays.\u003C/li>\n\u003Cli>I am also stubbornly letting this thing run until it doesn’t. It lives to store files, get backed up, and do some light video encoding for plex.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Backup NAT: Synology 18tb disk storage\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Ca href=\"https://hellsite.sambreed.dev/sambreed/status/1300590149382807552/\">Desk photos from years past\u003C/a>\u003C/p>",{"headings":1080,"imagePaths":1095,"frontmatter":1096},[1081,1084,1087,1090,1093],{"depth":27,"slug":1082,"text":1083},"video","Video",{"depth":27,"slug":1085,"text":1086},"audio","Audio",{"depth":27,"slug":1088,"text":1089},"desk","Desk",{"depth":27,"slug":1091,"text":1092},"displays","Displays",{"depth":27,"slug":1094,"text":1027},"computers",[],{"title":1068,"description":1069,"createdAt":1097,"updatedAt":1098,"categories":1099,"type":1073},["Date","2023-07-23T00:00:00.000Z"],["Date","2023-12-02T00:00:00.000Z"],[1027],"computers/web-development/building-this-wiki",{"id":1100,"data":1102,"body":1109,"filePath":1110,"digest":1111,"rendered":1112},{"title":1103,"description":1104,"createdAt":1105,"updatedAt":1106,"categories":1107,"type":1028},"Building this Wiki","The map is not the territory",["Date","2023-07-18T00:00:00.000Z"],["Date","2023-12-17T00:00:00.000Z"],[1027,1108],"Web Development","Three things were on my mind of late:\n1. I don't ever seem to have the patience or wherewithal to write an entire blog post.\n2. I have been getting a lot of use, joy, and mileage out of my personal notebook.\n3. Knowledge graphs and text processing have been frequent themes in my work over the last few years.\n\nThen, I was inspired by:\n* [Maggie Appleton's digital Garden](https://maggieappleton.com/garden)\n\t* The idea of sharing little unfinished notes without shame, and then growing them over time\n\t* [Work with the garage door up](https://notes.andymatuschak.org/zCMhncA1iSE74MKKYQS5PBZ)\n* Blogs that are websites\n\t* [Dave Rupert](https://daverupert.com/)\n\t* [Chris Coyier](https://chriscoyier.net/)\n\t* [Will Larson](https://lethain.com/)\n\t* [Kottke](https://kottke.org/), [Doctorow](https://pluralistic.net/), et al\n\nConclusion: I'm starting a wiki, [because it's never been done before](https://www.youtube.com/watch?v=ga0ksTIagsg).\n\n## Table of Contents\n\n## 1. Failing as a blogger\nI have wanted to build a hypertext for a long time. I built my first website around 1996 on Geocities and I have been trying to make [places made of language](../places-made-of-language) ever since.\n\nI blogged for about 6 months in [2008 and 2009](https://samuelbreed.blogspot.com/). From 2011-15, my website was just [animations and ascii art](https://web.archive.org/web/20120122225802/http://wookiehangover.com/). Sometimes [there were even links](https://web.archive.org/web/20150628070525/http://wookiehangover.com/). Since [around 2017](https://web.archive.org/web/20170710224200/https://wookiehangover.com/) I've had a version of this website running, with the occasional blog post here and there.\n\nIn the past year, I got inspired to [dump](/writing/links-part-one.html) [my](/writing/links-august-2022.html) [tab](/writing/links-december-2022) [debt](/writing/links-january-2023) (almost) every month. This practice serves two purposes: active, chronological bookmarking; and an opportunity to gather a thought or two around a link. If I want to.\n\n## 2. Note taking rules\n\nAstro 2.0 added some interesting content management features. Namely, you can keep standalone directories of markdown files that are logically addressable _but entirely separate_ from routes. Databases are cool and all, but having solid conventions for addressing flat-file content will get you a lot of mileage.\n\nEarlier versions had content and code living together, which made me lean towards editing posts in VS Code, which, well, feels more like coding than writing or taking notes. There's just something about an IDE that makes it hard for me to use it as a writing surface. Too many bells and whistles, not to mention having to switch off Co-Pilot when I'm authoring markdown.\n\nHaving a separate content directory makes it perfect for opening in a note taking app like Obsidian. This makes it easier for me to write, because I'm already using Obsidian to take notes every day.\n\nA brief history of my preferred note-taking apps, 2013-2023:\n\n- I have been using Obsidian since the beginning of the year and it's the first file-based note taking app that's caught my attention since iA Writer.\n- I used Roam Research from 2020 - 2022. The novelty of a forced daily note was extremely good for my ADHD brain, where new habits and routines can take hold only under duress. I moved away from it because I wanted concrete, syncable files on a disk instead of a mystery database + cloud sync. It was a perfectly fine program with good ideas, but wasn't for me.\n- I used iA Writer heavily from 2013-16, but had tapered off when the corporate IT policies at my last job forbade it from my daily driver.\n\n## 3. A modest personal wiki\n\nI've had the tagline \"modest personal website\" up for a year or two. It means that I want something that's simple, unfancy, and hand built. I strive to make a little website that changes when I want it to change, and that has value to one person: me.\n\nMy private notebook has become the main place where I think, document, and plan. Working asynchronously with a small, distributed team means that most of my correspondence with colleagues is in writing, and I don't like making people work hard to get the meaning. Rubber-ducking a message is \n\nIn that spirit, I would like to build and maintain a little knowledge graph in public. \n\n## 4. Build Notes\n\nI switched over the site over to [Astro](https://astro.build) after 5 good years on [Next.js](https://nextjs.org). Astro has been a project that I've been closely tracking since it's early releases. It takes a lot of the best parts of modern frameworks and seeks to tie them together with something approaching a compiler for your website.\n\nIn many ways, Astro paved a cowpath that I was already on. In 2017 I used unify, remark, and rehype to create a way in Next.js to author posts directly in markdown. This work presaged things like MDX and used the same toolchain that powers markdown compilation in Astro. I used projects in the unified ecosystem several other times, so having it baked into the framework is a bonus.\n\n### Custom Elements\n\nThere are a few Custom Elements floating around the site. I wrote about them in [Little Web Components](/writing/2023/lil-web-components). They are:\n\n* `\u003Cshare-button>` wraps a standard `\u003Cbutton>` to trigger the [Web Share API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API) if available, otherwise copying the link to the clipboard.\n* `\u003Creply-link>` uses the Shadow DOM to keep my email address out of crawlers.\n* `\u003Ccode-block>` adds a little \"copy to clipboard\" button to every preformatted code element\n\n### Search\n\nBelow the list of categories at the bottom of the page you'll see a search form. This is my [vibe-based search](/writing/2023/lil-vector-search) and will return similar posts. It's like full text search, but much worse!","src/content/wiki/computers/web-development/building-this-wiki.md","4642f410fd4440c2",{"html":1113,"metadata":1114},"\u003Cp>Three things were on my mind of late:\u003C/p>\n\u003Col>\n\u003Cli>I don’t ever seem to have the patience or wherewithal to write an entire blog post.\u003C/li>\n\u003Cli>I have been getting a lot of use, joy, and mileage out of my personal notebook.\u003C/li>\n\u003Cli>Knowledge graphs and text processing have been frequent themes in my work over the last few years.\u003C/li>\n\u003C/ol>\n\u003Cp>Then, I was inspired by:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://maggieappleton.com/garden\">Maggie Appleton’s digital Garden\u003C/a>\n\u003Cul>\n\u003Cli>The idea of sharing little unfinished notes without shame, and then growing them over time\u003C/li>\n\u003Cli>\u003Ca href=\"https://notes.andymatuschak.org/zCMhncA1iSE74MKKYQS5PBZ\">Work with the garage door up\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Blogs that are websites\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://daverupert.com/\">Dave Rupert\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://chriscoyier.net/\">Chris Coyier\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://lethain.com/\">Will Larson\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://kottke.org/\">Kottke\u003C/a>, \u003Ca href=\"https://pluralistic.net/\">Doctorow\u003C/a>, et al\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>Conclusion: I’m starting a wiki, \u003Ca href=\"https://www.youtube.com/watch?v=ga0ksTIagsg\">because it’s never been done before\u003C/a>.\u003C/p>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#1-failing-as-a-blogger\">1. Failing as a blogger\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#2-note-taking-rules\">2. Note taking rules\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#3-a-modest-personal-wiki\">3. A modest personal wiki\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#4-build-notes\">4. Build Notes\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#custom-elements\">Custom Elements\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#search\">Search\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"1-failing-as-a-blogger\">1. Failing as a blogger\u003C/h2>\n\u003Cp>I have wanted to build a hypertext for a long time. I built my first website around 1996 on Geocities and I have been trying to make \u003Ca href=\"../places-made-of-language\">places made of language\u003C/a> ever since.\u003C/p>\n\u003Cp>I blogged for about 6 months in \u003Ca href=\"https://samuelbreed.blogspot.com/\">2008 and 2009\u003C/a>. From 2011-15, my website was just \u003Ca href=\"https://web.archive.org/web/20120122225802/http://wookiehangover.com/\">animations and ascii art\u003C/a>. Sometimes \u003Ca href=\"https://web.archive.org/web/20150628070525/http://wookiehangover.com/\">there were even links\u003C/a>. Since \u003Ca href=\"https://web.archive.org/web/20170710224200/https://wookiehangover.com/\">around 2017\u003C/a> I’ve had a version of this website running, with the occasional blog post here and there.\u003C/p>\n\u003Cp>In the past year, I got inspired to \u003Ca href=\"/writing/links-part-one.html\">dump\u003C/a> \u003Ca href=\"/writing/links-august-2022.html\">my\u003C/a> \u003Ca href=\"/writing/links-december-2022\">tab\u003C/a> \u003Ca href=\"/writing/links-january-2023\">debt\u003C/a> (almost) every month. This practice serves two purposes: active, chronological bookmarking; and an opportunity to gather a thought or two around a link. If I want to.\u003C/p>\n\u003Ch2 id=\"2-note-taking-rules\">2. Note taking rules\u003C/h2>\n\u003Cp>Astro 2.0 added some interesting content management features. Namely, you can keep standalone directories of markdown files that are logically addressable \u003Cem>but entirely separate\u003C/em> from routes. Databases are cool and all, but having solid conventions for addressing flat-file content will get you a lot of mileage.\u003C/p>\n\u003Cp>Earlier versions had content and code living together, which made me lean towards editing posts in VS Code, which, well, feels more like coding than writing or taking notes. There’s just something about an IDE that makes it hard for me to use it as a writing surface. Too many bells and whistles, not to mention having to switch off Co-Pilot when I’m authoring markdown.\u003C/p>\n\u003Cp>Having a separate content directory makes it perfect for opening in a note taking app like Obsidian. This makes it easier for me to write, because I’m already using Obsidian to take notes every day.\u003C/p>\n\u003Cp>A brief history of my preferred note-taking apps, 2013-2023:\u003C/p>\n\u003Cul>\n\u003Cli>I have been using Obsidian since the beginning of the year and it’s the first file-based note taking app that’s caught my attention since iA Writer.\u003C/li>\n\u003Cli>I used Roam Research from 2020 - 2022. The novelty of a forced daily note was extremely good for my ADHD brain, where new habits and routines can take hold only under duress. I moved away from it because I wanted concrete, syncable files on a disk instead of a mystery database + cloud sync. It was a perfectly fine program with good ideas, but wasn’t for me.\u003C/li>\n\u003Cli>I used iA Writer heavily from 2013-16, but had tapered off when the corporate IT policies at my last job forbade it from my daily driver.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"3-a-modest-personal-wiki\">3. A modest personal wiki\u003C/h2>\n\u003Cp>I’ve had the tagline “modest personal website” up for a year or two. It means that I want something that’s simple, unfancy, and hand built. I strive to make a little website that changes when I want it to change, and that has value to one person: me.\u003C/p>\n\u003Cp>My private notebook has become the main place where I think, document, and plan. Working asynchronously with a small, distributed team means that most of my correspondence with colleagues is in writing, and I don’t like making people work hard to get the meaning. Rubber-ducking a message is\u003C/p>\n\u003Cp>In that spirit, I would like to build and maintain a little knowledge graph in public.\u003C/p>\n\u003Ch2 id=\"4-build-notes\">4. Build Notes\u003C/h2>\n\u003Cp>I switched over the site over to \u003Ca href=\"https://astro.build\">Astro\u003C/a> after 5 good years on \u003Ca href=\"https://nextjs.org\">Next.js\u003C/a>. Astro has been a project that I’ve been closely tracking since it’s early releases. It takes a lot of the best parts of modern frameworks and seeks to tie them together with something approaching a compiler for your website.\u003C/p>\n\u003Cp>In many ways, Astro paved a cowpath that I was already on. In 2017 I used unify, remark, and rehype to create a way in Next.js to author posts directly in markdown. This work presaged things like MDX and used the same toolchain that powers markdown compilation in Astro. I used projects in the unified ecosystem several other times, so having it baked into the framework is a bonus.\u003C/p>\n\u003Ch3 id=\"custom-elements\">Custom Elements\u003C/h3>\n\u003Cp>There are a few Custom Elements floating around the site. I wrote about them in \u003Ca href=\"/writing/2023/lil-web-components\">Little Web Components\u003C/a>. They are:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>&#x3C;share-button>\u003C/code> wraps a standard \u003Ccode>&#x3C;button>\u003C/code> to trigger the \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API\">Web Share API\u003C/a> if available, otherwise copying the link to the clipboard.\u003C/li>\n\u003Cli>\u003Ccode>&#x3C;reply-link>\u003C/code> uses the Shadow DOM to keep my email address out of crawlers.\u003C/li>\n\u003Cli>\u003Ccode>&#x3C;code-block>\u003C/code> adds a little “copy to clipboard” button to every preformatted code element\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"search\">Search\u003C/h3>\n\u003Cp>Below the list of categories at the bottom of the page you’ll see a search form. This is my \u003Ca href=\"/writing/2023/lil-vector-search\">vibe-based search\u003C/a> and will return similar posts. It’s like full text search, but much worse!\u003C/p>",{"headings":1115,"imagePaths":1133,"frontmatter":1134},[1116,1117,1120,1123,1126,1129,1132],{"depth":27,"slug":779,"text":780},{"depth":27,"slug":1118,"text":1119},"1-failing-as-a-blogger","1. Failing as a blogger",{"depth":27,"slug":1121,"text":1122},"2-note-taking-rules","2. Note taking rules",{"depth":27,"slug":1124,"text":1125},"3-a-modest-personal-wiki","3. A modest personal wiki",{"depth":27,"slug":1127,"text":1128},"4-build-notes","4. Build Notes",{"depth":79,"slug":1130,"text":1131},"custom-elements","Custom Elements",{"depth":79,"slug":845,"text":846},[],{"title":1103,"description":1104,"createdAt":1135,"updatedAt":1136,"categories":1137,"type":1028},["Date","2023-07-18T00:00:00.000Z"],["Date","2023-12-17T00:00:00.000Z"],[1027,1108],"about",{"id":1138,"data":1140,"body":1146,"filePath":1147,"digest":1148,"rendered":1149},{"title":1141,"description":1142,"createdAt":1143,"updatedAt":1144,"categories":1145,"type":1028},"About","A modest personal wiki",["Date","2023-07-20T00:00:00.000Z"],["Date","2023-11-25T00:00:00.000Z"],[],"Welcome to my person wiki. This is a place where I've started to gather notes, lists, and other writing in way that's less time-sensitive than blogging but more sharable and permanent than my [personal notebook](./computers/notetaking).\n\nIn the spirit of digital gardens, these are web pages that act as the potential seeds for ideas. Some of it mundane, some of it informational, but at least it's written down.\n\n_Key_:\n| Icon | Type | Description |\n|-|-|-|\n| \u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-note\">\u003C/svg> | Notes | Everything starts as a note. |\n| \u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-list\">\u003C/svg> | Lists | I also make a lot of lists. |\n| \u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-book\">\u003C/svg> | Books | Intention to expand this with a bit more metadata |\n| \u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-link\">\u003C/svg> | Links | Sometimes you just need a link. |\n\nSee also: [Building this wiki](./computers/web-development/building-this-wiki)","src/content/wiki/about.md","2c9e0f87afdbf7c3",{"html":1150,"metadata":1151},"\u003Cp>Welcome to my person wiki. This is a place where I’ve started to gather notes, lists, and other writing in way that’s less time-sensitive than blogging but more sharable and permanent than my \u003Ca href=\"./computers/notetaking\">personal notebook\u003C/a>.\u003C/p>\n\u003Cp>In the spirit of digital gardens, these are web pages that act as the potential seeds for ideas. Some of it mundane, some of it informational, but at least it’s written down.\u003C/p>\n\u003Cp>\u003Cem>Key\u003C/em>:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Icon\u003C/th>\u003Cth>Type\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>\u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-note\">\u003C/use>\u003C/svg>\u003C/td>\u003Ctd>Notes\u003C/td>\u003Ctd>Everything starts as a note.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-list\">\u003C/use>\u003C/svg>\u003C/td>\u003Ctd>Lists\u003C/td>\u003Ctd>I also make a lot of lists.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-book\">\u003C/use>\u003C/svg>\u003C/td>\u003Ctd>Books\u003C/td>\u003Ctd>Intention to expand this with a bit more metadata\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Csvg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\u003Cuse href=\"/icon-sprite.svg#icon-link\">\u003C/use>\u003C/svg>\u003C/td>\u003Ctd>Links\u003C/td>\u003Ctd>Sometimes you just need a link.\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>See also: \u003Ca href=\"./computers/web-development/building-this-wiki\">Building this wiki\u003C/a>\u003C/p>",{"headings":1152,"imagePaths":1153,"frontmatter":1154},[],[],{"title":1141,"description":1142,"createdAt":1155,"updatedAt":1156,"categories":1157,"type":1028},["Date","2023-07-20T00:00:00.000Z"],["Date","2023-11-25T00:00:00.000Z"],[],"library/fiction/blood-meridian",{"id":1158,"data":1160,"body":1167,"filePath":1168,"digest":1169,"rendered":1170},{"title":1161,"description":1162,"createdAt":1163,"categories":1164,"type":1166},"Blood Meridian: Or the Evening Redness in the West","Cormac McCarthy",["Date","2022-12-04T00:00:00.000Z"],[1165,265],"Library","book","Some highlights from *Blood Meridian*\n\n> If much in the world were mystery the limits of that world were not, for it was without measure or bound and there were contained within it creatures more horrible yet and men of other colors and beings which no man has looked upon and yet not alien non of it more than were their won hearts alien in them, whatever wilderness contained there and whatever beats.\n\n> The crumpled butcherpaper mountains lay in sharp shadowfold under the long blue dusk and in the middle distance the glazed bed of a dry lake lay shimmering like the mare imbrium and herds of deer were moving northing in the last of the twilight, harried over the plan by wolves who were themselves the color of the desert floor.\n\n> If God meant to interfere in the degeneracy of mankind would he not have done so by now?\n\n> Under a gibbous moon horse and rider spancled to their shadows on the snowblue ground and in each flare of lightning as the storm advanced those selfsame forms rearing with a terrible redundancy behind them like some third aspect of their presence hammered out black and wild upon the naked grounds. They rode on.\n\n>  To the west the cloudbanks stood above the mountains like the dark warp of the very firmament and the star-sprent reaches of the galaxies hung in vast aura above the riders' heads.\n\n> Above all else they appeared wholly at venture, primal, provisional, devoid of order. Like being provoked out of the absolute rock and set nameless and at no remove from their own loomings to wander ravenous and doomed and mute as gorgons shambling the brutal wastes of Gondwanaland in a time before nomenclature was and each was all.\n\n> The man who believes that the secrets of the world are forever hidden lives in mystery and fear. Superstition will drag him down. The rain will erode the deeds of his life.\n\n> Moral law is an invention of mankind for the disenfranchisement of the powerful in favor of the weak. Historical law subverts it at every turn. A moral view can never be proven right or wrong by any ultimate test.\n\n> There is no mystery to it, he said.\n> The recruits blinked dully.\n> Your heart's desire is to be told some mystery. The mystery is that there is no mystery.\n\n> I wonder if there's other worlds like this, he said. Or if this is the only one.\n\n> As the dance is the thing with which we are concerned and contains complete within itself its own arrangement and history and finale there is not necessity that the dancers contain these things within themselves as well. In any even the history of all is not the history of each nor indeed the sum of those histories and none here can finally comprehend the reason for his presence for he has no way of knowing even in what the event consists.\n\n> A solitary game, without opponent. Where only the rules are at hazard. Dont look away. We are not speaking in mysteries. You of all men are no stranger to that feeling, the emptiness and the despair. It is that which we take arms against, is it not? Is not blood the tempering agent in the mortar which bonds?\n\n---\n2022-11-27\n\n> Someone snatched the old woman's blindfold from her and she and the juggler were clouted away and when the company turned in to sleep and the low fire was roaring in the blast like a thing alive these four yet crouched at the edge of the firelight among their strange chattels and watched how the ragged flames fled down the wind as if sucked by some maelstrom out there in the void, ***some vortex in that waste apposite to which man's transit and his reckonings lay abrogate. As if beyond will or fate he and his beasts and his trappings moved both in card and in substance under consignment to some third and other destiny.***\n\nBlood Meridian, p91. emphasis added\n\n\"in that waste apposite to which man's transit and his reckonings lay abrogate\"\n\n- these four yet crouched at the edge of the firelight\n\t- among their strange chattels\n- and watched how the ragged flames fled down the wind\n\t- as if sucked by some maelstrom out there in the void,\n\t\t- some vortex in that waste\n\t\t\t- apposite to which \n\t\t\t\t- man's transit and his reckonings\n\t\t\t- lay abrogate\n\nThe fortune tellers are watching the fire at the edge of the wilderness, and the fire smoke is being sucked up into the night sky. The dark sky beyond \"out there in the void\" represents the forces of nature that take into no account a \"man's transit and his reckonings\". A contrast exists between the cruelty and harshness of the natural world and the ordered world of men, sharpened by the strange company of band of mercenaries riding through the tortured landscape.\n\n- apposite\n\t1. Appropriate or relevant.\n\t2. Very applicable; well adapted; suitable or fit; relevant; pat; -- followed by to.\n\t3.  [Appropriate](https://www.wordnik.com/words/Appropriate), [relevant](https://www.wordnik.com/words/relevant), well-suited; [fit](https://www.wordnik.com/words/fit).\n\t- Apposition is a grammatical construction in which two elements, normally noun phrases, are placed side by side so one element identifies the other in a different way. The two elements are said to be in apposition, and one of the elements is called the appositive, but its identification requires consideration of how the elements are used in a sentence.\n- abrogate, transitive verb\n\t1.  To abolish, do away with, or annul, especially by authority.\n\t2.  To annul by an authoritative act; to abolish by the authority of the maker or his successor; to repeal; -- applied to the repeal of laws, decrees, ordinances, the abolition of customs, etc.\n\t3.  To put an end to; to do away with.","src/content/wiki/library/fiction/blood-meridian.md","6569eae5e054d5ee",{"html":1171,"metadata":1172},"\u003Cp>Some highlights from \u003Cem>Blood Meridian\u003C/em>\u003C/p>\n\u003Cblockquote>\n\u003Cp>If much in the world were mystery the limits of that world were not, for it was without measure or bound and there were contained within it creatures more horrible yet and men of other colors and beings which no man has looked upon and yet not alien non of it more than were their won hearts alien in them, whatever wilderness contained there and whatever beats.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>The crumpled butcherpaper mountains lay in sharp shadowfold under the long blue dusk and in the middle distance the glazed bed of a dry lake lay shimmering like the mare imbrium and herds of deer were moving northing in the last of the twilight, harried over the plan by wolves who were themselves the color of the desert floor.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>If God meant to interfere in the degeneracy of mankind would he not have done so by now?\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>Under a gibbous moon horse and rider spancled to their shadows on the snowblue ground and in each flare of lightning as the storm advanced those selfsame forms rearing with a terrible redundancy behind them like some third aspect of their presence hammered out black and wild upon the naked grounds. They rode on.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>To the west the cloudbanks stood above the mountains like the dark warp of the very firmament and the star-sprent reaches of the galaxies hung in vast aura above the riders’ heads.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>Above all else they appeared wholly at venture, primal, provisional, devoid of order. Like being provoked out of the absolute rock and set nameless and at no remove from their own loomings to wander ravenous and doomed and mute as gorgons shambling the brutal wastes of Gondwanaland in a time before nomenclature was and each was all.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>The man who believes that the secrets of the world are forever hidden lives in mystery and fear. Superstition will drag him down. The rain will erode the deeds of his life.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>Moral law is an invention of mankind for the disenfranchisement of the powerful in favor of the weak. Historical law subverts it at every turn. A moral view can never be proven right or wrong by any ultimate test.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>There is no mystery to it, he said.\nThe recruits blinked dully.\nYour heart’s desire is to be told some mystery. The mystery is that there is no mystery.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>I wonder if there’s other worlds like this, he said. Or if this is the only one.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>As the dance is the thing with which we are concerned and contains complete within itself its own arrangement and history and finale there is not necessity that the dancers contain these things within themselves as well. In any even the history of all is not the history of each nor indeed the sum of those histories and none here can finally comprehend the reason for his presence for he has no way of knowing even in what the event consists.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>A solitary game, without opponent. Where only the rules are at hazard. Dont look away. We are not speaking in mysteries. You of all men are no stranger to that feeling, the emptiness and the despair. It is that which we take arms against, is it not? Is not blood the tempering agent in the mortar which bonds?\u003C/p>\n\u003C/blockquote>\n\u003Chr>\n\u003Cp>2022-11-27\u003C/p>\n\u003Cblockquote>\n\u003Cp>Someone snatched the old woman’s blindfold from her and she and the juggler were clouted away and when the company turned in to sleep and the low fire was roaring in the blast like a thing alive these four yet crouched at the edge of the firelight among their strange chattels and watched how the ragged flames fled down the wind as if sucked by some maelstrom out there in the void, \u003Cem>\u003Cstrong>some vortex in that waste apposite to which man’s transit and his reckonings lay abrogate. As if beyond will or fate he and his beasts and his trappings moved both in card and in substance under consignment to some third and other destiny.\u003C/strong>\u003C/em>\u003C/p>\n\u003C/blockquote>\n\u003Cp>Blood Meridian, p91. emphasis added\u003C/p>\n\u003Cp>“in that waste apposite to which man’s transit and his reckonings lay abrogate”\u003C/p>\n\u003Cul>\n\u003Cli>these four yet crouched at the edge of the firelight\n\u003Cul>\n\u003Cli>among their strange chattels\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>and watched how the ragged flames fled down the wind\n\u003Cul>\n\u003Cli>as if sucked by some maelstrom out there in the void,\n\u003Cul>\n\u003Cli>some vortex in that waste\n\u003Cul>\n\u003Cli>apposite to which\n\u003Cul>\n\u003Cli>man’s transit and his reckonings\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>lay abrogate\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>The fortune tellers are watching the fire at the edge of the wilderness, and the fire smoke is being sucked up into the night sky. The dark sky beyond “out there in the void” represents the forces of nature that take into no account a “man’s transit and his reckonings”. A contrast exists between the cruelty and harshness of the natural world and the ordered world of men, sharpened by the strange company of band of mercenaries riding through the tortured landscape.\u003C/p>\n\u003Cul>\n\u003Cli>apposite\n\u003Col>\n\u003Cli>Appropriate or relevant.\u003C/li>\n\u003Cli>Very applicable; well adapted; suitable or fit; relevant; pat; — followed by to.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.wordnik.com/words/Appropriate\">Appropriate\u003C/a>, \u003Ca href=\"https://www.wordnik.com/words/relevant\">relevant\u003C/a>, well-suited; \u003Ca href=\"https://www.wordnik.com/words/fit\">fit\u003C/a>.\u003C/li>\n\u003C/ol>\n\u003Cul>\n\u003Cli>Apposition is a grammatical construction in which two elements, normally noun phrases, are placed side by side so one element identifies the other in a different way. The two elements are said to be in apposition, and one of the elements is called the appositive, but its identification requires consideration of how the elements are used in a sentence.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>abrogate, transitive verb\n\u003Col>\n\u003Cli>To abolish, do away with, or annul, especially by authority.\u003C/li>\n\u003Cli>To annul by an authoritative act; to abolish by the authority of the maker or his successor; to repeal; — applied to the repeal of laws, decrees, ordinances, the abolition of customs, etc.\u003C/li>\n\u003Cli>To put an end to; to do away with.\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003C/ul>",{"headings":1173,"imagePaths":1174,"frontmatter":1175},[],[],{"title":1161,"description":1162,"createdAt":1176,"categories":1177,"type":1166},["Date","2022-12-04T00:00:00.000Z"],[1165,265],"computers/web-development/product-tracking",{"id":1178,"data":1180,"body":1185,"filePath":1186,"digest":1187,"rendered":1188},{"title":1181,"description":1182,"createdAt":1183,"categories":1184,"type":1028},"Product Tracking","How to figure out if a product is working",["Date","2023-07-28T00:00:00.000Z"],[1027,1108],"Recently someone asked for my advice about how to measure success in companies and how to know if a product is working.\n\nSpecifically, they asked what we did at [Credit Karma](/cv.html):\n- there were a few things working in tandem:  \n\t- tracking beacons on all CTAs that gave end-to-end tracing\n\t- multi-variant testing database (very similar to what the heavybit startup LaunchDarkly built around the same time)\n\t- big org of product managers and analysts who were judged on revenue generation\n\t- the benefit of lots of users AND very clear signals when a users engaged (plus extremely high payouts for successful conversions)\n\t- a new feature would get deployed at a low % of traffic and then held until an analyst signed off that it improved over the baseline. I forget what the target p-value was, but remember it being complicated to measure because of newness effects\n- in most early stage startups, sales feedback is where the richest data will come from\n\t- who are they losing to and why?\n\t\t- what types of customers?\n\t- measuring churn: who's dropping out, how quickly, and why?\n\t\t- basically, goal should be never let a customer churn out if it's something that can be addressed within the product (eg. stability, needs feature X that competitor has)","src/content/wiki/computers/web-development/product-tracking.md","cf620b892fbed8ba",{"html":1189,"metadata":1190},"\u003Cp>Recently someone asked for my advice about how to measure success in companies and how to know if a product is working.\u003C/p>\n\u003Cp>Specifically, they asked what we did at \u003Ca href=\"/cv.html\">Credit Karma\u003C/a>:\u003C/p>\n\u003Cul>\n\u003Cli>there were a few things working in tandem:\n\u003Cul>\n\u003Cli>tracking beacons on all CTAs that gave end-to-end tracing\u003C/li>\n\u003Cli>multi-variant testing database (very similar to what the heavybit startup LaunchDarkly built around the same time)\u003C/li>\n\u003Cli>big org of product managers and analysts who were judged on revenue generation\u003C/li>\n\u003Cli>the benefit of lots of users AND very clear signals when a users engaged (plus extremely high payouts for successful conversions)\u003C/li>\n\u003Cli>a new feature would get deployed at a low % of traffic and then held until an analyst signed off that it improved over the baseline. I forget what the target p-value was, but remember it being complicated to measure because of newness effects\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>in most early stage startups, sales feedback is where the richest data will come from\n\u003Cul>\n\u003Cli>who are they losing to and why?\n\u003Cul>\n\u003Cli>what types of customers?\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>measuring churn: who’s dropping out, how quickly, and why?\n\u003Cul>\n\u003Cli>basically, goal should be never let a customer churn out if it’s something that can be addressed within the product (eg. stability, needs feature X that competitor has)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":1191,"imagePaths":1192,"frontmatter":1193},[],[],{"title":1181,"description":1182,"createdAt":1194,"categories":1195,"type":1028},["Date","2023-07-28T00:00:00.000Z"],[1027,1108],"computers/places-made-of-language",{"id":1196,"data":1198,"body":1203,"filePath":1204,"digest":1205,"rendered":1206},{"title":1199,"description":1200,"createdAt":1201,"categories":1202,"type":1053},"Places made of language","from Jorge Arango",["Date","2023-07-21T00:00:00.000Z"],[1027],"from [Jorge Arango's blog](https://jarango.com/)\n\n> \"I often joke that my job entails designing places made of language. Most websites, apps, and other digital product UIs are primarily collections of words and phrases arranged in particular ways to allow you to do or learn specific things.\"\n\nThe _\"places made of language\"_ struck a chord with me.","src/content/wiki/computers/places-made-of-language.md","8afee87fc7cb4cb7",{"html":1207,"metadata":1208},"\u003Cp>from \u003Ca href=\"https://jarango.com/\">Jorge Arango’s blog\u003C/a>\u003C/p>\n\u003Cblockquote>\n\u003Cp>“I often joke that my job entails designing places made of language. Most websites, apps, and other digital product UIs are primarily collections of words and phrases arranged in particular ways to allow you to do or learn specific things.”\u003C/p>\n\u003C/blockquote>\n\u003Cp>The \u003Cem>“places made of language”\u003C/em> struck a chord with me.\u003C/p>",{"headings":1209,"imagePaths":1210,"frontmatter":1211},[],[],{"title":1199,"description":1200,"createdAt":1212,"categories":1213,"type":1053},["Date","2023-07-21T00:00:00.000Z"],[1027],"computers/web-development/ai-coding-ish",{"id":1214,"data":1216,"body":1222,"filePath":1223,"digest":1224,"rendered":1225},{"title":1217,"description":1218,"createdAt":1219,"updatedAt":1220,"categories":1221,"type":1028},"AI Coding-ish","Thoughts on new tools",["Date","2023-11-20T00:00:00.000Z"],["Date","2023-12-10T00:00:00.000Z"],[1027,1108],"I've been using LLMs for general coding tasks since late 2020. This is where I've started to corral together thoughts and techniques for \"doing computers\" with LLMs in the passenger seat.\n\n## LLM as Search Engines\n\nPlain language questions can be easier to write than good search queries.\n\nSometimes describing a situation is necessary to create good search terms anyway. Here's a prompt about finding empty markdown files compared with equivalent search terms. I went to ChatGPT first, then followed by searches with DuckDuckGo and Google.\n\n- Prompt: \"I have directory with many markdown files, with many subdirectories also containing markdown files. Most of the files have content, but some of them are empty. Please help me write a simple bash script for finding all the empty files. Assume I'm on a mac.\"\n- Search: \"bash find all empty files recursive\"\n\nThe results were roughly equal.\n\nThe prompt quickly wrote a bash script with a single call to `find` with appropriate arguments and detailed instructions for saving and running the file. It jogged my memory, that yes, of course this a one-liner with find that I have never bothered committing to memory. It was a bit wordy for the one-line answer that my question _really_ needed, but I was satisfied none the less.\n\nThe searches led to the same StackOverflow question, and incorporated the meat of the content directly into the results listing, effectively one-shotting the question by printing the `find` call from the answer. It doesn't tailor my answer to markdown files, so if I was missing some basics I might struggle to substitute the correct glob for my markdown files and have a bad time. So overall more of a hit than a miss but probably lacked a bit of specific context on the question.\n\nTwo notable observations:\n\n1. The LLM returns passable results for both the prompt and the search query. \n\t- In contrast, the search engine only performs well with the search query and delivers lower quality results with the prompt. I actually prefer the LLM's response from the search query, as it leaves out supplementary details about saving and running the bash script in the first prompt.\n2. The search query is a compressed expression of the problem statement in the prompt.\n\t- I probably made the prompt a bit more explicative and redundant for the sake of the model, meaning I feel like this is nakedly \"prompt language\" rather than a \"true\" expression of the problem statement, but it came out in one fluid motion and I didn't linger on any of the details.\n\n## Recipes\n\nHere are a few examples of novel / interesting workflows and I've come across and found helpful. I've included some embeds of chats using one of the tools I maintain for work.\n\n- [SQL Query help](https://bench.io/share/6LwIvGnaOJ9jDenPxNNh9u) &middot; SQL has always been something that I never seem to develop strong muscle memory for. Given the highly structured nature of SQL, it seems immune to good documentation. There are many, many reasonable queries that I can describe in plain english, but then I fail to remember the syntax to get there in the query. Usually there's a lot of trial and error to get working chunks of a query to come together. LLMs significantly tighten the feedback loop.\n- [Git Explainer](https://chat.0x01.ai/share/FEuWEKM) &middot; I know that git subcommands exist but I've never been able to keep them straight beyond the core of my daily get workflow: pull, push, checkout, commit, clone, rebase, stash, & merge are about all I have room for.\n- [Calendar Availability](https://chat.openai.com/g/g-0yja9C7Ik-calendar-availability) &middot; A custom GPT that takes a screenshot of a calendar and responds with a text block of your availability. I used to have an entire [side project](https://github.com/wookiehangover/when.works) just for doing this!\n\n## Tools\n\n- `chat` command line helper &middot; h/t to [@sampullara](https://twitter.com/sampullara) for sharing this script. If you place this in your shell path, you can ask it for help writing commands.\n  - Despite more than 2 decades as a Linux user, my muscle-memory for shell commands is paltry. I know what I know and, of course, I know how to look things up.\n  - This script skips a bunch of steps and gets right to the answer, showing you a preview of the command and the choice to run it. And the fun part is that ChatGPT also helped write the script itself!\n  - Here are a few examples of how I've called this recently:\n    - `chat show info about my cpu` \n    - `chat list size of my the current directory in gb`\n    - `chat mount the usb drive sdf1`\n    - `chat \"what git branch is this commit in? 2e90fc13...\"`\n\n```bash\n#!/bin/bash\nTOKEN=\u003Cyour open ai token goes here>\nPROMPT=\"You are the best at writing shell commands. Assume the OS is Ubuntu. I want you to respond with only the shell commands separated by semicolons and no commentary. Here is what I want to do: $@\"\nRESULT=`curl -s https://api.openai.com/v1/chat/completions \\\n  -H 'Content-Type: application/json' \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -d \"{\n  \\\"model\\\": \\\"gpt-3.5-turbo\\\",\n  \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"$PROMPT\\\"}]\n}\" | jq '.choices[] | .message.content' -r`\necho $RESULT\nread -rp \"Execute? [n]: \" input_var\ninput_var=${input_var:-n}\n[ \"$input_var\" = \"y\" ] && bash -c \"$RESULT\"\n```","src/content/wiki/computers/web-development/ai-coding-ish.md","3a91098f0485f37d",{"html":1226,"metadata":1227},"\u003Cp>I’ve been using LLMs for general coding tasks since late 2020. This is where I’ve started to corral together thoughts and techniques for “doing computers” with LLMs in the passenger seat.\u003C/p>\n\u003Ch2 id=\"llm-as-search-engines\">LLM as Search Engines\u003C/h2>\n\u003Cp>Plain language questions can be easier to write than good search queries.\u003C/p>\n\u003Cp>Sometimes describing a situation is necessary to create good search terms anyway. Here’s a prompt about finding empty markdown files compared with equivalent search terms. I went to ChatGPT first, then followed by searches with DuckDuckGo and Google.\u003C/p>\n\u003Cul>\n\u003Cli>Prompt: “I have directory with many markdown files, with many subdirectories also containing markdown files. Most of the files have content, but some of them are empty. Please help me write a simple bash script for finding all the empty files. Assume I’m on a mac.”\u003C/li>\n\u003Cli>Search: “bash find all empty files recursive”\u003C/li>\n\u003C/ul>\n\u003Cp>The results were roughly equal.\u003C/p>\n\u003Cp>The prompt quickly wrote a bash script with a single call to \u003Ccode>find\u003C/code> with appropriate arguments and detailed instructions for saving and running the file. It jogged my memory, that yes, of course this a one-liner with find that I have never bothered committing to memory. It was a bit wordy for the one-line answer that my question \u003Cem>really\u003C/em> needed, but I was satisfied none the less.\u003C/p>\n\u003Cp>The searches led to the same StackOverflow question, and incorporated the meat of the content directly into the results listing, effectively one-shotting the question by printing the \u003Ccode>find\u003C/code> call from the answer. It doesn’t tailor my answer to markdown files, so if I was missing some basics I might struggle to substitute the correct glob for my markdown files and have a bad time. So overall more of a hit than a miss but probably lacked a bit of specific context on the question.\u003C/p>\n\u003Cp>Two notable observations:\u003C/p>\n\u003Col>\n\u003Cli>The LLM returns passable results for both the prompt and the search query.\n\u003Cul>\n\u003Cli>In contrast, the search engine only performs well with the search query and delivers lower quality results with the prompt. I actually prefer the LLM’s response from the search query, as it leaves out supplementary details about saving and running the bash script in the first prompt.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>The search query is a compressed expression of the problem statement in the prompt.\n\u003Cul>\n\u003Cli>I probably made the prompt a bit more explicative and redundant for the sake of the model, meaning I feel like this is nakedly “prompt language” rather than a “true” expression of the problem statement, but it came out in one fluid motion and I didn’t linger on any of the details.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"recipes\">Recipes\u003C/h2>\n\u003Cp>Here are a few examples of novel / interesting workflows and I’ve come across and found helpful. I’ve included some embeds of chats using one of the tools I maintain for work.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://bench.io/share/6LwIvGnaOJ9jDenPxNNh9u\">SQL Query help\u003C/a> · SQL has always been something that I never seem to develop strong muscle memory for. Given the highly structured nature of SQL, it seems immune to good documentation. There are many, many reasonable queries that I can describe in plain english, but then I fail to remember the syntax to get there in the query. Usually there’s a lot of trial and error to get working chunks of a query to come together. LLMs significantly tighten the feedback loop.\u003C/li>\n\u003Cli>\u003Ca href=\"https://chat.0x01.ai/share/FEuWEKM\">Git Explainer\u003C/a> · I know that git subcommands exist but I’ve never been able to keep them straight beyond the core of my daily get workflow: pull, push, checkout, commit, clone, rebase, stash, &#x26; merge are about all I have room for.\u003C/li>\n\u003Cli>\u003Ca href=\"https://chat.openai.com/g/g-0yja9C7Ik-calendar-availability\">Calendar Availability\u003C/a> · A custom GPT that takes a screenshot of a calendar and responds with a text block of your availability. I used to have an entire \u003Ca href=\"https://github.com/wookiehangover/when.works\">side project\u003C/a> just for doing this!\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tools\">Tools\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ccode>chat\u003C/code> command line helper · h/t to \u003Ca href=\"https://twitter.com/sampullara\">@sampullara\u003C/a> for sharing this script. If you place this in your shell path, you can ask it for help writing commands.\n\u003Cul>\n\u003Cli>Despite more than 2 decades as a Linux user, my muscle-memory for shell commands is paltry. I know what I know and, of course, I know how to look things up.\u003C/li>\n\u003Cli>This script skips a bunch of steps and gets right to the answer, showing you a preview of the command and the choice to run it. And the fun part is that ChatGPT also helped write the script itself!\u003C/li>\n\u003Cli>Here are a few examples of how I’ve called this recently:\n\u003Cul>\n\u003Cli>\u003Ccode>chat show info about my cpu\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>chat list size of my the current directory in gb\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>chat mount the usb drive sdf1\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>chat \"what git branch is this commit in? 2e90fc13...\"\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\">#!/bin/bash\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">TOKEN\u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#ABB2BF\">&#x3C;\u003C/span>\u003Cspan style=\"color:#98C379\">your\u003C/span>\u003Cspan style=\"color:#61AFEF\"> open\u003C/span>\u003Cspan style=\"color:#98C379\"> ai\u003C/span>\u003Cspan style=\"color:#98C379\"> token\u003C/span>\u003Cspan style=\"color:#98C379\"> goes\u003C/span>\u003Cspan style=\"color:#98C379\"> her\u003C/span>\u003Cspan style=\"color:#ABB2BF\">e>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">PROMPT\u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#98C379\">\"You are the best at writing shell commands. Assume the OS is Ubuntu. I want you to respond with only the shell commands separated by semicolons and no commentary. Here is what I want to do: \u003C/span>\u003Cspan style=\"color:#E06C75;font-style:italic\">$@\u003C/span>\u003Cspan style=\"color:#98C379\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">RESULT\u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#98C379\">`\u003C/span>\u003Cspan style=\"color:#61AFEF\">curl\u003C/span>\u003Cspan style=\"color:#D19A66\"> -s\u003C/span>\u003Cspan style=\"color:#98C379\"> https://api.openai.com/v1/chat/completions \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">  -H\u003C/span>\u003Cspan style=\"color:#98C379\"> 'Content-Type: application/json' \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">  -H\u003C/span>\u003Cspan style=\"color:#98C379\"> \"Authorization: Bearer \u003C/span>\u003Cspan style=\"color:#E06C75\">$TOKEN\u003C/span>\u003Cspan style=\"color:#98C379\">\" \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">  -d\u003C/span>\u003Cspan style=\"color:#98C379\"> \"{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#56B6C2\">  \\\"\u003C/span>\u003Cspan style=\"color:#98C379\">model\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">: \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">gpt-3.5-turbo\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#56B6C2\">  \\\"\u003C/span>\u003Cspan style=\"color:#98C379\">messages\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">: [{\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">role\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">: \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">user\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">, \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">content\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">: \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#E06C75\">$PROMPT\u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\"\u003C/span>\u003Cspan style=\"color:#98C379\">}]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#98C379\">}\" \u003C/span>\u003Cspan style=\"color:#ABB2BF\">|\u003C/span>\u003Cspan style=\"color:#61AFEF\"> jq\u003C/span>\u003Cspan style=\"color:#98C379\"> '.choices[] | .message.content' \u003C/span>\u003Cspan style=\"color:#D19A66\">-r\u003C/span>\u003Cspan style=\"color:#98C379\">`\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#56B6C2\">echo\u003C/span>\u003Cspan style=\"color:#E06C75\"> $RESULT\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#56B6C2\">read\u003C/span>\u003Cspan style=\"color:#D19A66\"> -rp\u003C/span>\u003Cspan style=\"color:#98C379\"> \"Execute? [n]: \"\u003C/span>\u003Cspan style=\"color:#98C379\"> input_var\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">input_var\u003C/span>\u003Cspan style=\"color:#56B6C2\">=\u003C/span>\u003Cspan style=\"color:#ABB2BF\">${\u003C/span>\u003Cspan style=\"color:#E06C75\">input_var\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:-\u003C/span>\u003Cspan style=\"color:#E06C75\">n\u003C/span>\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">[ \u003C/span>\u003Cspan style=\"color:#98C379\">\"\u003C/span>\u003Cspan style=\"color:#E06C75\">$input_var\u003C/span>\u003Cspan style=\"color:#98C379\">\"\u003C/span>\u003Cspan style=\"color:#56B6C2\"> =\u003C/span>\u003Cspan style=\"color:#98C379\"> \"y\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> ] &#x26;&#x26; \u003C/span>\u003Cspan style=\"color:#61AFEF\">bash\u003C/span>\u003Cspan style=\"color:#D19A66\"> -c\u003C/span>\u003Cspan style=\"color:#98C379\"> \"\u003C/span>\u003Cspan style=\"color:#E06C75\">$RESULT\u003C/span>\u003Cspan style=\"color:#98C379\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":1228,"imagePaths":1236,"frontmatter":1237},[1229,1232,1235],{"depth":27,"slug":1230,"text":1231},"llm-as-search-engines","LLM as Search Engines",{"depth":27,"slug":1233,"text":1234},"recipes","Recipes",{"depth":27,"slug":1040,"text":1041},[],{"title":1217,"description":1218,"createdAt":1238,"updatedAt":1239,"categories":1240,"type":1028},["Date","2023-11-20T00:00:00.000Z"],["Date","2023-12-10T00:00:00.000Z"],[1027,1108],"library/fiction/dhalgren",{"id":1241,"data":1243,"body":1248,"filePath":1249,"digest":1250,"rendered":1251},{"title":1244,"description":1245,"createdAt":1246,"categories":1247,"type":1166},"Dhalgren","Samuel R. Delany",["Date","2023-07-21T00:00:00.000Z"],[1165,265],"I read [The New Yorker profile on Delany](https://www.newyorker.com/magazine/2023/07/10/samuel-r-delany-profile) and immediately bought _Dhalgren_, as it sounded like it was up my alley. I asked my brother if he had read it, which he said he had, several times, which triangulated the recommendation to me. This is a long book and doesn't have much in the way of exposition or trad narrative, so I suspect it will be on my backburner for a while.\n\nUnnamed Protagonist\n\tI haven't been around people who know me for...for a while now.\n\nUse of the verb *wink* \n\t\"The leaves winked.\"\n\t\"[...] the ashy leather , swinging as Laufer tuned, winked over a circular brass buckle [...]\"\n\nBellona reminds me of the city in the first part of Final Fantasy VII. The post-unnamed catastrophe wasteland aspects remind me of Fallout 4.\n\nLots of third person but then brief slips into first person\n\tEquipped with contradictory visions, an ugly hand caged in pretty metal, I observe a new mechanics.\n\tI do not recognize any protection in this leafy blister.\n\nMore echoes of video games\n\tTak's boot heels tattoo the way. I can envision a dotted line left after him.","src/content/wiki/library/fiction/dhalgren.md","cda9ef9f47f59a42",{"html":1252,"metadata":1253},"\u003Cp>I read \u003Ca href=\"https://www.newyorker.com/magazine/2023/07/10/samuel-r-delany-profile\">The New Yorker profile on Delany\u003C/a> and immediately bought \u003Cem>Dhalgren\u003C/em>, as it sounded like it was up my alley. I asked my brother if he had read it, which he said he had, several times, which triangulated the recommendation to me. This is a long book and doesn’t have much in the way of exposition or trad narrative, so I suspect it will be on my backburner for a while.\u003C/p>\n\u003Cp>Unnamed Protagonist\nI haven’t been around people who know me for…for a while now.\u003C/p>\n\u003Cp>Use of the verb \u003Cem>wink\u003C/em>\n“The leaves winked.”\n”[…] the ashy leather , swinging as Laufer tuned, winked over a circular brass buckle […]”\u003C/p>\n\u003Cp>Bellona reminds me of the city in the first part of Final Fantasy VII. The post-unnamed catastrophe wasteland aspects remind me of Fallout 4.\u003C/p>\n\u003Cp>Lots of third person but then brief slips into first person\nEquipped with contradictory visions, an ugly hand caged in pretty metal, I observe a new mechanics.\nI do not recognize any protection in this leafy blister.\u003C/p>\n\u003Cp>More echoes of video games\nTak’s boot heels tattoo the way. I can envision a dotted line left after him.\u003C/p>",{"headings":1254,"imagePaths":1255,"frontmatter":1256},[],[],{"title":1244,"description":1245,"createdAt":1257,"categories":1258,"type":1166},["Date","2023-07-21T00:00:00.000Z"],[1165,265],"library/fiction/desolation-road",{"id":1259,"data":1261,"body":1266,"filePath":1267,"digest":1268,"rendered":1269},{"title":1262,"description":1263,"createdAt":1264,"categories":1265,"type":1166},"Desolation Road","Ian McDonald",["Date","2023-07-25T00:00:00.000Z"],[1165,265],"Cory Doctorow recommended this on Pluralistic not too long ago. Sometimes picking up a previously unheard of sci-fi book recommended by an author you like it just necessary.","src/content/wiki/library/fiction/desolation-road.md","12a51c47aee21cfc",{"html":1270,"metadata":1271},"\u003Cp>Cory Doctorow recommended this on Pluralistic not too long ago. Sometimes picking up a previously unheard of sci-fi book recommended by an author you like it just necessary.\u003C/p>",{"headings":1272,"imagePaths":1273,"frontmatter":1274},[],[],{"title":1262,"description":1263,"createdAt":1275,"categories":1276,"type":1166},["Date","2023-07-25T00:00:00.000Z"],[1165,265],"library/non-fiction/a-pattern-language",{"id":1277,"data":1279,"body":1284,"filePath":1285,"digest":1286,"rendered":1287},{"title":1280,"description":1281,"createdAt":1282,"categories":1283,"type":1166},"A Pattern Language","Christopher Alexander",["Date","2023-07-23T00:00:00.000Z"],[1165,268],"p798, Chapter 171 _Tree Places_ on the significance of old trees in humanity:  \"Since... psychic growth cannot be brought about by a conscious effort of will power, but happens involuntarily and naturally, it is in dreams frequently symblized by the tree, whose slow, powerful involuntary growth fulfills a definite pattern.\" C.G. Jung, _Man and his symbols_","src/content/wiki/library/non-fiction/a-pattern-language.md","3854f2179655fe28",{"html":1288,"metadata":1289},"\u003Cp>p798, Chapter 171 \u003Cem>Tree Places\u003C/em> on the significance of old trees in humanity:  “Since… psychic growth cannot be brought about by a conscious effort of will power, but happens involuntarily and naturally, it is in dreams frequently symblized by the tree, whose slow, powerful involuntary growth fulfills a definite pattern.” C.G. Jung, \u003Cem>Man and his symbols\u003C/em>\u003C/p>",{"headings":1290,"imagePaths":1291,"frontmatter":1292},[],[],{"title":1280,"description":1281,"createdAt":1293,"categories":1294,"type":1166},["Date","2023-07-23T00:00:00.000Z"],[1165,268],"library/non-fiction/a-thousand-brains",{"id":1295,"data":1297,"body":1303,"filePath":1304,"digest":1305,"rendered":1306},{"title":1298,"description":1299,"createdAt":1300,"updatedAt":1301,"categories":1302,"type":1166},"A Thousand Brains","Jeff Hawkins",["Date","2023-07-20T00:00:00.000Z"],["Date","2023-07-21T00:00:00.000Z"],[1165,268],"- \"In 2016 [...] we deduced that the neocortex stores everything we know, all our knowledge, using something called reference frames. [...] A reference frame tells you where things are located relative to each other, and it can tell you how to achieve goals.\"\n\t- Compares them to grid lines on a map being used to determine distances. Reference frames are how our brain relates and contrasts concepts and organizes disparate inputs into a cohesive whole.\n\t- \"Most of the cells in your neocortex are dedicated to creating and manipulating reference frames, which the brain uses to plan and think.\"\n- \"Intelligence is the ability of a system to learn a model of the world.\" p168\n\n\"What kind of function, or algorithm, can create all aspects of human intelligence?\"\n\nCortical columns and Reference Frames. \"The theory says that cortical columns create reference frames for each observed object. Recall that a reference frame is like an invisible, three dimensional grid surrounding and attached to something. The reference frame allows a cortical column to learn the locations of features that define the shape of the object.\"\n\nThe opening notes to One-finger Snap by Herbie Hancock can play in my head on demand. I can pull the record from the stack in my office and put it on and match the song on the first try. I didn't know it was Herbie Hancock and I couldn't have told you the name of the song before I pulled the record out and dropped the needle. I have a reference frame linking the physical object, the copy of Empyrean Isles, the first jazz record I bought from Doug Gaddy at Absolute Vinyl in Boulder. It must have been 2008 or 2009. Maybe later. I can't remember the events surrounding it. Other than finding that record, and then buying every Herbie album that came through Doug's store. I know the music without knowing the notes.\n\n\"However, reference frames can also be used to organize knowledge of things we can't directly sense.\"\n\n\"Thinking is form of movement\"","src/content/wiki/library/non-fiction/a-thousand-brains.md","3826be8ac8b9fbc6",{"html":1307,"metadata":1308},"\u003Cul>\n\u003Cli>“In 2016 […] we deduced that the neocortex stores everything we know, all our knowledge, using something called reference frames. […] A reference frame tells you where things are located relative to each other, and it can tell you how to achieve goals.”\n\u003Cul>\n\u003Cli>Compares them to grid lines on a map being used to determine distances. Reference frames are how our brain relates and contrasts concepts and organizes disparate inputs into a cohesive whole.\u003C/li>\n\u003Cli>“Most of the cells in your neocortex are dedicated to creating and manipulating reference frames, which the brain uses to plan and think.”\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>“Intelligence is the ability of a system to learn a model of the world.” p168\u003C/li>\n\u003C/ul>\n\u003Cp>“What kind of function, or algorithm, can create all aspects of human intelligence?”\u003C/p>\n\u003Cp>Cortical columns and Reference Frames. “The theory says that cortical columns create reference frames for each observed object. Recall that a reference frame is like an invisible, three dimensional grid surrounding and attached to something. The reference frame allows a cortical column to learn the locations of features that define the shape of the object.”\u003C/p>\n\u003Cp>The opening notes to One-finger Snap by Herbie Hancock can play in my head on demand. I can pull the record from the stack in my office and put it on and match the song on the first try. I didn’t know it was Herbie Hancock and I couldn’t have told you the name of the song before I pulled the record out and dropped the needle. I have a reference frame linking the physical object, the copy of Empyrean Isles, the first jazz record I bought from Doug Gaddy at Absolute Vinyl in Boulder. It must have been 2008 or 2009. Maybe later. I can’t remember the events surrounding it. Other than finding that record, and then buying every Herbie album that came through Doug’s store. I know the music without knowing the notes.\u003C/p>\n\u003Cp>“However, reference frames can also be used to organize knowledge of things we can’t directly sense.”\u003C/p>\n\u003Cp>“Thinking is form of movement”\u003C/p>",{"headings":1309,"imagePaths":1310,"frontmatter":1311},[],[],{"title":1298,"description":1299,"createdAt":1312,"updatedAt":1313,"categories":1314,"type":1166},["Date","2023-07-20T00:00:00.000Z"],["Date","2023-07-21T00:00:00.000Z"],[1165,268],"library/non-fiction/the-creative-act",{"id":1315,"data":1317,"body":1322,"filePath":1323,"digest":1324,"rendered":1325},{"title":1318,"description":1319,"createdAt":1320,"categories":1321,"type":1166},"The Creative Act","Rick Rubin",["Date","2023-11-17T00:00:00.000Z"],[1165,268],"> Practicing a way of being that allows you to see the world through uncorrupted, innocent eyes can free you to act in concert with the universe’s timetable.\n\n> The act of creation is an attempt to enter a mysterious realm.\n\n> The things we believe carry a charge regardless of whether they can be proven or not.\n\n> If you start from the position that there is no right or wrong, no good or bad, and creativity is just free play with no rules, it’s easier to submerge yourself joyfully in the process of making things.\n\n> Formulating an opinion is not listening. Neither is preparing a response, or defending our position or attacking another’s. To listen impatiently is to hear nothing at all.\n\n> Whether we know it or not, we're a conduit for the universe. \n\n- what are the rules in the systems that I work in?\n\t- it takes a profound amount of work to make easy things appear easy\n\t- all applications have state. some of it gets shared between users. if there's no state, it's a brochure.\n\t- all applications are made up of layers of abstraction.\n\t- UI is almost always typographic\n\t- Good Design tells a story. It conveys a message of what the user is meant to do.\n\t- 2D composition has heavy dimensionality.\n\nWhich leads to the question:\n\n- what can't I build today given the current technology?","src/content/wiki/library/non-fiction/the-creative-act.md","e7c228d79bbc981e",{"html":1326,"metadata":1327},"\u003Cblockquote>\n\u003Cp>Practicing a way of being that allows you to see the world through uncorrupted, innocent eyes can free you to act in concert with the universe’s timetable.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>The act of creation is an attempt to enter a mysterious realm.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>The things we believe carry a charge regardless of whether they can be proven or not.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>If you start from the position that there is no right or wrong, no good or bad, and creativity is just free play with no rules, it’s easier to submerge yourself joyfully in the process of making things.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>Formulating an opinion is not listening. Neither is preparing a response, or defending our position or attacking another’s. To listen impatiently is to hear nothing at all.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>Whether we know it or not, we’re a conduit for the universe.\u003C/p>\n\u003C/blockquote>\n\u003Cul>\n\u003Cli>what are the rules in the systems that I work in?\n\u003Cul>\n\u003Cli>it takes a profound amount of work to make easy things appear easy\u003C/li>\n\u003Cli>all applications have state. some of it gets shared between users. if there’s no state, it’s a brochure.\u003C/li>\n\u003Cli>all applications are made up of layers of abstraction.\u003C/li>\n\u003Cli>UI is almost always typographic\u003C/li>\n\u003Cli>Good Design tells a story. It conveys a message of what the user is meant to do.\u003C/li>\n\u003Cli>2D composition has heavy dimensionality.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>Which leads to the question:\u003C/p>\n\u003Cul>\n\u003Cli>what can’t I build today given the current technology?\u003C/li>\n\u003C/ul>",{"headings":1328,"imagePaths":1329,"frontmatter":1330},[],[],{"title":1318,"description":1319,"createdAt":1331,"categories":1332,"type":1166},["Date","2023-11-17T00:00:00.000Z"],[1165,268],"sports/trail-running/gear",{"id":1333,"data":1335,"body":1343,"filePath":1344,"digest":1345,"rendered":1346},{"title":1336,"description":1337,"createdAt":1338,"updatedAt":1339,"categories":1340,"type":1028},"Trail Running Gear","All of my gear",["Date","2023-07-18T00:00:00.000Z"],["Date","2024-07-25T00:00:00.000Z"],[1341,1342],"Sports","Trail Running","## Kits\n\n[Satisfy](https://satisfyrunning.com/) - I was a sucker for instagram ads and bought what seemed like a too-expensive t-shirt from them. Then I got hooked. Their cotton hits a combination of soft-light-durable that's very impressive. For a while after college I worked in the backstock of an American Apparel where I dealt with unholy volumes of cotton t-shirts, so I consider myself [somewhat of an expert].\n\n[Tracksmith](https://www.tracksmith.com/) - Everything I have from Tracksmith is fantastic.\n\n[Ciele Athletics](https://cieleathletics.com/) - As best I can tell, Ciele makes hats that are indestructible. I have only purchased more than one hat from them to try different styles. The original hat I bought 4 years ago still looks bright and unworn, and I've run hundreds and hundreds of miles in it, and running it through a washing machine cycle every time. They are unkillable.\n\n## Shoes\n\n_Active_\n\n- New Balance Fresh Foam 1080v13 - This is my main shoe. I vow to put at least 500 miles on every pair before retirement.\n- New Balance SuperComp Trainer - This is my _other_ main shoe. It's speedier and springy-er than the 1080 and features a carbon plate. Most importantly, this is a supershoe that comes in wide sizes. My next marathon will be in a pair of these.\n- Hoka One One Speed Goat - This is my go-to trail running shoe. I'm on my 4th pair already. I dabbled around with other wide-sized trail shoes but this is the one that's given me the most comfortable miles.\n\n_Retired_\n\n- SuperComp Elite - I really wanted to try a super shoe, but they don't come in wide sizes. I took a gamble and lost. I could go fast in them but the upper was just too uncomfortable, so I didn't do the marathon in them.\n-  GS Tam - I really wanted to like these, but they weren't wide enough for me in my size. Another sad shoe-gamble!\n\n## Tech\n\n_Active_\n\n- Garmin Eduro 2. I finally switched to a real runner's watch, and I was right in my assumption that I didn't know what I was missing. Apple Watch looks like it has all the right features but it misses on a couple of key points: variety of workout interfaces and interactions, navigation, distance/elevation accuracy, and battery life.\n- [Powerbeats Pro](https://www.apple.com/shop/product/MY582LL/A/powerbeats-pro-totally-wireless-earbuds-black). More battery life than I have endurance. Sweatproof. Physical buttons, no touching or tapping.\n- Strava\n\n_Retired_\n\n- Apple Ultra Watch. Over time I'm less and less convinced that this is a \"great\" option for running. But I don't have a basis for comparison, so it is my winner by default.\n- Training Peaks. I consulted with them back in the early 2010s. The software is ok, but over time the design wore me down. Strava has less data but is more pleasing to look at.\n- [Watchletic](https://www.watchletic.com/) lets me use custom run plans from Training Peaks but still record using Apple HealthKit\n\n## Misc\n\nBandanas. Cheap, versatile. It keeps you warm in the wind. Get it wet and it cools you down in the sun. Can never go wrong with a classic cotton bandana.\n\nSalomon Adv Skin 12 backpack. I had the medium version for several years and then realized it was a bit too small for me. I have the large version now in red. Holds stuff. Lots of straps and options for water: 2L reservoir and 2x 1L flasks.\n\nRecovery kit: Normatec therabody recovery legs, Hoka One One recovery sandals, lacrosse ball, anti-fatigue mat + [standing desk](/wiki/computers/what-i-use#desk), theracane, Yeti 32oz Rambler","src/content/wiki/sports/trail-running/gear.md","e493713083aeb1f9",{"html":1347,"metadata":1348},"\u003Ch2 id=\"kits\">Kits\u003C/h2>\n\u003Cp>\u003Ca href=\"https://satisfyrunning.com/\">Satisfy\u003C/a> - I was a sucker for instagram ads and bought what seemed like a too-expensive t-shirt from them. Then I got hooked. Their cotton hits a combination of soft-light-durable that’s very impressive. For a while after college I worked in the backstock of an American Apparel where I dealt with unholy volumes of cotton t-shirts, so I consider myself [somewhat of an expert].\u003C/p>\n\u003Cp>\u003Ca href=\"https://www.tracksmith.com/\">Tracksmith\u003C/a> - Everything I have from Tracksmith is fantastic.\u003C/p>\n\u003Cp>\u003Ca href=\"https://cieleathletics.com/\">Ciele Athletics\u003C/a> - As best I can tell, Ciele makes hats that are indestructible. I have only purchased more than one hat from them to try different styles. The original hat I bought 4 years ago still looks bright and unworn, and I’ve run hundreds and hundreds of miles in it, and running it through a washing machine cycle every time. They are unkillable.\u003C/p>\n\u003Ch2 id=\"shoes\">Shoes\u003C/h2>\n\u003Cp>\u003Cem>Active\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>New Balance Fresh Foam 1080v13 - This is my main shoe. I vow to put at least 500 miles on every pair before retirement.\u003C/li>\n\u003Cli>New Balance SuperComp Trainer - This is my \u003Cem>other\u003C/em> main shoe. It’s speedier and springy-er than the 1080 and features a carbon plate. Most importantly, this is a supershoe that comes in wide sizes. My next marathon will be in a pair of these.\u003C/li>\n\u003Cli>Hoka One One Speed Goat - This is my go-to trail running shoe. I’m on my 4th pair already. I dabbled around with other wide-sized trail shoes but this is the one that’s given me the most comfortable miles.\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>Retired\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>SuperComp Elite - I really wanted to try a super shoe, but they don’t come in wide sizes. I took a gamble and lost. I could go fast in them but the upper was just too uncomfortable, so I didn’t do the marathon in them.\u003C/li>\n\u003Cli>GS Tam - I really wanted to like these, but they weren’t wide enough for me in my size. Another sad shoe-gamble!\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tech\">Tech\u003C/h2>\n\u003Cp>\u003Cem>Active\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>Garmin Eduro 2. I finally switched to a real runner’s watch, and I was right in my assumption that I didn’t know what I was missing. Apple Watch looks like it has all the right features but it misses on a couple of key points: variety of workout interfaces and interactions, navigation, distance/elevation accuracy, and battery life.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.apple.com/shop/product/MY582LL/A/powerbeats-pro-totally-wireless-earbuds-black\">Powerbeats Pro\u003C/a>. More battery life than I have endurance. Sweatproof. Physical buttons, no touching or tapping.\u003C/li>\n\u003Cli>Strava\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cem>Retired\u003C/em>\u003C/p>\n\u003Cul>\n\u003Cli>Apple Ultra Watch. Over time I’m less and less convinced that this is a “great” option for running. But I don’t have a basis for comparison, so it is my winner by default.\u003C/li>\n\u003Cli>Training Peaks. I consulted with them back in the early 2010s. The software is ok, but over time the design wore me down. Strava has less data but is more pleasing to look at.\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.watchletic.com/\">Watchletic\u003C/a> lets me use custom run plans from Training Peaks but still record using Apple HealthKit\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"misc\">Misc\u003C/h2>\n\u003Cp>Bandanas. Cheap, versatile. It keeps you warm in the wind. Get it wet and it cools you down in the sun. Can never go wrong with a classic cotton bandana.\u003C/p>\n\u003Cp>Salomon Adv Skin 12 backpack. I had the medium version for several years and then realized it was a bit too small for me. I have the large version now in red. Holds stuff. Lots of straps and options for water: 2L reservoir and 2x 1L flasks.\u003C/p>\n\u003Cp>Recovery kit: Normatec therabody recovery legs, Hoka One One recovery sandals, lacrosse ball, anti-fatigue mat + \u003Ca href=\"/wiki/computers/what-i-use#desk\">standing desk\u003C/a>, theracane, Yeti 32oz Rambler\u003C/p>",{"headings":1349,"imagePaths":1358,"frontmatter":1359},[1350,1353,1356,1357],{"depth":27,"slug":1351,"text":1352},"kits","Kits",{"depth":27,"slug":1354,"text":1355},"shoes","Shoes",{"depth":27,"slug":539,"text":540},{"depth":27,"slug":429,"text":430},[],{"title":1336,"description":1337,"createdAt":1360,"updatedAt":1361,"categories":1362,"type":1028},["Date","2023-07-18T00:00:00.000Z"],["Date","2024-07-25T00:00:00.000Z"],[1341,1342],"sports/trail-running/training-plans",{"id":1363,"data":1365,"body":1370,"filePath":1371,"digest":1372,"rendered":1373},{"title":1366,"description":1367,"createdAt":1368,"categories":1369,"type":1028},"Training Plans","What I've learned so far about training",["Date","2023-07-17T00:00:00.000Z"],[1341,1342],"Here's what I've learned about trail running in the last 8 months of working with a coach and training for my first 50k.\n\n*Long, slow runs are everything.* I spend something like 90% of my time running Zone 1 and Zone 2, punctuated with a handful of strides each session. This builds aerobic capacity and endurance. It is counter-intuitive at first because running is supposed to be challenging. Running easy feels weird until you're used to it. Before coaching, 90% of my sessions were near the upper end of my threshold.\n\n*Heartrate and Threshold* are more important to track than pace. The common misconception when you want to run faster is to focus on how fast you're running. Wrong. Better to focus on what your heart is doing in relation to your lactate threshold.\n\n*Supercompensation* is the state of active recovery where your capacity surges beyond the previous steady state. If your sequence workouts carefully, you balance recovery time such that you can enter 2-3 supercompensation cycles every week. The compounding effect of these micro-cycles is what drives up your ability to soak up greater running volumes without injury or distress.\n\n*Train slow, race fast.* Continuing the theme, the best time to give full effort is during a race, preferably in the second half. I started training so I could learn how to race bigger distances without blowing up, after having a 10km where I very nearly puked at the halfway point.\n\n*Strides* are short bursts of speed, usually 20-30 seconds, where you run at a 7/8ths of your max pace.","src/content/wiki/sports/trail-running/training-plans.md","b8e10acea6f17c97",{"html":1374,"metadata":1375},"\u003Cp>Here’s what I’ve learned about trail running in the last 8 months of working with a coach and training for my first 50k.\u003C/p>\n\u003Cp>\u003Cem>Long, slow runs are everything.\u003C/em> I spend something like 90% of my time running Zone 1 and Zone 2, punctuated with a handful of strides each session. This builds aerobic capacity and endurance. It is counter-intuitive at first because running is supposed to be challenging. Running easy feels weird until you’re used to it. Before coaching, 90% of my sessions were near the upper end of my threshold.\u003C/p>\n\u003Cp>\u003Cem>Heartrate and Threshold\u003C/em> are more important to track than pace. The common misconception when you want to run faster is to focus on how fast you’re running. Wrong. Better to focus on what your heart is doing in relation to your lactate threshold.\u003C/p>\n\u003Cp>\u003Cem>Supercompensation\u003C/em> is the state of active recovery where your capacity surges beyond the previous steady state. If your sequence workouts carefully, you balance recovery time such that you can enter 2-3 supercompensation cycles every week. The compounding effect of these micro-cycles is what drives up your ability to soak up greater running volumes without injury or distress.\u003C/p>\n\u003Cp>\u003Cem>Train slow, race fast.\u003C/em> Continuing the theme, the best time to give full effort is during a race, preferably in the second half. I started training so I could learn how to race bigger distances without blowing up, after having a 10km where I very nearly puked at the halfway point.\u003C/p>\n\u003Cp>\u003Cem>Strides\u003C/em> are short bursts of speed, usually 20-30 seconds, where you run at a 7/8ths of your max pace.\u003C/p>",{"headings":1376,"imagePaths":1377,"frontmatter":1378},[],[],{"title":1366,"description":1367,"createdAt":1379,"categories":1380,"type":1028},["Date","2023-07-17T00:00:00.000Z"],[1341,1342],"computers/web-development/front-end/layered-architecture",{"id":1381,"data":1383,"body":1390,"filePath":1391,"digest":1392,"rendered":1393},{"title":1384,"description":1385,"createdAt":1386,"updatedAt":1387,"categories":1388,"type":1389},"Layered Architecture","A Theory of Applications",["Date","2023-07-31T00:00:00.000Z"],["Date","2023-08-09T00:00:00.000Z"],[1027,1108,651],"essay","A better name for this page might be *Types of Frontend Systems*.\n\nThis essay describes a way to categorize software applications that I developed as a consultant and developer on product and app platform teams. I started dropping this metaphor without ever laying it out formally, having tuned into common the vibrations and reoccurring patterns across dozens of applications of different levels of complexity.\n\nThe starting point is not original: applications are made up of layers of abstraction. Layers determine complexity and limit what types of features you can build. Layers pile on top of on another, and each new layer conceals and adapts the layer below. In practice, an application will touch many layers simultaneously to achieve its goal.\n\nThe history of computing tracks the accretion of layers of technology: electrical switches and relays gave way to vacuum tubes, which yielded to transistors and solid state devices; programming in binary led to assembly language and hexadecimal, ultimately ceding to the first \"high level\" languages; stateless machines requiring tedious input on each power cycle drove the need for boot loaders and BIOS, accidentally birthing operating systems in the process. Operating Systems, for a time, became the venue for applications. Web browsers emerged to offer a new delivery vector for software applications, and today, after 30 years of growth, the web touches every business on the planet.\n\n\"Layer 0\" is the computer. The definition of the computer changes over time.\n\n| When | Layer 0 |\n|-|-|\n| 60 years ago | assembly language |\n| 30 years ago | operating systems / PCs |\n| Today | web browsers / mobile devices |\n\n## Table of Contents\n\n## Layer 1 - Static Content\n\nStatic content, once deployed, doesn't change. The client is the only runtime. With no shortage of hosts offering free or nearly-free options, static hosting has long been a commodity.\n\n- Static websites can _do a lot_ without having to interact with backend services. [Squoosh](https://squoosh.app/) is one of the best examples of something that _feels_ dynamic but isn't.\n- Books are the original technology that best fits this description. Hypertext is not a requirement. Billboards, magazines, graffiti, most Fine Art; all static content.\n- Content can only change with a **deployment**\n\nHere's a little table to help count the layers. The first layer is obviously simple:\n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n\n\n## Layer 2 - Templates\n\nDynamic content\n\n~~A runtime that generates content on each request using fixed templates.~~\n\n- ~~PHP + MySQL are the canonical example of this: Put some text or HTML into a database, then recall that text with a script at runtime to serve a page. The database layer isn't strictly necessary, any runtime that chooses content dynamically. PHPMyAdmin is your admin page.~~\n- Templates do not change dynamically between deploys. Editable templates earn you two extra layers (see below.)\n- *How* the content changes is crucially not defined in this setup. This type of application will _pull_ data from a source without ever writing data back to it. \n- Certain runtime-driven content can change without a **deployment** but the template that establishes the frame around the content is static, changes require a deployment.\n- Geocities lives here in spirit. It blurred the line between a Layers 2 and 3, but never approached the additional complexity of Layer 4.\n- Statically generated documentation sites are a good example of this: many different articles, stored separately and then used to generate HTML.\n\t- There might be a database in the picture, often only accessed once to generate the content. Those familiar with static site generators know this as the \"build step.\"\n- This website is a Layer 2 application.\n\nOur little table gets bigger! You can very much think of Templates as an outgrowth of Static content, so a new cell has been added to the right:\n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n| 2 | Templates | Dynamic content |\n\n## Layer 3 - Content from a Database\n\nInteractive multi-user application, Content Management System, Client \u003C-> Database\n\nLayers are cumulative. Building on the 2-Layer system, users manipulate the content they see using the application itself.\n\nThis is your standard CRUD app.\n\n- Sessions, Authorization, and Authentication come into the picture\n- Basic premise is: \n- Ruby on Rails, while not a CMS itself, helped popularize techniques for building a 3-Layer application\n- You don't typically think of Facebook as a CMS, but prior to the switch to the algorithmic newsfeed in 2012, Facebook was more-or-less a multi-user content management system.\n\t- Same goes for Twitter: take input from a user (your posts), stuff it in a database, and display it in some other context later on.\n\t- MySpace had an even more liberal interpretation, allowing any CSS or HTML to be included on your profile page so that you could blast any visitor to your profile with an emo song at full volume.\n\nAnother layer added to the table:\n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n| 2 | Templates | Dynamic content |\n| 3 | Content from DB | Users r/w content | \n\n \n## Layer 4 - Templates from a DB\n\nInteractive multi-user application with custom presentation, CMS with dynamic templates (\"Dynamic CMS\")\n\nWhen a CMS allows a user to define both the content and the layout, you enter the territory of a dynamic CMS. Users are able to control the presentation of their content as well as the content itself in a single feedback loop.  \n\n- Wordpress. Through a quirk of PHP (h/t Apache) and now years of effort to ship Blocks, a longstanding feature of Wordpress is being able change between themes without having to restart or reconfigure the site.\n- With this type of system, a User can build a full application without having to know _more than the system itself_. All the constituent parts are there: storage, conditional branching, and loops. Granted, your templating layer may not allow for any programming logic, limiting the scope of what can be built\n- Standalone e-commerce sites are an example of this: you control inventory, manage templates for how your pages\n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n| 2 | Templates | Dynamic content |\n| 3 | Content from DB | Users r/w content | \n| 4 | Templates from DB | Users r/w templates | \n\n\n## Layer 5 - Many Instances\n\nMulti-tenant Dynamic Applications\n\nNot only are there users and user-created content, but there are self-administered groups of users with fine grained access control. Once multi-tenancy enters the picture, it's difficult to continue calling \n\n- Reddit and Discord, too.\n- JIRA is an easy-to-think-of example of this\n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n| 2 | Templates | Dynamic content |\n| 3 | Content from DB | Users r/w content | \n| 4 | Templates from DB | Users r/w templates | \n| 5 | Many Instances | Groups of users & RBAC |\n\n\n## Layer 6 - User Programmable\n\nDynamic templates with Runtime\n\nIt is not enough to merely allow users to manage themselves *and* the template *and* the content. The next step is to let users define programming logic and side effects.\n\n* GitHub Actions\n* Glitch\n- \"No Code\" / app builders\n- Yahoo! Pipes is an early example\n\nOur humble table needs to pivot in order to fit it all in: \n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n| 2 | Templates | Dynamic content |\n| 3 | Content from DB | Users r/w content | \n| 4 | Templates from DB | Users r/w templates | \n| 5 | Many Instances | Groups of users & RBAC |\n| 6 | User Programmable | Logic defined externally |\n\n\n## Layer 7 - Dynamic Infrastructure\n\nMulti-tenant Dynamic Infrastructure\n\nThe deeper you get into the layered stack, the more you start looking like a hosting company. When a standard CRUD application transitions beyond user-defined layout and user-defined program logic, the only territory left is to define the infrastructure for running the program.\n\nThe classic value-proposition of cloud computing goes something like, \"tell us what resources you need and we will provision them for you, and don't worry about the details.\"\n\nWith this architecture, Salesforce transformed the scope of its business from CRM to \"everything.\"\n\nKubernetes, the open source ancestor of [Google's Borg cluster management software](https://dl.acm.org/doi/10.1145/2741948.2741964), provides the framework for building a layer 7 application.\n\nVercel is building the Frontend Cloud.\n\n| | Layer | Description |\n| - | - | - |\n| 1 | Static | Fixed content |\n| 2 | Templates | Dynamic content |\n| 5 | Many Instances | Groups of users & RBAC |\n| 3 | Content from DB | Users r/w content | \n| 4 | Templates from DB | Users r/w templates | \n| 6 | User Programmable | Logic defined externally |\n| 7 | Dynamic Infrastructure | Congratulations, you are a hosting company |\n\n\n---\n\nhttps://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/","src/content/wiki/computers/web-development/front-end/layered-architecture.md","599dc004d6ab0ada",{"html":1394,"metadata":1395},"\u003Cp>A better name for this page might be \u003Cem>Types of Frontend Systems\u003C/em>.\u003C/p>\n\u003Cp>This essay describes a way to categorize software applications that I developed as a consultant and developer on product and app platform teams. I started dropping this metaphor without ever laying it out formally, having tuned into common the vibrations and reoccurring patterns across dozens of applications of different levels of complexity.\u003C/p>\n\u003Cp>The starting point is not original: applications are made up of layers of abstraction. Layers determine complexity and limit what types of features you can build. Layers pile on top of on another, and each new layer conceals and adapts the layer below. In practice, an application will touch many layers simultaneously to achieve its goal.\u003C/p>\n\u003Cp>The history of computing tracks the accretion of layers of technology: electrical switches and relays gave way to vacuum tubes, which yielded to transistors and solid state devices; programming in binary led to assembly language and hexadecimal, ultimately ceding to the first “high level” languages; stateless machines requiring tedious input on each power cycle drove the need for boot loaders and BIOS, accidentally birthing operating systems in the process. Operating Systems, for a time, became the venue for applications. Web browsers emerged to offer a new delivery vector for software applications, and today, after 30 years of growth, the web touches every business on the planet.\u003C/p>\n\u003Cp>“Layer 0” is the computer. The definition of the computer changes over time.\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>When\u003C/th>\u003Cth>Layer 0\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>60 years ago\u003C/td>\u003Ctd>assembly language\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>30 years ago\u003C/td>\u003Ctd>operating systems / PCs\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Today\u003C/td>\u003Ctd>web browsers / mobile devices\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#layer-1---static-content\">Layer 1 - Static Content\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#layer-2---templates\">Layer 2 - Templates\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#layer-3---content-from-a-database\">Layer 3 - Content from a Database\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#layer-4---templates-from-a-db\">Layer 4 - Templates from a DB\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#layer-5---many-instances\">Layer 5 - Many Instances\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#layer-6---user-programmable\">Layer 6 - User Programmable\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#layer-7---dynamic-infrastructure\">Layer 7 - Dynamic Infrastructure\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"layer-1---static-content\">Layer 1 - Static Content\u003C/h2>\n\u003Cp>Static content, once deployed, doesn’t change. The client is the only runtime. With no shortage of hosts offering free or nearly-free options, static hosting has long been a commodity.\u003C/p>\n\u003Cul>\n\u003Cli>Static websites can \u003Cem>do a lot\u003C/em> without having to interact with backend services. \u003Ca href=\"https://squoosh.app/\">Squoosh\u003C/a> is one of the best examples of something that \u003Cem>feels\u003C/em> dynamic but isn’t.\u003C/li>\n\u003Cli>Books are the original technology that best fits this description. Hypertext is not a requirement. Billboards, magazines, graffiti, most Fine Art; all static content.\u003C/li>\n\u003Cli>Content can only change with a \u003Cstrong>deployment\u003C/strong>\u003C/li>\n\u003C/ul>\n\u003Cp>Here’s a little table to help count the layers. The first layer is obviously simple:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"layer-2---templates\">Layer 2 - Templates\u003C/h2>\n\u003Cp>Dynamic content\u003C/p>\n\u003Cp>\u003Cdel>A runtime that generates content on each request using fixed templates.\u003C/del>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cdel>PHP + MySQL are the canonical example of this: Put some text or HTML into a database, then recall that text with a script at runtime to serve a page. The database layer isn’t strictly necessary, any runtime that chooses content dynamically. PHPMyAdmin is your admin page.\u003C/del>\u003C/li>\n\u003Cli>Templates do not change dynamically between deploys. Editable templates earn you two extra layers (see below.)\u003C/li>\n\u003Cli>\u003Cem>How\u003C/em> the content changes is crucially not defined in this setup. This type of application will \u003Cem>pull\u003C/em> data from a source without ever writing data back to it.\u003C/li>\n\u003Cli>Certain runtime-driven content can change without a \u003Cstrong>deployment\u003C/strong> but the template that establishes the frame around the content is static, changes require a deployment.\u003C/li>\n\u003Cli>Geocities lives here in spirit. It blurred the line between a Layers 2 and 3, but never approached the additional complexity of Layer 4.\u003C/li>\n\u003Cli>Statically generated documentation sites are a good example of this: many different articles, stored separately and then used to generate HTML.\n\u003Cul>\n\u003Cli>There might be a database in the picture, often only accessed once to generate the content. Those familiar with static site generators know this as the “build step.”\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>This website is a Layer 2 application.\u003C/li>\n\u003C/ul>\n\u003Cp>Our little table gets bigger! You can very much think of Templates as an outgrowth of Static content, so a new cell has been added to the right:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>2\u003C/td>\u003Ctd>Templates\u003C/td>\u003Ctd>Dynamic content\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"layer-3---content-from-a-database\">Layer 3 - Content from a Database\u003C/h2>\n\u003Cp>Interactive multi-user application, Content Management System, Client &#x3C;-> Database\u003C/p>\n\u003Cp>Layers are cumulative. Building on the 2-Layer system, users manipulate the content they see using the application itself.\u003C/p>\n\u003Cp>This is your standard CRUD app.\u003C/p>\n\u003Cul>\n\u003Cli>Sessions, Authorization, and Authentication come into the picture\u003C/li>\n\u003Cli>Basic premise is:\u003C/li>\n\u003Cli>Ruby on Rails, while not a CMS itself, helped popularize techniques for building a 3-Layer application\u003C/li>\n\u003Cli>You don’t typically think of Facebook as a CMS, but prior to the switch to the algorithmic newsfeed in 2012, Facebook was more-or-less a multi-user content management system.\n\u003Cul>\n\u003Cli>Same goes for Twitter: take input from a user (your posts), stuff it in a database, and display it in some other context later on.\u003C/li>\n\u003Cli>MySpace had an even more liberal interpretation, allowing any CSS or HTML to be included on your profile page so that you could blast any visitor to your profile with an emo song at full volume.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>Another layer added to the table:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>2\u003C/td>\u003Ctd>Templates\u003C/td>\u003Ctd>Dynamic content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3\u003C/td>\u003Ctd>Content from DB\u003C/td>\u003Ctd>Users r/w content\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"layer-4---templates-from-a-db\">Layer 4 - Templates from a DB\u003C/h2>\n\u003Cp>Interactive multi-user application with custom presentation, CMS with dynamic templates (“Dynamic CMS”)\u003C/p>\n\u003Cp>When a CMS allows a user to define both the content and the layout, you enter the territory of a dynamic CMS. Users are able to control the presentation of their content as well as the content itself in a single feedback loop.\u003C/p>\n\u003Cul>\n\u003Cli>Wordpress. Through a quirk of PHP (h/t Apache) and now years of effort to ship Blocks, a longstanding feature of Wordpress is being able change between themes without having to restart or reconfigure the site.\u003C/li>\n\u003Cli>With this type of system, a User can build a full application without having to know \u003Cem>more than the system itself\u003C/em>. All the constituent parts are there: storage, conditional branching, and loops. Granted, your templating layer may not allow for any programming logic, limiting the scope of what can be built\u003C/li>\n\u003Cli>Standalone e-commerce sites are an example of this: you control inventory, manage templates for how your pages\u003C/li>\n\u003C/ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>2\u003C/td>\u003Ctd>Templates\u003C/td>\u003Ctd>Dynamic content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3\u003C/td>\u003Ctd>Content from DB\u003C/td>\u003Ctd>Users r/w content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>4\u003C/td>\u003Ctd>Templates from DB\u003C/td>\u003Ctd>Users r/w templates\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"layer-5---many-instances\">Layer 5 - Many Instances\u003C/h2>\n\u003Cp>Multi-tenant Dynamic Applications\u003C/p>\n\u003Cp>Not only are there users and user-created content, but there are self-administered groups of users with fine grained access control. Once multi-tenancy enters the picture, it’s difficult to continue calling\u003C/p>\n\u003Cul>\n\u003Cli>Reddit and Discord, too.\u003C/li>\n\u003Cli>JIRA is an easy-to-think-of example of this\u003C/li>\n\u003C/ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>2\u003C/td>\u003Ctd>Templates\u003C/td>\u003Ctd>Dynamic content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3\u003C/td>\u003Ctd>Content from DB\u003C/td>\u003Ctd>Users r/w content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>4\u003C/td>\u003Ctd>Templates from DB\u003C/td>\u003Ctd>Users r/w templates\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>5\u003C/td>\u003Ctd>Many Instances\u003C/td>\u003Ctd>Groups of users &#x26; RBAC\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"layer-6---user-programmable\">Layer 6 - User Programmable\u003C/h2>\n\u003Cp>Dynamic templates with Runtime\u003C/p>\n\u003Cp>It is not enough to merely allow users to manage themselves \u003Cem>and\u003C/em> the template \u003Cem>and\u003C/em> the content. The next step is to let users define programming logic and side effects.\u003C/p>\n\u003Cul>\n\u003Cli>GitHub Actions\u003C/li>\n\u003Cli>Glitch\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>“No Code” / app builders\u003C/li>\n\u003Cli>Yahoo! Pipes is an early example\u003C/li>\n\u003C/ul>\n\u003Cp>Our humble table needs to pivot in order to fit it all in:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>2\u003C/td>\u003Ctd>Templates\u003C/td>\u003Ctd>Dynamic content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3\u003C/td>\u003Ctd>Content from DB\u003C/td>\u003Ctd>Users r/w content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>4\u003C/td>\u003Ctd>Templates from DB\u003C/td>\u003Ctd>Users r/w templates\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>5\u003C/td>\u003Ctd>Many Instances\u003C/td>\u003Ctd>Groups of users &#x26; RBAC\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>6\u003C/td>\u003Ctd>User Programmable\u003C/td>\u003Ctd>Logic defined externally\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"layer-7---dynamic-infrastructure\">Layer 7 - Dynamic Infrastructure\u003C/h2>\n\u003Cp>Multi-tenant Dynamic Infrastructure\u003C/p>\n\u003Cp>The deeper you get into the layered stack, the more you start looking like a hosting company. When a standard CRUD application transitions beyond user-defined layout and user-defined program logic, the only territory left is to define the infrastructure for running the program.\u003C/p>\n\u003Cp>The classic value-proposition of cloud computing goes something like, “tell us what resources you need and we will provision them for you, and don’t worry about the details.”\u003C/p>\n\u003Cp>With this architecture, Salesforce transformed the scope of its business from CRM to “everything.”\u003C/p>\n\u003Cp>Kubernetes, the open source ancestor of \u003Ca href=\"https://dl.acm.org/doi/10.1145/2741948.2741964\">Google’s Borg cluster management software\u003C/a>, provides the framework for building a layer 7 application.\u003C/p>\n\u003Cp>Vercel is building the Frontend Cloud.\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003C/th>\u003Cth>Layer\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>1\u003C/td>\u003Ctd>Static\u003C/td>\u003Ctd>Fixed content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>2\u003C/td>\u003Ctd>Templates\u003C/td>\u003Ctd>Dynamic content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>5\u003C/td>\u003Ctd>Many Instances\u003C/td>\u003Ctd>Groups of users &#x26; RBAC\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3\u003C/td>\u003Ctd>Content from DB\u003C/td>\u003Ctd>Users r/w content\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>4\u003C/td>\u003Ctd>Templates from DB\u003C/td>\u003Ctd>Users r/w templates\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>6\u003C/td>\u003Ctd>User Programmable\u003C/td>\u003Ctd>Logic defined externally\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>7\u003C/td>\u003Ctd>Dynamic Infrastructure\u003C/td>\u003Ctd>Congratulations, you are a hosting company\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Chr>\n\u003Cp>\u003Ca href=\"https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/\">https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/\u003C/a>\u003C/p>",{"headings":1396,"imagePaths":1419,"frontmatter":1420},[1397,1398,1401,1404,1407,1410,1413,1416],{"depth":27,"slug":779,"text":780},{"depth":27,"slug":1399,"text":1400},"layer-1---static-content","Layer 1 - Static Content",{"depth":27,"slug":1402,"text":1403},"layer-2---templates","Layer 2 - Templates",{"depth":27,"slug":1405,"text":1406},"layer-3---content-from-a-database","Layer 3 - Content from a Database",{"depth":27,"slug":1408,"text":1409},"layer-4---templates-from-a-db","Layer 4 - Templates from a DB",{"depth":27,"slug":1411,"text":1412},"layer-5---many-instances","Layer 5 - Many Instances",{"depth":27,"slug":1414,"text":1415},"layer-6---user-programmable","Layer 6 - User Programmable",{"depth":27,"slug":1417,"text":1418},"layer-7---dynamic-infrastructure","Layer 7 - Dynamic Infrastructure",[],{"title":1384,"description":1385,"createdAt":1421,"updatedAt":1422,"categories":1423,"type":1389},["Date","2023-07-31T00:00:00.000Z"],["Date","2023-08-09T00:00:00.000Z"],[1027,1108,651],"computers/web-development/front-end/svg-sprites",{"id":1424,"data":1426,"body":1431,"filePath":1432,"digest":1433,"rendered":1434},{"title":1427,"description":1428,"createdAt":1429,"categories":1430,"type":1028},"SVG icon sprites","What I've learned about optimizing SVGs to load icons",["Date","2024-08-07T00:00:00.000Z"],[1027,1108,651],"SVGs are pretty cool.\n\nMost applications use a variety of icons. High-quality open source icon sets are widely available. React (and adjacent frameworks) treat SVGs as interchangable with components. The developer ergonomics of these large packages is hard to beat.\n\nBut inlining SVGs in JavaScript is probably the least cool way to deliver static images to your users.\n\nInline SVGs are not ideal for a few reasons:\n- bundle size increases with every icon you add\n- Icons rarely change, but users are forced to re-download them whenever your bundle changes\n\nYou could get around this with precise bundle splitting and file hashing across releases, but I consider that high-effort. Most frameworks optimize for bundling around routes rather than modules. [citation needed]\n\n\u003Caside>\nOf course, \"it depends\"\n\nYou are probably fine if you're using a limited set of icons. Take the win of the good developer experience for now and worry about this later. In my experience most apps will have dozens of icons after a year of development.\n\u003C/aside>\n\n## Sprite sheets are cool\n\n- pack several images into a single canvas, then load a subset of the image\n\t- the [street fighter 2 sprite sheet](https://fabiensanglard.net/sf2_sheets/) is a memorable example\n- making and maintaining sprites by hand is hard\n  - I first learned this technique for web development back in 2009 at my first job. I would spend hours in Photoshop packing transparent pngs with all the icons and rounded corners needed for the web apps I was building. And of course I always remembered to include the IE6 alpha transparency hack!\n- You can make sprites with SVGs.\n  - I don't know of any tools that exist for this, so I've been making my own.\n\n## SVG icons\n\n- SVG supports loading parts of a larger SVG by reference with the `\u003Csymbol>` and `\u003Cuse>` tags\n- Loading a single SVG is better than inlining dozens SVGs in your JavaScript bundle.\n\t- Any SVGs will be loaded in parallel with scripts\n\t- Cache that thing.\n\t- Keep an eye on the size. If you're loading an excessive amount of icons this file will get big. Even though it's only loaded once per session, you don't want this to be multiple megabytes. In larger projects I've spread Icons into one or more files.\n\n## Example\n\nHere's an over-wrought example of paging through lots and lots of icons.\n\n\u003Ciframe class=\"w-full\" style=\"height: 32rem; border: none; border-radius: 10px\" src=\"https://icon-picker-demo.vercel.app/?icon=werewolf&color=black\">","src/content/wiki/computers/web-development/front-end/svg-sprites.md","443e2ff260a8693e",{"html":1435,"metadata":1436},"\u003Cp>SVGs are pretty cool.\u003C/p>\n\u003Cp>Most applications use a variety of icons. High-quality open source icon sets are widely available. React (and adjacent frameworks) treat SVGs as interchangable with components. The developer ergonomics of these large packages is hard to beat.\u003C/p>\n\u003Cp>But inlining SVGs in JavaScript is probably the least cool way to deliver static images to your users.\u003C/p>\n\u003Cp>Inline SVGs are not ideal for a few reasons:\u003C/p>\n\u003Cul>\n\u003Cli>bundle size increases with every icon you add\u003C/li>\n\u003Cli>Icons rarely change, but users are forced to re-download them whenever your bundle changes\u003C/li>\n\u003C/ul>\n\u003Cp>You could get around this with precise bundle splitting and file hashing across releases, but I consider that high-effort. Most frameworks optimize for bundling around routes rather than modules. [citation needed]\u003C/p>\n\u003Caside>\nOf course, \"it depends\"\n\u003Cp>You are probably fine if you’re using a limited set of icons. Take the win of the good developer experience for now and worry about this later. In my experience most apps will have dozens of icons after a year of development.\u003C/p>\n\u003C/aside>\n\u003Ch2 id=\"sprite-sheets-are-cool\">Sprite sheets are cool\u003C/h2>\n\u003Cul>\n\u003Cli>pack several images into a single canvas, then load a subset of the image\n\u003Cul>\n\u003Cli>the \u003Ca href=\"https://fabiensanglard.net/sf2_sheets/\">street fighter 2 sprite sheet\u003C/a> is a memorable example\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>making and maintaining sprites by hand is hard\n\u003Cul>\n\u003Cli>I first learned this technique for web development back in 2009 at my first job. I would spend hours in Photoshop packing transparent pngs with all the icons and rounded corners needed for the web apps I was building. And of course I always remembered to include the IE6 alpha transparency hack!\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>You can make sprites with SVGs.\n\u003Cul>\n\u003Cli>I don’t know of any tools that exist for this, so I’ve been making my own.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"svg-icons\">SVG icons\u003C/h2>\n\u003Cul>\n\u003Cli>SVG supports loading parts of a larger SVG by reference with the \u003Ccode>&#x3C;symbol>\u003C/code> and \u003Ccode>&#x3C;use>\u003C/code> tags\u003C/li>\n\u003Cli>Loading a single SVG is better than inlining dozens SVGs in your JavaScript bundle.\n\u003Cul>\n\u003Cli>Any SVGs will be loaded in parallel with scripts\u003C/li>\n\u003Cli>Cache that thing.\u003C/li>\n\u003Cli>Keep an eye on the size. If you’re loading an excessive amount of icons this file will get big. Even though it’s only loaded once per session, you don’t want this to be multiple megabytes. In larger projects I’ve spread Icons into one or more files.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"example\">Example\u003C/h2>\n\u003Cp>Here’s an over-wrought example of paging through lots and lots of icons.\u003C/p>\n\u003Ciframe class=\"w-full\" style=\"height: 32rem; border: none; border-radius: 10px\" src=\"https://icon-picker-demo.vercel.app/?icon=werewolf&#x26;color=black\">\u003C/iframe>",{"headings":1437,"imagePaths":1447,"frontmatter":1448},[1438,1441,1444],{"depth":27,"slug":1439,"text":1440},"sprite-sheets-are-cool","Sprite sheets are cool",{"depth":27,"slug":1442,"text":1443},"svg-icons","SVG icons",{"depth":27,"slug":1445,"text":1446},"example","Example",[],{"title":1427,"description":1428,"createdAt":1449,"type":1028,"categories":1450},["Date","2024-08-07T00:00:00.000Z"],[1027,1108,651],"computers/web-development/front-end/three-way-switch",{"id":1451,"data":1453,"body":1458,"filePath":1459,"digest":1460,"rendered":1461},{"title":1454,"description":1455,"createdAt":1456,"categories":1457,"type":1028},"Three-way Switch","Two-way switches are common, but three-way switches are not.",["Date","2024-07-27T00:00:00.000Z"],[1027,1108,651],"Sometimes you need to toggle between three values but most off-the-shelf component libraries don't cover this use case. Changing color themes between system and light/dark is a common use case.\n\nThe purpose-built HTML form element to use is the `\u003Cinput type=\"radio\">` element. A group of radio elements with a common `name` property will allow only one radio element to be checked at a time, with a unique value associate with each input. However, the default styling of radio elements leaves something to be desired, e.g.:\n\n\u003Cfieldset style=\"width: fit-content; margin: 0 auto;\">\n  \u003Cinput type=\"radio\" id=\"demo-light\" name=\"theme\" value=\"light\" checked />\n  \u003Clabel for=\"demo-light\">Light\u003C/label>\n  \u003Cinput type=\"radio\" id=\"demo-system\" name=\"theme\" value=\"system\" />\n  \u003Clabel for=\"demo-system\">System\u003C/label>\n  \u003Cinput type=\"radio\" id=\"demo-dark\" name=\"theme\" value=\"dark\" />\n  \u003Clabel for=\"demo-dark\">Dark\u003C/label>\n\u003C/fieldset>\n\nFortunately, using the exact same markup, a `\u003Cfieldset>` and three `\u003Cinput type=\"radio\">` elements, each with a `\u003Clabel>`, you can easily implement a three-way switch with CSS.\n\n- the fieldset forms the switch container\n- input elements have `appearance: none` to remove the default styling and then are set to fill the container evenly\n- an `::after` pseudo-element on the `\u003Cfieldset>` to create a circular switch\n- `clip-path` and `:has` set the position of the switch based on which radio input is checked\n- the labels are positioned absolutely and visually hidden by default, but shown when the corresponding radio input is checked\n- custom `linear()` easing function makes the switch feel springy\n- an event listener on the `\u003Cfieldset>` updates the `color-scheme` attribute on the `\u003Chtml>` element when the radio input is changed\n\nBringing it all together:\n\n\u003Cp class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"mdZEvmq\" data-pen-title=\"3 way switch\" data-user=\"wookiehangover\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  \u003Cspan>See the Pen \u003Ca href=\"https://codepen.io/wookiehangover/pen/mdZEvmq\">\n  3 way switch\u003C/a> by Sam Breed (\u003Ca href=\"https://codepen.io/wookiehangover\">@wookiehangover\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\u003C/span>\n\u003C/p>\n\u003Cscript async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\">\u003C/script>\n\nThere's also (at the time of writing) a three-way toggle in the footer of this website.","src/content/wiki/computers/web-development/front-end/three-way-switch.md","e2912482fb3b356e",{"html":1462,"metadata":1463},"\u003Cp>Sometimes you need to toggle between three values but most off-the-shelf component libraries don’t cover this use case. Changing color themes between system and light/dark is a common use case.\u003C/p>\n\u003Cp>The purpose-built HTML form element to use is the \u003Ccode>&#x3C;input type=\"radio\">\u003C/code> element. A group of radio elements with a common \u003Ccode>name\u003C/code> property will allow only one radio element to be checked at a time, with a unique value associate with each input. However, the default styling of radio elements leaves something to be desired, e.g.:\u003C/p>\n\u003Cfieldset style=\"width: fit-content; margin: 0 auto;\">\n  \u003Cinput type=\"radio\" id=\"demo-light\" name=\"theme\" value=\"light\" checked>\n  \u003Clabel for=\"demo-light\">Light\u003C/label>\n  \u003Cinput type=\"radio\" id=\"demo-system\" name=\"theme\" value=\"system\">\n  \u003Clabel for=\"demo-system\">System\u003C/label>\n  \u003Cinput type=\"radio\" id=\"demo-dark\" name=\"theme\" value=\"dark\">\n  \u003Clabel for=\"demo-dark\">Dark\u003C/label>\n\u003C/fieldset>\n\u003Cp>Fortunately, using the exact same markup, a \u003Ccode>&#x3C;fieldset>\u003C/code> and three \u003Ccode>&#x3C;input type=\"radio\">\u003C/code> elements, each with a \u003Ccode>&#x3C;label>\u003C/code>, you can easily implement a three-way switch with CSS.\u003C/p>\n\u003Cul>\n\u003Cli>the fieldset forms the switch container\u003C/li>\n\u003Cli>input elements have \u003Ccode>appearance: none\u003C/code> to remove the default styling and then are set to fill the container evenly\u003C/li>\n\u003Cli>an \u003Ccode>::after\u003C/code> pseudo-element on the \u003Ccode>&#x3C;fieldset>\u003C/code> to create a circular switch\u003C/li>\n\u003Cli>\u003Ccode>clip-path\u003C/code> and \u003Ccode>:has\u003C/code> set the position of the switch based on which radio input is checked\u003C/li>\n\u003Cli>the labels are positioned absolutely and visually hidden by default, but shown when the corresponding radio input is checked\u003C/li>\n\u003Cli>custom \u003Ccode>linear()\u003C/code> easing function makes the switch feel springy\u003C/li>\n\u003Cli>an event listener on the \u003Ccode>&#x3C;fieldset>\u003C/code> updates the \u003Ccode>color-scheme\u003C/code> attribute on the \u003Ccode>&#x3C;html>\u003C/code> element when the radio input is changed\u003C/li>\n\u003C/ul>\n\u003Cp>Bringing it all together:\u003C/p>\n\u003Cp class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"mdZEvmq\" data-pen-title=\"3 way switch\" data-user=\"wookiehangover\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  \u003Cspan>See the Pen \u003Ca href=\"https://codepen.io/wookiehangover/pen/mdZEvmq\">\n  3 way switch\u003C/a> by Sam Breed (\u003Ca href=\"https://codepen.io/wookiehangover\">@wookiehangover\u003C/a>)\n  on \u003Ca href=\"https://codepen.io\">CodePen\u003C/a>.\u003C/span>\n\u003C/p>\n\u003Cscript async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\">\u003C/script>\n\u003Cp>There’s also (at the time of writing) a three-way toggle in the footer of this website.\u003C/p>",{"headings":1464,"imagePaths":1465,"frontmatter":1466},[],[],{"title":1454,"description":1455,"createdAt":1467,"type":1028,"categories":1468},["Date","2024-07-27T00:00:00.000Z"],[1027,1108,651],"computers/web-development/front-end/what-is-front-end-infra",{"id":1469,"data":1471,"body":1477,"filePath":1478,"digest":1479,"rendered":1480},{"title":1472,"description":1473,"createdAt":1474,"updatedAt":1475,"categories":1476,"type":1028},"What is Front End Infrastructure?","Unpacking the evolution of web app devlopment",["Date","2020-10-10T00:00:00.000Z"],["Date","2023-07-31T00:00:00.000Z"],[1027,1108,651],"*Note: This was an unpublished drafted from October 2020 that I wrote as I was winding down my role at [Credit Karma](/cv.html#credit-karma). Part of the motivation for [building this wiki](../building-this-wiki) was to get incomplete thoughts like these into a space where they can grow.*\n\nI was recently asked to give an overview of \"Front End Infrastructure\" for someone trying to navigate the industry. After giving my typically rambling-but-accurate impromptu answer, I reflected a bit about how to define this pocket of technology that I've been operating in professionally for the last ten years.\n\nTo start, both \"front end\" and \"infrastructure\" are loaded terms.\n\n## Table of Contents\n\n## Definitions\n\n\"**Front end**\" conjures up whatever comprises the UI layer of an application, be it a website or a native app. In a large organization, it is maintained by specialists who conjure up the right incantations for each platform. Platforms are important, and today there are 3 to care about: the web, iOS, and Android.\n\n\"**Infrastructure**\" is the \"thing\" that runs the piece of software _which you don't have to care about_. It is the layer of abstraction in the software stack that is manged for you. It could be a group of servers in a network, or a VM instance running on server, or a pod in a Kubernetes cluster, or serverless function behind an API gateway. Infrastructure is the boundary between what you need to know about to build an application and what you don't. Everything responsible for running your code that you don't need to worry about counts as infrastructure. It is prebuilt and generic; fit for myriad use cases, one if which is yours.\n\n## Scope\n  \n\"**Front End Infrastructure**\" can cover:\n\n- The \"web tier\"\n\t- Layer 7 proxy\n\t- Configuring the network edge (your CDN, see below)\n\t- Server side rendering (aka serving unique HTML responses)\n\t- Form submissions, file uploads\n\t- Cookie management\n- (Negotiating with) the \"API tier\"\n\t- Getting and updating data\n\t- Authentication / identity\n\t- Various acronyms: CRUD, REST, GraphQL\n- The CDN\n\t- Static file delivery\n\t- Cache policy\n\t- WAF / DDoS protection / Network Edge\n\t- Edge runtimes\n- Security\n\t- Authentication / identity\n\t- Cache policy\n\t- 3rd party js (ad industry toxic waste)\n\t- Protect against XSS, reflection\n\t- Various acronyms: CSP, CORS, SRI, CSRF\n- The \"App Platform\"\n\t- Curating frameworks and libraries\n\t- Build tools\n\t- Design system / UI primitives\n\t- Tracking and analytics\n\t- Observability / Tracing / Performance monitoring\n\t- Error handling\n\t- App store releases\n\nYou only need to consider a fraction of this list if you only have a one front end app. But when you start needing different categories of front end apps (admin tools, marketing sites / blogs, native webviews, SPA's, etc), you'll definitely encounter all of the above.\n\n## Outcomes\n\nHere's a big, dumb list of questions you might be forced to think about at some point:\n  \n- How is your Wordpress blog (_not your choice_) going to use  your design system / branding?\n- How will you track users between your CRM, your marketing sites, your blog, and your app?\n- How front end does security work across those same services?\n- Who manages CORS headers?\n- Who manages CSP?\n- How does data from your API make it to your blog pages?\n- How do you handle errors for all of your web properties? Do you care?\n\t- Same question, but for performance.\n  \nWith one app, lots of these are a single decision point. But with many apps, decisions will get re-made with divergent outcomes, leading to a patchwork of incompatibilities and inefficiencies. Even worse, a wrong turn at the highest level can represent years of technical debt.\n\nThe decisions get more important as the size and scope of your front end grows, with compounding effects on three axes:  **developer productivity**, **performance**, and **reliability**.\n\n## Developer productivity\n\n- **Build tools.** These will either slow you down immensely or fade into the background of your test and release workflows, providing you immense productivity boosts if executed correctly. Slow or unreliable builds create bottlenecks that back up entire production workflows, and navigating the trade-off between insufficient and inefficient testing will make the difference between a smooth release pipeline and a bumpy one.\n- **Preview / test environments.** Safe and effective last mile testing is an essential ingredient to de-risking fast moving front end teams. Due to the constraints of [Test Boundaries](https://www.destroyallsoftware.com/talks/boundaries), there is a limit to how accurate a unit or integration test can be without touching the \"rest\" of the system. Since the \"front end\" is typically rendered at (or near) the network edge, the \"rest of the system\" often means, quite literally, every other database and service that's upstream of your front end servers. Without a way to safely test either in production or in a production-like environment (with identical configuration), it's extremely difficult to achieve high velocity without sacrificing quality.\n- Experimentation. \n  \n## Performance\n\n- Optimal CDN usage: protocol, caching, compression\n- Observability / Tracing\n- Analytics\n  \n## Reliability\n\n- Uptime\n- Error handling\n- Observability\n- Deployments / rollbacks / canary releases\n- Testing / Quality engineering\n\n## Solutions\n\nThankfully, most of these concerns are covered quite well by the current crop of \"last mile\" hosting services like Vercel, Netlify, or Fly.io and meta frameworks like Next.js, Remix, and Sveltekit.\n\nBut the list above can't be addressed by a framework alone, even if it does come with sensible defaults. CSP is a good example of a gap in coverage from the major frameworks, where inevitably CSP needs to be handled with some level of custom code. When security moves away from being declarative and into something that defined at runtime for each route or class, your surface area for bugs and attacks gets a lot bigger.","src/content/wiki/computers/web-development/front-end/what-is-front-end-infra.md","828fb145f15fa5fa",{"html":1481,"metadata":1482},"\u003Cp>\u003Cem>Note: This was an unpublished drafted from October 2020 that I wrote as I was winding down my role at \u003Ca href=\"/cv.html#credit-karma\">Credit Karma\u003C/a>. Part of the motivation for \u003Ca href=\"../building-this-wiki\">building this wiki\u003C/a> was to get incomplete thoughts like these into a space where they can grow.\u003C/em>\u003C/p>\n\u003Cp>I was recently asked to give an overview of “Front End Infrastructure” for someone trying to navigate the industry. After giving my typically rambling-but-accurate impromptu answer, I reflected a bit about how to define this pocket of technology that I’ve been operating in professionally for the last ten years.\u003C/p>\n\u003Cp>To start, both “front end” and “infrastructure” are loaded terms.\u003C/p>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#definitions\">Definitions\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#scope\">Scope\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#outcomes\">Outcomes\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#developer-productivity\">Developer productivity\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#performance\">Performance\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#reliability\">Reliability\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#solutions\">Solutions\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"definitions\">Definitions\u003C/h2>\n\u003Cp>“\u003Cstrong>Front end\u003C/strong>” conjures up whatever comprises the UI layer of an application, be it a website or a native app. In a large organization, it is maintained by specialists who conjure up the right incantations for each platform. Platforms are important, and today there are 3 to care about: the web, iOS, and Android.\u003C/p>\n\u003Cp>“\u003Cstrong>Infrastructure\u003C/strong>” is the “thing” that runs the piece of software \u003Cem>which you don’t have to care about\u003C/em>. It is the layer of abstraction in the software stack that is manged for you. It could be a group of servers in a network, or a VM instance running on server, or a pod in a Kubernetes cluster, or serverless function behind an API gateway. Infrastructure is the boundary between what you need to know about to build an application and what you don’t. Everything responsible for running your code that you don’t need to worry about counts as infrastructure. It is prebuilt and generic; fit for myriad use cases, one if which is yours.\u003C/p>\n\u003Ch2 id=\"scope\">Scope\u003C/h2>\n\u003Cp>“\u003Cstrong>Front End Infrastructure\u003C/strong>” can cover:\u003C/p>\n\u003Cul>\n\u003Cli>The “web tier”\n\u003Cul>\n\u003Cli>Layer 7 proxy\u003C/li>\n\u003Cli>Configuring the network edge (your CDN, see below)\u003C/li>\n\u003Cli>Server side rendering (aka serving unique HTML responses)\u003C/li>\n\u003Cli>Form submissions, file uploads\u003C/li>\n\u003Cli>Cookie management\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>(Negotiating with) the “API tier”\n\u003Cul>\n\u003Cli>Getting and updating data\u003C/li>\n\u003Cli>Authentication / identity\u003C/li>\n\u003Cli>Various acronyms: CRUD, REST, GraphQL\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>The CDN\n\u003Cul>\n\u003Cli>Static file delivery\u003C/li>\n\u003Cli>Cache policy\u003C/li>\n\u003Cli>WAF / DDoS protection / Network Edge\u003C/li>\n\u003Cli>Edge runtimes\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Security\n\u003Cul>\n\u003Cli>Authentication / identity\u003C/li>\n\u003Cli>Cache policy\u003C/li>\n\u003Cli>3rd party js (ad industry toxic waste)\u003C/li>\n\u003Cli>Protect against XSS, reflection\u003C/li>\n\u003Cli>Various acronyms: CSP, CORS, SRI, CSRF\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>The “App Platform”\n\u003Cul>\n\u003Cli>Curating frameworks and libraries\u003C/li>\n\u003Cli>Build tools\u003C/li>\n\u003Cli>Design system / UI primitives\u003C/li>\n\u003Cli>Tracking and analytics\u003C/li>\n\u003Cli>Observability / Tracing / Performance monitoring\u003C/li>\n\u003Cli>Error handling\u003C/li>\n\u003Cli>App store releases\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>You only need to consider a fraction of this list if you only have a one front end app. But when you start needing different categories of front end apps (admin tools, marketing sites / blogs, native webviews, SPA’s, etc), you’ll definitely encounter all of the above.\u003C/p>\n\u003Ch2 id=\"outcomes\">Outcomes\u003C/h2>\n\u003Cp>Here’s a big, dumb list of questions you might be forced to think about at some point:\u003C/p>\n\u003Cul>\n\u003Cli>How is your Wordpress blog (\u003Cem>not your choice\u003C/em>) going to use  your design system / branding?\u003C/li>\n\u003Cli>How will you track users between your CRM, your marketing sites, your blog, and your app?\u003C/li>\n\u003Cli>How front end does security work across those same services?\u003C/li>\n\u003Cli>Who manages CORS headers?\u003C/li>\n\u003Cli>Who manages CSP?\u003C/li>\n\u003Cli>How does data from your API make it to your blog pages?\u003C/li>\n\u003Cli>How do you handle errors for all of your web properties? Do you care?\n\u003Cul>\n\u003Cli>Same question, but for performance.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>With one app, lots of these are a single decision point. But with many apps, decisions will get re-made with divergent outcomes, leading to a patchwork of incompatibilities and inefficiencies. Even worse, a wrong turn at the highest level can represent years of technical debt.\u003C/p>\n\u003Cp>The decisions get more important as the size and scope of your front end grows, with compounding effects on three axes:  \u003Cstrong>developer productivity\u003C/strong>, \u003Cstrong>performance\u003C/strong>, and \u003Cstrong>reliability\u003C/strong>.\u003C/p>\n\u003Ch2 id=\"developer-productivity\">Developer productivity\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Build tools.\u003C/strong> These will either slow you down immensely or fade into the background of your test and release workflows, providing you immense productivity boosts if executed correctly. Slow or unreliable builds create bottlenecks that back up entire production workflows, and navigating the trade-off between insufficient and inefficient testing will make the difference between a smooth release pipeline and a bumpy one.\u003C/li>\n\u003Cli>\u003Cstrong>Preview / test environments.\u003C/strong> Safe and effective last mile testing is an essential ingredient to de-risking fast moving front end teams. Due to the constraints of \u003Ca href=\"https://www.destroyallsoftware.com/talks/boundaries\">Test Boundaries\u003C/a>, there is a limit to how accurate a unit or integration test can be without touching the “rest” of the system. Since the “front end” is typically rendered at (or near) the network edge, the “rest of the system” often means, quite literally, every other database and service that’s upstream of your front end servers. Without a way to safely test either in production or in a production-like environment (with identical configuration), it’s extremely difficult to achieve high velocity without sacrificing quality.\u003C/li>\n\u003Cli>Experimentation.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"performance\">Performance\u003C/h2>\n\u003Cul>\n\u003Cli>Optimal CDN usage: protocol, caching, compression\u003C/li>\n\u003Cli>Observability / Tracing\u003C/li>\n\u003Cli>Analytics\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"reliability\">Reliability\u003C/h2>\n\u003Cul>\n\u003Cli>Uptime\u003C/li>\n\u003Cli>Error handling\u003C/li>\n\u003Cli>Observability\u003C/li>\n\u003Cli>Deployments / rollbacks / canary releases\u003C/li>\n\u003Cli>Testing / Quality engineering\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"solutions\">Solutions\u003C/h2>\n\u003Cp>Thankfully, most of these concerns are covered quite well by the current crop of “last mile” hosting services like Vercel, Netlify, or Fly.io and meta frameworks like Next.js, Remix, and Sveltekit.\u003C/p>\n\u003Cp>But the list above can’t be addressed by a framework alone, even if it does come with sensible defaults. CSP is a good example of a gap in coverage from the major frameworks, where inevitably CSP needs to be handled with some level of custom code. When security moves away from being declarative and into something that defined at runtime for each route or class, your surface area for bugs and attacks gets a lot bigger.\u003C/p>",{"headings":1483,"imagePaths":1506,"frontmatter":1507},[1484,1485,1488,1491,1494,1497,1500,1503],{"depth":27,"slug":779,"text":780},{"depth":27,"slug":1486,"text":1487},"definitions","Definitions",{"depth":27,"slug":1489,"text":1490},"scope","Scope",{"depth":27,"slug":1492,"text":1493},"outcomes","Outcomes",{"depth":27,"slug":1495,"text":1496},"developer-productivity","Developer productivity",{"depth":27,"slug":1498,"text":1499},"performance","Performance",{"depth":27,"slug":1501,"text":1502},"reliability","Reliability",{"depth":27,"slug":1504,"text":1505},"solutions","Solutions",[],{"title":1472,"description":1473,"createdAt":1508,"updatedAt":1509,"categories":1510,"type":1028},["Date","2020-10-10T00:00:00.000Z"],["Date","2023-07-31T00:00:00.000Z"],[1027,1108,651],"computers/web-development/front-end/zen-of-tailwind",{"id":1511,"data":1513,"body":1519,"filePath":1520,"digest":1521,"rendered":1522},{"title":1514,"description":1515,"createdAt":1516,"updatedAt":1517,"categories":1518,"type":1389},"The Zen of Tailwind","How to not lose your mind with all the strings",["Date","2023-08-15T00:00:00.000Z"],["Date","2023-08-27T00:00:00.000Z"],[1027,1108,651],"I've been a happy Tailwind\u003Csup>[1](#none-of-this-is-new)\u003C/sup> user for a while now, and have been using the underlying techniques since 2016.\n\nThe first thing I discovered when rolling out a similar system was \"some people really don't like this.\" It's not for everyone!\n\nLearning CSS is hard enough, so learning a layer of shortcoded indirection on top of CSS steepens an already daunting learning curve. For more seasoned CSS aficionados, the translation between what you know and what you need to write still takes some time to get a hang of. You will be searching the docs frequently for \"things you know how to do.\" \n\nFortunately, the payoff is worth it. If you can put up with the downsides, there's a certain Zen that can be unlocked.\n\n- Composing styles and markup together shortens the feedback loop for anything you're building. \n- Faster iteration and fewer decisions mean more internal consistency and fewer chances for gross deviation. Duplicating styles between components has zero carrying cost.\n- CSS bundle sizes are fixed, and do not grow with the size of your application; more variation does not yield more CSS.\n\nBut not everyone is convinced (and that's OK, do your thing.)\n\n## Table of Contents\n\n## Skip the hard parts\n\nTailwind lets you skip the hardest parts of authoring CSS:\n1. Naming things\n2. Picking consistent values\n\nWhy are these hard problems?\n\n Naming things is hard because creating good abstractions is hard.\n\n- You must anticipate the uses of an element, projecting yourself into all possible futures to look beyond the pale of the screen under construction, and then pick a good name.\n\t- You need knowledge of the entire system. This gets out of hand very quickly. \n- The stakes change over time. Prototype the may never see the light of day? Naming less important. Feature in a busy app or shared UI library? Maybe take care to pick a good name.\n- Experience builds intuition. Like a lot of programming, exposure to lots of different design patterns and well-named abstractions makes life easier. \n\t- There are no *a priori* good names. Names are only meaningful in the context of the application. \n\t- [Entire methodologies of styling](https://getbem.com/introduction/) dedicated to getting names right exist\n\nPicking consistent values is hard because [No Design System is Complete](#no-design-system-is-complete)\n- If you take care to pick good design tokens and then make sure designers and developers share them, picking consistent values is easy.\n\nTailwind eschews the naming problem all together, replacing the creation of good class names with rote memorization of Tailwind's classes.\n\nBy providing sensible defaults for CSS values and way to override them, Tailwind shortcuts the difficulty of picking consistent values.\n\nDevelopers have divergent goals\n1. Creating re-usable abstractions\n2. Building user interfaces\n\n### No Design System is Complete\n\nDesign systems themselves are indefinite and never comprehensive: if every scenario were already planned out, the application would already be complete.\n\nHaving a \"Design System\" is the act of bringing rigor and self-similarity to your design process by creating shared abstractions.\n\nA UI Library is only ever a reference implementation of a Design System. Even if a UI Library is a complete expression of the design system, it will still either evolve over time or become outdated before falling out of use.\n\n## Long Class Names\n\n\"But there are long strings of CSS classes everywhere now!\"\n\nTailwind doesn't prevent you from naming things! You don't have to carry around long strings everywhere. That said, the long lists of classes are rarely a problem.\n\n## The Maintenance Race\n\n[See also](https://worksinprogress.co/issue/the-maintenance-race)\n\n\"Have you ever tried to refactor CSS?\"\n\nMuch has been written about the validity of CSS as a programming language. It is. What it's not, is a great programming language. A bit of a detour here, but refactoring JavaScript used to be *hard*. REALLY hard. Mind numbingly, punch-the-screen hard. Then it got better. Specifically, TypeScript came along and made it possible to codify the data passed between functions, making bigger codebases easier to refactor.\n\nI have not had the same epiphany with refactoring CSS. It is still hard. Still, it is easier than it was a few years ago. The [New CSS](./new-css) has made life much easier (variables, @layer) with more  enhancements (nesting) being spec'ed out.\n\nWhy is CSS so hard to refactor?\n\n- Lack of isolation; still common for many pages to share the same stylesheet\n\t- Fixed by @layer\n- Disassociation with its markup; refactoring is cross-cutting\n- The \"I'll just add this to the bottom of the file\" problem, hard to gauge impact of changes\n\t- modularization can help with this, but has drawbacks. Typically, modular css is automatically scoped to it's parent element, which makes sharing pri\n\n## What about arbitrary values?\n\nArbitrary values were introduced when Tailwind moved to jit compilation. Instead of declaring custom values ahead of time in tailwind.config.js, you can now use any value at runtime using the `[value]` syntax. \n\nBefore Tailwind added arbitrary values, you needed to fall back to css or inline styling for custom properties. In the best case, you take the time to write a well-named non-atomic utility class that is hopefully re-used and easy to discover. In the worst case, you add yet another class to a long and hurried CSS file full of similar one-off classes with mysterious and unfamiliar names. Either way, the \"file of one-off's\" approach is easy to manage until it exceeds a few hundred lines, but beyond that, good luck.\n\nAfter Tailwind added arbitrary values, declaring a custom color stop or width or whatever was easy. In the best case, you do this sparingly and the few cases that do need truly custom values are self-documenting and easy to find via global search. In the worst case, you overuse arbitrary values. Your code is hard to read and it's difficult to implement design changes to existing components. The second case is harder to imagine because it cuts so hard against the grain of framework, but I'm sure it's out there.\n\nIn all things, the middle way is the best and safest route. Practicing both of the best case options, writing well named utilities and custom CSS and using the occasional arbitrary value, will net the best outcome: smaller CSS payload and better developer experience. Arbitrary values were added because they increase the expressiveness of Tailwind at little cost if deployed sensibly.\n\nWatch for over-use of arbitrary values in code reviews, and encourage extending Tailwind config or writing custom CSS instead of abusing the square brackets. Likewise, adding lots of custom CSS to a Tailwind project should draw additional scrutiny in code review. \n## Criticism\n\nTailwind gets a healthy amount of criticism. I'm not here to defend the finer points of the many arguments presented against it. Writing HTML and CSS is a complex discipline worthy of thoughtful criticism.\n\nThe differences between these techniques is overall not all that huge, and building websites is not a zero sum game. Remember that the tools you choose rarely matter very much in hindsight.\n\nhttps://pdx.su/blog/2023-07-26-tailwind-and-the-death-of-craftsmanship/ \nhttps://johanronsse.be/2020/07/08/why-youll-probably-regret-using-tailwind/\nhttps://thoughtbot.com/blog/tailwind-and-the-femininity-of-css\n\n## None of this is new\n\nhttps://css-tricks.com/lets-define-exactly-atomic-css/\n\n\u003Csup>1\u003C/sup> The technique that Tailwind uses is more properly called \"Atomic CSS\" or sometimes \"Utility classes.\" This is not Tailwind's invention nor is it a new technique. It has become fashionable over the past several years, popularized by Tailwind. I'll use \"Tailwind\" throughout the document in a way that your might say \"Kleenex\" for facial tissue. Features and statements that apply specifically to Tailwind are called out as such.","src/content/wiki/computers/web-development/front-end/zen-of-tailwind.md","de3a9d2ea4e44435",{"html":1523,"metadata":1524},"\u003Cp>I’ve been a happy Tailwind\u003Csup>\u003Ca href=\"#none-of-this-is-new\">1\u003C/a>\u003C/sup> user for a while now, and have been using the underlying techniques since 2016.\u003C/p>\n\u003Cp>The first thing I discovered when rolling out a similar system was “some people really don’t like this.” It’s not for everyone!\u003C/p>\n\u003Cp>Learning CSS is hard enough, so learning a layer of shortcoded indirection on top of CSS steepens an already daunting learning curve. For more seasoned CSS aficionados, the translation between what you know and what you need to write still takes some time to get a hang of. You will be searching the docs frequently for “things you know how to do.”\u003C/p>\n\u003Cp>Fortunately, the payoff is worth it. If you can put up with the downsides, there’s a certain Zen that can be unlocked.\u003C/p>\n\u003Cul>\n\u003Cli>Composing styles and markup together shortens the feedback loop for anything you’re building.\u003C/li>\n\u003Cli>Faster iteration and fewer decisions mean more internal consistency and fewer chances for gross deviation. Duplicating styles between components has zero carrying cost.\u003C/li>\n\u003Cli>CSS bundle sizes are fixed, and do not grow with the size of your application; more variation does not yield more CSS.\u003C/li>\n\u003C/ul>\n\u003Cp>But not everyone is convinced (and that’s OK, do your thing.)\u003C/p>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#skip-the-hard-parts\">Skip the hard parts\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#no-design-system-is-complete\">No Design System is Complete\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#long-class-names\">Long Class Names\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#the-maintenance-race\">The Maintenance Race\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#what-about-arbitrary-values\">What about arbitrary values?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#criticism\">Criticism\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#none-of-this-is-new\">None of this is new\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"skip-the-hard-parts\">Skip the hard parts\u003C/h2>\n\u003Cp>Tailwind lets you skip the hardest parts of authoring CSS:\u003C/p>\n\u003Col>\n\u003Cli>Naming things\u003C/li>\n\u003Cli>Picking consistent values\u003C/li>\n\u003C/ol>\n\u003Cp>Why are these hard problems?\u003C/p>\n\u003Cp>Naming things is hard because creating good abstractions is hard.\u003C/p>\n\u003Cul>\n\u003Cli>You must anticipate the uses of an element, projecting yourself into all possible futures to look beyond the pale of the screen under construction, and then pick a good name.\n\u003Cul>\n\u003Cli>You need knowledge of the entire system. This gets out of hand very quickly.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>The stakes change over time. Prototype the may never see the light of day? Naming less important. Feature in a busy app or shared UI library? Maybe take care to pick a good name.\u003C/li>\n\u003Cli>Experience builds intuition. Like a lot of programming, exposure to lots of different design patterns and well-named abstractions makes life easier.\n\u003Cul>\n\u003Cli>There are no \u003Cem>a priori\u003C/em> good names. Names are only meaningful in the context of the application.\u003C/li>\n\u003Cli>\u003Ca href=\"https://getbem.com/introduction/\">Entire methodologies of styling\u003C/a> dedicated to getting names right exist\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>Picking consistent values is hard because \u003Ca href=\"#no-design-system-is-complete\">No Design System is Complete\u003C/a>\u003C/p>\n\u003Cul>\n\u003Cli>If you take care to pick good design tokens and then make sure designers and developers share them, picking consistent values is easy.\u003C/li>\n\u003C/ul>\n\u003Cp>Tailwind eschews the naming problem all together, replacing the creation of good class names with rote memorization of Tailwind’s classes.\u003C/p>\n\u003Cp>By providing sensible defaults for CSS values and way to override them, Tailwind shortcuts the difficulty of picking consistent values.\u003C/p>\n\u003Cp>Developers have divergent goals\u003C/p>\n\u003Col>\n\u003Cli>Creating re-usable abstractions\u003C/li>\n\u003Cli>Building user interfaces\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"no-design-system-is-complete\">No Design System is Complete\u003C/h3>\n\u003Cp>Design systems themselves are indefinite and never comprehensive: if every scenario were already planned out, the application would already be complete.\u003C/p>\n\u003Cp>Having a “Design System” is the act of bringing rigor and self-similarity to your design process by creating shared abstractions.\u003C/p>\n\u003Cp>A UI Library is only ever a reference implementation of a Design System. Even if a UI Library is a complete expression of the design system, it will still either evolve over time or become outdated before falling out of use.\u003C/p>\n\u003Ch2 id=\"long-class-names\">Long Class Names\u003C/h2>\n\u003Cp>“But there are long strings of CSS classes everywhere now!”\u003C/p>\n\u003Cp>Tailwind doesn’t prevent you from naming things! You don’t have to carry around long strings everywhere. That said, the long lists of classes are rarely a problem.\u003C/p>\n\u003Ch2 id=\"the-maintenance-race\">The Maintenance Race\u003C/h2>\n\u003Cp>\u003Ca href=\"https://worksinprogress.co/issue/the-maintenance-race\">See also\u003C/a>\u003C/p>\n\u003Cp>“Have you ever tried to refactor CSS?”\u003C/p>\n\u003Cp>Much has been written about the validity of CSS as a programming language. It is. What it’s not, is a great programming language. A bit of a detour here, but refactoring JavaScript used to be \u003Cem>hard\u003C/em>. REALLY hard. Mind numbingly, punch-the-screen hard. Then it got better. Specifically, TypeScript came along and made it possible to codify the data passed between functions, making bigger codebases easier to refactor.\u003C/p>\n\u003Cp>I have not had the same epiphany with refactoring CSS. It is still hard. Still, it is easier than it was a few years ago. The \u003Ca href=\"./new-css\">New CSS\u003C/a> has made life much easier (variables, @layer) with more  enhancements (nesting) being spec’ed out.\u003C/p>\n\u003Cp>Why is CSS so hard to refactor?\u003C/p>\n\u003Cul>\n\u003Cli>Lack of isolation; still common for many pages to share the same stylesheet\n\u003Cul>\n\u003Cli>Fixed by @layer\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Disassociation with its markup; refactoring is cross-cutting\u003C/li>\n\u003Cli>The “I’ll just add this to the bottom of the file” problem, hard to gauge impact of changes\n\u003Cul>\n\u003Cli>modularization can help with this, but has drawbacks. Typically, modular css is automatically scoped to it’s parent element, which makes sharing pri\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"what-about-arbitrary-values\">What about arbitrary values?\u003C/h2>\n\u003Cp>Arbitrary values were introduced when Tailwind moved to jit compilation. Instead of declaring custom values ahead of time in tailwind.config.js, you can now use any value at runtime using the \u003Ccode>[value]\u003C/code> syntax.\u003C/p>\n\u003Cp>Before Tailwind added arbitrary values, you needed to fall back to css or inline styling for custom properties. In the best case, you take the time to write a well-named non-atomic utility class that is hopefully re-used and easy to discover. In the worst case, you add yet another class to a long and hurried CSS file full of similar one-off classes with mysterious and unfamiliar names. Either way, the “file of one-off’s” approach is easy to manage until it exceeds a few hundred lines, but beyond that, good luck.\u003C/p>\n\u003Cp>After Tailwind added arbitrary values, declaring a custom color stop or width or whatever was easy. In the best case, you do this sparingly and the few cases that do need truly custom values are self-documenting and easy to find via global search. In the worst case, you overuse arbitrary values. Your code is hard to read and it’s difficult to implement design changes to existing components. The second case is harder to imagine because it cuts so hard against the grain of framework, but I’m sure it’s out there.\u003C/p>\n\u003Cp>In all things, the middle way is the best and safest route. Practicing both of the best case options, writing well named utilities and custom CSS and using the occasional arbitrary value, will net the best outcome: smaller CSS payload and better developer experience. Arbitrary values were added because they increase the expressiveness of Tailwind at little cost if deployed sensibly.\u003C/p>\n\u003Cp>Watch for over-use of arbitrary values in code reviews, and encourage extending Tailwind config or writing custom CSS instead of abusing the square brackets. Likewise, adding lots of custom CSS to a Tailwind project should draw additional scrutiny in code review.\u003C/p>\n\u003Ch2 id=\"criticism\">Criticism\u003C/h2>\n\u003Cp>Tailwind gets a healthy amount of criticism. I’m not here to defend the finer points of the many arguments presented against it. Writing HTML and CSS is a complex discipline worthy of thoughtful criticism.\u003C/p>\n\u003Cp>The differences between these techniques is overall not all that huge, and building websites is not a zero sum game. Remember that the tools you choose rarely matter very much in hindsight.\u003C/p>\n\u003Cp>\u003Ca href=\"https://pdx.su/blog/2023-07-26-tailwind-and-the-death-of-craftsmanship/\">https://pdx.su/blog/2023-07-26-tailwind-and-the-death-of-craftsmanship/\u003C/a>\n\u003Ca href=\"https://johanronsse.be/2020/07/08/why-youll-probably-regret-using-tailwind/\">https://johanronsse.be/2020/07/08/why-youll-probably-regret-using-tailwind/\u003C/a>\n\u003Ca href=\"https://thoughtbot.com/blog/tailwind-and-the-femininity-of-css\">https://thoughtbot.com/blog/tailwind-and-the-femininity-of-css\u003C/a>\u003C/p>\n\u003Ch2 id=\"none-of-this-is-new\">None of this is new\u003C/h2>\n\u003Cp>\u003Ca href=\"https://css-tricks.com/lets-define-exactly-atomic-css/\">https://css-tricks.com/lets-define-exactly-atomic-css/\u003C/a>\u003C/p>\n\u003Cp>\u003Csup>1\u003C/sup> The technique that Tailwind uses is more properly called “Atomic CSS” or sometimes “Utility classes.” This is not Tailwind’s invention nor is it a new technique. It has become fashionable over the past several years, popularized by Tailwind. I’ll use “Tailwind” throughout the document in a way that your might say “Kleenex” for facial tissue. Features and statements that apply specifically to Tailwind are called out as such.\u003C/p>",{"headings":1525,"imagePaths":1548,"frontmatter":1549},[1526,1527,1530,1533,1536,1539,1542,1545],{"depth":27,"slug":779,"text":780},{"depth":27,"slug":1528,"text":1529},"skip-the-hard-parts","Skip the hard parts",{"depth":79,"slug":1531,"text":1532},"no-design-system-is-complete","No Design System is Complete",{"depth":27,"slug":1534,"text":1535},"long-class-names","Long Class Names",{"depth":27,"slug":1537,"text":1538},"the-maintenance-race","The Maintenance Race",{"depth":27,"slug":1540,"text":1541},"what-about-arbitrary-values","What about arbitrary values?",{"depth":27,"slug":1543,"text":1544},"criticism","Criticism",{"depth":27,"slug":1546,"text":1547},"none-of-this-is-new","None of this is new",[],{"title":1514,"description":1515,"createdAt":1550,"updatedAt":1551,"categories":1552,"type":1389},["Date","2023-08-15T00:00:00.000Z"],["Date","2023-08-27T00:00:00.000Z"],[1027,1108,651],"computers/web-development/front-end/new-css",{"id":1553,"data":1555,"body":1561,"filePath":1562,"digest":1563,"rendered":1564},{"title":1556,"description":1557,"createdAt":1558,"updatedAt":1559,"categories":1560,"type":1073},"New CSS","CSS, the good parts",["Date","2023-07-18T00:00:00.000Z"],["Date","2024-07-24T00:00:00.000Z"],[1027,1108,651],"The death of Internet Explorer in 2022 finally opened the doors to a new era of web development.  The Year of the Evergreen browser, where we still have a lowest common denominator (hint: it's Safari) but it's a lot less-low than it used to be. This is a list where I'll collect list notes to remember what I'm missing using Tailwind.\n\nConsequently, I've been writing more and more custom CSS without Tailwind. I'm still a big fan of Tailwind, but the web platform keeps getting better and better.\n\n## Table of Contents\n\n## New New\n\n- `color-scheme` so this is kinda neat, a built-in way to do light/dark theming, but there doesn't seem to be a clear way to allow for user overrides. [mdn](https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme)\n\n- `transition-behavior: allow-discrete` h/t to Shop Talk episode ??? for pointing this one out. It is FINALLY possible to animate to an automatic / default values, and specifically `display: none`. [mdn](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior)\n\n- `nesting` came from out of nowhere to be completely usable if you only care about targeting modern browsers.\n\t- After years of using nesting in Sass and Less but then drifting away when authoring formats moved away from all-in-one preprocessors, it feels like returning to a familiar place.\n\t- Nesting makes so sense in practice that it's hard to imagine not using it frequently from now on.\n\n```css\n.nesting {\n\t& > .child {\n\t\t/* styles */\n\t}\n}\n```\n\n- container queries make things responsive based on the parent container's size instead of the viewport.\n\t- 2023-09-05: Finally got around to using container queries on a project, they rock. Of course, I used the [Tailwind](./zen-of-tailwind) flavor in the form a plugin that adds the `@container` class, then a range of modifiers, `@xs:` through `@7xl:`, and the ability to declare your own custom stops (`@[21.5rem]:`).  Styling based on the parent container size is honestly more intuitive, and obviously more expressive, than using the browser viewport.\n\n```css\n.post {\n\tcontainer-type: inline-size;\n}\n\n@container (min-width: 640px) {\n\theader h1 {\n\t\tfont-size: 1rem;\n\t}\n}\n```\n\n- `:has()`\n\n- `dvh` units. Because phones have browser chrome that changes size with scroll position, viewport height units are now \"dynamic\".\n- spaces over commas in CSS colors. `rgb(255 255 255)` instead of `rgb(255, 255, 255)`. also `rgba` and pals are deprecated\n- layers. I hadn't encountered these until [shadcn](https://ui.shadcn.com/) pulled added them to a stylesheet. Definitely another good abstraction to have in the platform, paving a world where interoperability between off-the-shelf web things could be much, much easier than it was in the past.\n- there's a [big list of functions](https://twitter.com/argyleink/status/1684579433821372418?s=20), a bunch of which I've never used\n\t- `env()`\n\t- `clamp(min, preferred, max)` - make a value change dynamically with container size\n\t- `attr()` ‡\n\t- `invert()`\n\t- Grid sizing\n\t\t- `fit-content()` `repeat()`\n\t- Color stuff:\n\t\t- `color-mix()`\n\t\t- `rgb()` ‡ `hsl()` ‡ `oklch()`\n\t- Clip Path\n\t\t- `circle()` `polygon()` `path()`\n\t- Maths\n\t\t- `sin()` `cos()` `tan()` `pow()` `hypot()` `log()`\n\t\t- `min()` `max()` `round()`\n\t\t- `calc()` ‡\n\t- Easing\n\t\t- `steps()` `linear()` `cubic-bezier()`\n\n‡ These have been around for long enough that I no longer consider them new, but still make life much, much better so I'll include them here anyway.\n\n## Old New\n\n- `flex` is no longer new and my default mode of thinking for styling. I used to practitioner of the \"everything can be done with divs and floats\" school, but now I'm all in on train \"everything can be done with divs and flex.\"\n\t- I have been using flex for *lots* of common layout patterns for years now. Flex fits well with utility classes and Tailwind, with an API that composes nicely. My codebases are lousy with `flex items-center gap-2`  and `flex items-center justify-between`.\n- `grid` is also no longer new. It solves a lot of layouts but I use it infrequently, in part due to its flawed implementation in Tailwind. On non-Tailwind projects, I've found grid to feel much more intuitive and useful.\n\t- A way to do [masonry](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Masonry_Layout) layouts have been proposed but only available in Safari technical preview. This trend was popular 12-13 years ago when I was consulting, and it always needed JavaScript to calculate the layout. Even with open source projects to solve this for you, it was typically a heavy-weight process to read the size of every dom node in the grid to do the math to position each element. Despite being a design edge case, this would be great to have natively.\n\t- [Subgrid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid) is also very cool. I made a little experiement page with it over here: [/experiments/subgrid](/experiments/subgrid)\n- variables. I know, I know, these aren't exactly new either, but the point is that you can finally use them everywhere without hesitation.\n\t- Variable are perfect for with responsive design, by using media queries to set variables to override styles without having to repeat selectors.","src/content/wiki/computers/web-development/front-end/new-css.md","b40f036a1dbc5458",{"html":1565,"metadata":1566},"\u003Cp>The death of Internet Explorer in 2022 finally opened the doors to a new era of web development.  The Year of the Evergreen browser, where we still have a lowest common denominator (hint: it’s Safari) but it’s a lot less-low than it used to be. This is a list where I’ll collect list notes to remember what I’m missing using Tailwind.\u003C/p>\n\u003Cp>Consequently, I’ve been writing more and more custom CSS without Tailwind. I’m still a big fan of Tailwind, but the web platform keeps getting better and better.\u003C/p>\n\u003Ch2 id=\"table-of-contents\">Table of Contents\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#new-new\">New New\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#old-new\">Old New\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"new-new\">New New\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ccode>color-scheme\u003C/code> so this is kinda neat, a built-in way to do light/dark theming, but there doesn’t seem to be a clear way to allow for user overrides. \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\">mdn\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ccode>transition-behavior: allow-discrete\u003C/code> h/t to Shop Talk episode ??? for pointing this one out. It is FINALLY possible to animate to an automatic / default values, and specifically \u003Ccode>display: none\u003C/code>. \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior\">mdn\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ccode>nesting\u003C/code> came from out of nowhere to be completely usable if you only care about targeting modern browsers.\u003C/p>\n\u003Cul>\n\u003Cli>After years of using nesting in Sass and Less but then drifting away when authoring formats moved away from all-in-one preprocessors, it feels like returning to a familiar place.\u003C/li>\n\u003Cli>Nesting makes so sense in practice that it’s hard to imagine not using it frequently from now on.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">.nesting\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t&#x26; > .child {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\">\t\t/* styles */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cul>\n\u003Cli>container queries make things responsive based on the parent container’s size instead of the viewport.\n\u003Cul>\n\u003Cli>2023-09-05: Finally got around to using container queries on a project, they rock. Of course, I used the \u003Ca href=\"./zen-of-tailwind\">Tailwind\u003C/a> flavor in the form a plugin that adds the \u003Ccode>@container\u003C/code> class, then a range of modifiers, \u003Ccode>@xs:\u003C/code> through \u003Ccode>@7xl:\u003C/code>, and the ability to declare your own custom stops (\u003Ccode>@[21.5rem]:\u003C/code>).  Styling based on the parent container size is honestly more intuitive, and obviously more expressive, than using the browser viewport.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#D19A66\">.post\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\tcontainer-type: inline-size;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">@container\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> (min-width: 640px) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">\theader\u003C/span>\u003Cspan style=\"color:#E06C75\"> h1\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t\tfont-size: \u003C/span>\u003Cspan style=\"color:#D19A66\">1\u003C/span>\u003Cspan style=\"color:#E06C75\">rem\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">\t}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ccode>:has()\u003C/code>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ccode>dvh\u003C/code> units. Because phones have browser chrome that changes size with scroll position, viewport height units are now “dynamic”.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>spaces over commas in CSS colors. \u003Ccode>rgb(255 255 255)\u003C/code> instead of \u003Ccode>rgb(255, 255, 255)\u003C/code>. also \u003Ccode>rgba\u003C/code> and pals are deprecated\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>layers. I hadn’t encountered these until \u003Ca href=\"https://ui.shadcn.com/\">shadcn\u003C/a> pulled added them to a stylesheet. Definitely another good abstraction to have in the platform, paving a world where interoperability between off-the-shelf web things could be much, much easier than it was in the past.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>there’s a \u003Ca href=\"https://twitter.com/argyleink/status/1684579433821372418?s=20\">big list of functions\u003C/a>, a bunch of which I’ve never used\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>env()\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>clamp(min, preferred, max)\u003C/code> - make a value change dynamically with container size\u003C/li>\n\u003Cli>\u003Ccode>attr()\u003C/code> ‡\u003C/li>\n\u003Cli>\u003Ccode>invert()\u003C/code>\u003C/li>\n\u003Cli>Grid sizing\n\u003Cul>\n\u003Cli>\u003Ccode>fit-content()\u003C/code> \u003Ccode>repeat()\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Color stuff:\n\u003Cul>\n\u003Cli>\u003Ccode>color-mix()\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>rgb()\u003C/code> ‡ \u003Ccode>hsl()\u003C/code> ‡ \u003Ccode>oklch()\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Clip Path\n\u003Cul>\n\u003Cli>\u003Ccode>circle()\u003C/code> \u003Ccode>polygon()\u003C/code> \u003Ccode>path()\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Maths\n\u003Cul>\n\u003Cli>\u003Ccode>sin()\u003C/code> \u003Ccode>cos()\u003C/code> \u003Ccode>tan()\u003C/code> \u003Ccode>pow()\u003C/code> \u003Ccode>hypot()\u003C/code> \u003Ccode>log()\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>min()\u003C/code> \u003Ccode>max()\u003C/code> \u003Ccode>round()\u003C/code>\u003C/li>\n\u003Cli>\u003Ccode>calc()\u003C/code> ‡\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Easing\n\u003Cul>\n\u003Cli>\u003Ccode>steps()\u003C/code> \u003Ccode>linear()\u003C/code> \u003Ccode>cubic-bezier()\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Cp>‡ These have been around for long enough that I no longer consider them new, but still make life much, much better so I’ll include them here anyway.\u003C/p>\n\u003Ch2 id=\"old-new\">Old New\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ccode>flex\u003C/code> is no longer new and my default mode of thinking for styling. I used to practitioner of the “everything can be done with divs and floats” school, but now I’m all in on train “everything can be done with divs and flex.”\n\u003Cul>\n\u003Cli>I have been using flex for \u003Cem>lots\u003C/em> of common layout patterns for years now. Flex fits well with utility classes and Tailwind, with an API that composes nicely. My codebases are lousy with \u003Ccode>flex items-center gap-2\u003C/code>  and \u003Ccode>flex items-center justify-between\u003C/code>.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ccode>grid\u003C/code> is also no longer new. It solves a lot of layouts but I use it infrequently, in part due to its flawed implementation in Tailwind. On non-Tailwind projects, I’ve found grid to feel much more intuitive and useful.\n\u003Cul>\n\u003Cli>A way to do \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Masonry_Layout\">masonry\u003C/a> layouts have been proposed but only available in Safari technical preview. This trend was popular 12-13 years ago when I was consulting, and it always needed JavaScript to calculate the layout. Even with open source projects to solve this for you, it was typically a heavy-weight process to read the size of every dom node in the grid to do the math to position each element. Despite being a design edge case, this would be great to have natively.\u003C/li>\n\u003Cli>\u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid\">Subgrid\u003C/a> is also very cool. I made a little experiement page with it over here: \u003Ca href=\"/experiments/subgrid\">/experiments/subgrid\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>variables. I know, I know, these aren’t exactly new either, but the point is that you can finally use them everywhere without hesitation.\n\u003Cul>\n\u003Cli>Variable are perfect for with responsive design, by using media queries to set variables to override styles without having to repeat selectors.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>",{"headings":1567,"imagePaths":1575,"frontmatter":1576},[1568,1569,1572],{"depth":27,"slug":779,"text":780},{"depth":27,"slug":1570,"text":1571},"new-new","New New",{"depth":27,"slug":1573,"text":1574},"old-new","Old New",[],{"title":1556,"description":1557,"createdAt":1577,"updatedAt":1578,"type":1073,"categories":1579},["Date","2023-07-18T00:00:00.000Z"],["Date","2024-07-24T00:00:00.000Z"],[1027,1108,651],"computers/web-development/python/aws-lambda-python-makefile",{"id":1580,"data":1582,"body":1588,"filePath":1589,"digest":1590,"rendered":1591},{"title":1583,"description":1584,"createdAt":1585,"categories":1586,"type":1028},"AWS Lambda Python Makefile","My quick-and-dirty recipe for deploying a containerized Python app to AWS Lambda",["Date","2023-12-10T00:00:00.000Z"],[1027,1108,1587],"Python","## Background\n\nAWS Lambda has been around since 2015 and I've been using it in some form or fashion since then. AWS is an infamously complex set of (mostly) backend building blocks.\n\nOver the years, I’ve tried many different open source projects to deploy lambdas, like [Serverless](https://www.serverless.com/), [Architect](https://arc.codes/docs/en/get-started/quickstart), and most recently [AWS Sam](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html).\n\nThese tools are great and all but I use them infrequently enough so that every time I come back I feel like I have to either re-learn a tool I’ve used before or figure out a new way to do it. Last time out was AWS Sam, which again is great, but I have no memory for yaml configuration. \n\nThis week when I needed to deploy some Python code for running a custom embeddings search, I decided to go with the vanilla AWS docs and see where it got me. The results are two files, which now that I’ve done it, are pretty easy (for me) to understand.\n\nScroll to the end for the [full source](#source).\n\n## 1. Makefile\n\nThe Makefile does the bulk of the scripting. Bash scripts pile up quickly and require boilerplate to do even the most basic command parsing or sequence control. So, makefiles.\n\nI put this together by scouring [my bash history](https://atuin.sh/) for the [aws-cli](https://aws.amazon.com/cli/) commands entered by following the [documentation for deploying a python container image](https://docs.aws.amazon.com/lambda/latest/dg/python-image.html).\n\nThere are a few steps:\n\n1. Create the ECR registry\n\t- authenticate the docker-cli so it canpublish\n2. Build the docker container for lambda\n3. Create the lambda function\n4. Update the lambda code with the latest container image\n\nThe makefile has a few variables for configuration and is able to string together sequences of commands. .I think this is much easier than using bash scripts, even if Makefiles are somewhat archaic. LLMs help get over the syntax hump with ease.\n\n## 2. Dockerfile\n\nWhy Docker?\n\nThe reason: Python dependencies.\n\nOf course, you can simply upload a .zip archive and skip a bunch of steps, but only if your application and its dependencies are less that 50mb zipped. Popular python libraries did not receive this memo.\n\nThe code I needed to deploy trains a simple model and runs an embeddings search. Like most ml code, it uses pandas, numpy, and scikit-learn, easily smashing through the 50mb cutoff for a one-shot upload.\n\nFortunately, the sample dockerfile provided by AWS is short and clear.\n\nThe only gotcha is remembering to build the image with `--platform linux/amd64` to build dependencies correctly for lambda.\n\n## Conclusion\n\nYeah so I really understand is why platforms like Vercel exist and are widely used.\n\nThere is a lot of yak-shaving here.\n\nMy ideal developer experience is “here is my code” — having to create a container registry, build a container, publish it to the registry, and _then_ deploy your code is a painful developer journey.\n\nI’m writing this down so that the next time I need to do this, I can copy these two files and update the post for whatever has changed in the meantime.\n\n## Source\n\nMakefile\n```makefile\nCONTAINER_NAME=\nFN_NAME=\nROLE_ARN=\nAWS_ID=\nREGION=us-west-2\n\nall: build push\n\n# build the image\nbuild:\n\tdocker build --platform linux/amd64 -t $(CONTAINER_NAME):prod .\n\n# push the image to the ECR registry\npush:\n\tdocker tag $(CONTAINER_NAME):prod $(AWS_ID).dkr.ecr.$(REGION).amazonaws.com/$(CONTAINER_NAME):latest\n\tdocker push $(AWS_ID).dkr.ecr.$(REGION).amazonaws.com/$(CONTAINER_NAME):latest\n\n# update the lambda function\nupdate:\n\taws lambda update-function-code \\\n\t  --function-name $(FN_NAME) \\\n\t  --image-uri $(AWS_ID).dkr.ecr.$(REGION).amazonaws.com/$(CONTAINER_NAME):latest \\\n\t\t--output yaml-stream\n\n# create the lambda function\ncreate:\n\taws lambda create-function \\\n\t\t--function-name $(FN_NAME) \\\n\t\t--package-type Image \\\n\t\t--code ImageUri=$(AWS_ID).dkr.ecr.$(REGION).amazonaws.com/$(CONTAINER_NAME):latest \\\n\t\t--role $(ROLE_ARN)\n\n# create the ECR registry\nregistry:\n\taws ecr get-login-password --region $(REGION) | docker login --username AWS --password-stdin $(AWS_ID).dkr.ecr.$(REGION).amazonaws.com\n\taws ecr create-repository \\\n\t\t--repository-name reticle_similar_profiles \\\n\t\t--region $(REGION) \\\n\t\t--image-scanning-configuration scanOnPush=true \\\n\t\t--image-tag-mutability MUTABLE\t\n\n.PHONY: all build push update create registry\n```\n\nDockerfile\n```dockerfile\nFROM public.ecr.aws/lambda/python:3.11\n\n# Copy requirements.txt\nCOPY requirements.txt ${LAMBDA_TASK_ROOT}\n\n# Install the specified packages\nRUN pip install -r requirements.txt\n\n# Copy function code\nCOPY lambda_function.py ${LAMBDA_TASK_ROOT}\nCOPY data.csv ${LAMBDA_TASK_ROOT}\n\n# Set the CMD to your handler (could also be done as a parameter override outside of the Dockerfile)\nCMD [ \"lambda_function.handler\" ]\n```","src/content/wiki/computers/web-development/python/aws-lambda-python-makefile.md","d572b4f68792603d",{"html":1592,"metadata":1593},"\u003Ch2 id=\"background\">Background\u003C/h2>\n\u003Cp>AWS Lambda has been around since 2015 and I’ve been using it in some form or fashion since then. AWS is an infamously complex set of (mostly) backend building blocks.\u003C/p>\n\u003Cp>Over the years, I’ve tried many different open source projects to deploy lambdas, like \u003Ca href=\"https://www.serverless.com/\">Serverless\u003C/a>, \u003Ca href=\"https://arc.codes/docs/en/get-started/quickstart\">Architect\u003C/a>, and most recently \u003Ca href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html\">AWS Sam\u003C/a>.\u003C/p>\n\u003Cp>These tools are great and all but I use them infrequently enough so that every time I come back I feel like I have to either re-learn a tool I’ve used before or figure out a new way to do it. Last time out was AWS Sam, which again is great, but I have no memory for yaml configuration.\u003C/p>\n\u003Cp>This week when I needed to deploy some Python code for running a custom embeddings search, I decided to go with the vanilla AWS docs and see where it got me. The results are two files, which now that I’ve done it, are pretty easy (for me) to understand.\u003C/p>\n\u003Cp>Scroll to the end for the \u003Ca href=\"#source\">full source\u003C/a>.\u003C/p>\n\u003Ch2 id=\"1-makefile\">1. Makefile\u003C/h2>\n\u003Cp>The Makefile does the bulk of the scripting. Bash scripts pile up quickly and require boilerplate to do even the most basic command parsing or sequence control. So, makefiles.\u003C/p>\n\u003Cp>I put this together by scouring \u003Ca href=\"https://atuin.sh/\">my bash history\u003C/a> for the \u003Ca href=\"https://aws.amazon.com/cli/\">aws-cli\u003C/a> commands entered by following the \u003Ca href=\"https://docs.aws.amazon.com/lambda/latest/dg/python-image.html\">documentation for deploying a python container image\u003C/a>.\u003C/p>\n\u003Cp>There are a few steps:\u003C/p>\n\u003Col>\n\u003Cli>Create the ECR registry\n\u003Cul>\n\u003Cli>authenticate the docker-cli so it canpublish\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Build the docker container for lambda\u003C/li>\n\u003Cli>Create the lambda function\u003C/li>\n\u003Cli>Update the lambda code with the latest container image\u003C/li>\n\u003C/ol>\n\u003Cp>The makefile has a few variables for configuration and is able to string together sequences of commands. .I think this is much easier than using bash scripts, even if Makefiles are somewhat archaic. LLMs help get over the syntax hump with ease.\u003C/p>\n\u003Ch2 id=\"2-dockerfile\">2. Dockerfile\u003C/h2>\n\u003Cp>Why Docker?\u003C/p>\n\u003Cp>The reason: Python dependencies.\u003C/p>\n\u003Cp>Of course, you can simply upload a .zip archive and skip a bunch of steps, but only if your application and its dependencies are less that 50mb zipped. Popular python libraries did not receive this memo.\u003C/p>\n\u003Cp>The code I needed to deploy trains a simple model and runs an embeddings search. Like most ml code, it uses pandas, numpy, and scikit-learn, easily smashing through the 50mb cutoff for a one-shot upload.\u003C/p>\n\u003Cp>Fortunately, the sample dockerfile provided by AWS is short and clear.\u003C/p>\n\u003Cp>The only gotcha is remembering to build the image with \u003Ccode>--platform linux/amd64\u003C/code> to build dependencies correctly for lambda.\u003C/p>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>Yeah so I really understand is why platforms like Vercel exist and are widely used.\u003C/p>\n\u003Cp>There is a lot of yak-shaving here.\u003C/p>\n\u003Cp>My ideal developer experience is “here is my code” — having to create a container registry, build a container, publish it to the registry, and \u003Cem>then\u003C/em> deploy your code is a painful developer journey.\u003C/p>\n\u003Cp>I’m writing this down so that the next time I need to do this, I can copy these two files and update the post for whatever has changed in the meantime.\u003C/p>\n\u003Ch2 id=\"source\">Source\u003C/h2>\n\u003Cp>Makefile\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"makefile\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">FN_NAME\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">ROLE_ARN\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">AWS_ID\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#ABB2BF\">=\u003C/span>\u003Cspan style=\"color:#E5C07B\">us-west-2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">all\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003Cspan style=\"color:#E06C75\"> build push\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># build the image\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">build\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\tdocker build --platform linux/amd64 -t \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">:prod .\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># push the image to the ECR registry\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">push\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\tdocker tag \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">:prod \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">AWS_ID\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.dkr.ecr.\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.amazonaws.com/\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">:latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\tdocker push \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">AWS_ID\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.dkr.ecr.\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.amazonaws.com/\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">:latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># update the lambda function\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">update\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\taws lambda update-function-code \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t  --function-name \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">FN_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#56B6C2\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t  --image-uri \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">AWS_ID\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.dkr.ecr.\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.amazonaws.com/\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">:latest \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--output yaml-stream\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># create the lambda function\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">create\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\taws lambda create-function \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--function-name \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">FN_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#56B6C2\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--package-type Image \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--code ImageUri=\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">AWS_ID\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.dkr.ecr.\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.amazonaws.com/\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">CONTAINER_NAME\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">:latest \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--role \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">ROLE_ARN\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># create the ECR registry\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">registry\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\taws ecr get-login-password --region \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\"> | docker login --username AWS --password-stdin \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">AWS_ID\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.dkr.ecr.\u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#E5C07B\">.amazonaws.com\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\taws ecr create-repository \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--repository-name reticle_similar_profiles \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--region \u003C/span>\u003Cspan style=\"color:#98C379\">$(\u003C/span>\u003Cspan style=\"color:#E06C75\">REGION\u003C/span>\u003Cspan style=\"color:#98C379\">)\u003C/span>\u003Cspan style=\"color:#56B6C2\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--image-scanning-configuration scanOnPush=true \u003C/span>\u003Cspan style=\"color:#56B6C2\">\\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E5C07B\">\t\t--image-tag-mutability MUTABLE\t\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#56B6C2\">.PHONY\u003C/span>\u003Cspan style=\"color:#ABB2BF\">:\u003C/span>\u003Cspan style=\"color:#E06C75\"> all build push update create registry\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Dockerfile\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"dockerfile\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">FROM\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> public.ecr.aws/lambda/python:3.11\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># Copy requirements.txt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">COPY\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> requirements.txt ${LAMBDA_TASK_ROOT}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># Install the specified packages\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">RUN\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> pip install -r requirements.txt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># Copy function code\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">COPY\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> lambda_function.py ${LAMBDA_TASK_ROOT}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">COPY\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> data.csv ${LAMBDA_TASK_ROOT}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#7F848E;font-style:italic\"># Set the CMD to your handler (could also be done as a parameter override outside of the Dockerfile)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">CMD\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> [ \u003C/span>\u003Cspan style=\"color:#98C379\">\"lambda_function.handler\"\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> ]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":1594,"imagePaths":1606,"frontmatter":1607},[1595,1596,1599,1602,1603],{"depth":27,"slug":782,"text":783},{"depth":27,"slug":1597,"text":1598},"1-makefile","1. Makefile",{"depth":27,"slug":1600,"text":1601},"2-dockerfile","2. Dockerfile",{"depth":27,"slug":467,"text":468},{"depth":27,"slug":1604,"text":1605},"source","Source",[],{"title":1583,"description":1584,"createdAt":1608,"categories":1609,"type":1028},["Date","2023-12-10T00:00:00.000Z"],[1027,1108,1587],"computers/web-development/nginx-certs",{"id":1610,"data":1612,"body":1617,"filePath":1618,"digest":1619,"rendered":1620},{"title":1613,"description":1614,"createdAt":1615,"categories":1616,"type":1028},"Nginx Certs","How to setup ssl with Certbot for Nginx",["Date","2024-01-13T00:00:00.000Z"],[1027,1108],"For posterity, this is how I set up the certs for dev sites that need them. I've had to set this up a few times over the last year or so and I chronically forget how to do it. I wrote down the instructions for myself and now I'm putting them here.\n\nInstall Nginx and Certbot\n\n```bash\nsudo apt-get install nginx certbot python3-certbot-nginx\nsudo certbot --nginx -d \u003Cdomain-name-here>\n```\n\nThen add the following config to the `https server` directive in `/etc/nginx/sites-available/default`. The http server is automatically redirected by certbot.\n\n```nginx\nlocation / {\n\tproxy_set_header Host $host;\n\tproxy_pass http://localhost:8080;\n\n\tproxy_buffering off;\n\tproxy_cache off;\n\tproxy_set_header Connection '';\n\tproxy_http_version 1.1;\n\tchunked_transfer_encoding off;\n}\n```\n\nCheck Nginx config and reload\n\n```bash\nsudo nginx -t\nsudo nginx -s reload\n```","src/content/wiki/computers/web-development/nginx-certs.md","3414ac94a4718258",{"html":1621,"metadata":1622},"\u003Cp>For posterity, this is how I set up the certs for dev sites that need them. I’ve had to set this up a few times over the last year or so and I chronically forget how to do it. I wrote down the instructions for myself and now I’m putting them here.\u003C/p>\n\u003Cp>Install Nginx and Certbot\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">sudo\u003C/span>\u003Cspan style=\"color:#98C379\"> apt-get\u003C/span>\u003Cspan style=\"color:#98C379\"> install\u003C/span>\u003Cspan style=\"color:#98C379\"> nginx\u003C/span>\u003Cspan style=\"color:#98C379\"> certbot\u003C/span>\u003Cspan style=\"color:#98C379\"> python3-certbot-nginx\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">sudo\u003C/span>\u003Cspan style=\"color:#98C379\"> certbot\u003C/span>\u003Cspan style=\"color:#D19A66\"> --nginx\u003C/span>\u003Cspan style=\"color:#D19A66\"> -d\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#98C379\">domain-name-her\u003C/span>\u003Cspan style=\"color:#ABB2BF\">e>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Then add the following config to the \u003Ccode>https server\u003C/code> directive in \u003Ccode>/etc/nginx/sites-available/default\u003C/code>. The http server is automatically redirected by certbot.\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"nginx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">location\u003C/span>\u003Cspan style=\"color:#ABB2BF\"> / {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tproxy_set_header \u003C/span>\u003Cspan style=\"color:#ABB2BF\">Host $\u003C/span>\u003Cspan style=\"color:#E06C75\">host\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tproxy_pass \u003C/span>\u003Cspan style=\"color:#ABB2BF\">http://localhost:8080;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tproxy_buffering \u003C/span>\u003Cspan style=\"color:#D19A66\">off\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tproxy_cache \u003C/span>\u003Cspan style=\"color:#D19A66\">off\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tproxy_set_header \u003C/span>\u003Cspan style=\"color:#ABB2BF\">Connection \u003C/span>\u003Cspan style=\"color:#98C379\">''\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tproxy_http_version \u003C/span>\u003Cspan style=\"color:#D19A66\">1.1\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C678DD\">\tchunked_transfer_encoding \u003C/span>\u003Cspan style=\"color:#D19A66\">off\u003C/span>\u003Cspan style=\"color:#ABB2BF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#ABB2BF\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Check Nginx config and reload\u003C/p>\n\u003Cpre class=\"astro-code one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">sudo\u003C/span>\u003Cspan style=\"color:#98C379\"> nginx\u003C/span>\u003Cspan style=\"color:#D19A66\"> -t\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#61AFEF\">sudo\u003C/span>\u003Cspan style=\"color:#98C379\"> nginx\u003C/span>\u003Cspan style=\"color:#D19A66\"> -s\u003C/span>\u003Cspan style=\"color:#98C379\"> reload\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":1623,"imagePaths":1624,"frontmatter":1625},[],[],{"title":1613,"description":1614,"createdAt":1626,"categories":1627,"type":1028},["Date","2024-01-13T00:00:00.000Z"],[1027,1108]]